diff --git a/packages/nouns-webapp/.babelrc b/packages/nouns-webapp/.babelrc
new file mode 100644
index 00000000..971ac486
--- /dev/null
+++ b/packages/nouns-webapp/.babelrc
@@ -0,0 +1,5 @@
+{
+  "plugins": [
+    "macros"
+  ]
+}
diff --git a/packages/nouns-webapp/lingui.config.ts b/packages/nouns-webapp/lingui.config.ts
new file mode 100644
index 00000000..7d1f0af7
--- /dev/null
+++ b/packages/nouns-webapp/lingui.config.ts
@@ -0,0 +1,32 @@
+/**
+ * Taken from https://github.com/Uniswap/interface/blob/main/lingui.config.ts with minor modifications
+ */
+const linguiConfig = {
+  catalogs: [
+    {
+      path: '<rootDir>/src/locales/{locale}',
+      include: ['<rootDir>/src'],
+    },
+  ],
+  compileNamespace: 'cjs',
+  fallbackLocales: {
+    default: 'en-US',
+    pseudo: 'en-US'
+  },
+  format: 'po',
+  formatOptions: {
+    lineNumbers: false,
+  },
+  locales: [
+    'en-US',
+    'ja-JP',
+    'pseudo',
+  ],
+  orderBy: 'messageId',
+  rootDir: '.',
+  runtimeConfigModule: ['@lingui/core', 'i18n'],
+  sourceLocale: 'en-US',
+  pseudoLocale: 'pseudo',
+}
+
+export default linguiConfig
diff --git a/packages/nouns-webapp/package.json b/packages/nouns-webapp/package.json
index d068f41f..1eb3c252 100644
--- a/packages/nouns-webapp/package.json
+++ b/packages/nouns-webapp/package.json
@@ -3,6 +3,11 @@
   "version": "0.1.0",
   "private": true,
   "dependencies": {
+    "@lingui/detect-locale": "^3.13.2",
+    "@lingui/cli": "^3.9.0",
+    "@lingui/core": "^3.9.0",
+    "@lingui/macro": "^3.9.0",
+    "@lingui/react": "^3.9.0",
     "@apollo/client": "^3.3.21",
     "bad-words": "^3.0.4",
     "@davatar/react": "^1.8.1",
@@ -66,7 +71,11 @@
     "start": "react-scripts start",
     "build": "react-scripts build",
     "test": "react-scripts test",
-    "eject": "react-scripts eject"
+    "eject": "react-scripts eject",
+    "i18n:extract": "lingui extract",
+    "i18n:compile": "lingui compile",
+    "i18n:pseudo": "lingui extract --locale pseudo && lingui compile"
+
   },
   "eslintConfig": {
     "extends": [
diff --git a/packages/nouns-webapp/src/components/AuctionActivity/index.tsx b/packages/nouns-webapp/src/components/AuctionActivity/index.tsx
index ceb5e396..33e62647 100644
--- a/packages/nouns-webapp/src/components/AuctionActivity/index.tsx
+++ b/packages/nouns-webapp/src/components/AuctionActivity/index.tsx
@@ -22,6 +22,7 @@ import { faInfoCircle } from '@fortawesome/free-solid-svg-icons';
 import NounInfoCard from '../NounInfoCard';
 import { useAppSelector } from '../../hooks';
 import BidHistoryModal from '../BidHistoryModal';
+import { Trans } from '@lingui/macro';
 
 const openEtherscanBidHistory = () => {
   const url = buildEtherscanAddressLink(config.addresses.nounsAuctionHouseProxy);
@@ -130,7 +131,7 @@ const AuctionActivity: React.FC<AuctionActivityProps> = (props: AuctionActivityP
             <Col lg={12} className={classes.fomoNounsLink}>
               <FontAwesomeIcon icon={faInfoCircle} />
               <a href={'https://fomonouns.wtf'} target={'_blank'} rel="noreferrer">
-                Help mint the next Noun
+                <Trans>Help mint the next Noun</Trans>
               </a>
             </Col>
           </Row>
diff --git a/packages/nouns-webapp/src/components/AuctionActivityDateHeadline/index.tsx b/packages/nouns-webapp/src/components/AuctionActivityDateHeadline/index.tsx
index 0223a2e0..6de9f619 100644
--- a/packages/nouns-webapp/src/components/AuctionActivityDateHeadline/index.tsx
+++ b/packages/nouns-webapp/src/components/AuctionActivityDateHeadline/index.tsx
@@ -3,6 +3,7 @@ import dayjs from 'dayjs';
 import utc from 'dayjs/plugin/utc';
 import classes from './AuctionActivityDateHeadline.module.css';
 import { useAppSelector } from '../../hooks';
+import { i18n } from '@lingui/core';
 
 dayjs.extend(utc);
 
@@ -17,7 +18,9 @@ const AuctionActivityDateHeadline: React.FC<{ startTime: BigNumber }> = props =>
       <h4
         className={classes.date}
         style={{ color: isCool ? 'var(--brand-cool-light-text)' : 'var(--brand-warm-light-text)' }}
-      >{`${auctionStartTimeUTC}`}</h4>
+      >
+        {i18n.date(auctionStartTimeUTC, { month: 'long', year: 'numeric', day: '2-digit' })}
+      </h4>
     </div>
   );
 };
diff --git a/packages/nouns-webapp/src/components/AuctionActivityNounTitle/index.tsx b/packages/nouns-webapp/src/components/AuctionActivityNounTitle/index.tsx
index b8dc205f..7ce270d4 100644
--- a/packages/nouns-webapp/src/components/AuctionActivityNounTitle/index.tsx
+++ b/packages/nouns-webapp/src/components/AuctionActivityNounTitle/index.tsx
@@ -1,13 +1,13 @@
 import { BigNumber } from 'ethers';
 import classes from './AuctionActivityNounTitle.module.css';
+import { Trans } from '@lingui/macro';
 
 const AuctionActivityNounTitle: React.FC<{ nounId: BigNumber; isCool?: boolean }> = props => {
   const { nounId, isCool } = props;
-  const nounIdContent = `Noun ${nounId.toString()}`;
   return (
     <div className={classes.wrapper}>
       <h1 style={{ color: isCool ? 'var(--brand-cool-dark-text)' : 'var(--brand-warm-dark-text)' }}>
-        {nounIdContent}
+        <Trans>Noun {nounId.toString()}</Trans>
       </h1>
     </div>
   );
diff --git a/packages/nouns-webapp/src/components/AuctionTimer/index.tsx b/packages/nouns-webapp/src/components/AuctionTimer/index.tsx
index 4f65a6f1..74661b2e 100644
--- a/packages/nouns-webapp/src/components/AuctionTimer/index.tsx
+++ b/packages/nouns-webapp/src/components/AuctionTimer/index.tsx
@@ -6,6 +6,8 @@ import { useState, useEffect, useRef } from 'react';
 import { Row, Col } from 'react-bootstrap';
 import { useAppSelector } from '../../hooks';
 import clsx from 'clsx';
+import { Trans } from '@lingui/macro';
+import { i18n } from '@lingui/core';
 
 dayjs.extend(duration);
 
@@ -22,7 +24,7 @@ const AuctionTimer: React.FC<{
   auctionTimerRef.current = auctionTimer;
 
   const timerDuration = dayjs.duration(auctionTimerRef.current, 's');
-  const endTime = dayjs().add(auctionTimerRef.current, 's').local();
+  const endTimeUnix = Math.floor(Date.now() / 1000) + auctionTimerRef.current;
 
   // timer logic
   useEffect(() => {
@@ -43,8 +45,16 @@ const AuctionTimer: React.FC<{
     }
   }, [auction, auctionTimer]);
 
-  const auctionContentLong = auctionEnded ? 'Auction ended' : 'Auction ends in';
-  const auctionContentShort = auctionEnded ? 'Auction ended' : 'Time left';
+  const auctionContentLong = auctionEnded ? (
+    <Trans>Auction ended</Trans>
+  ) : (
+    <Trans>Auction ends in</Trans>
+  );
+  const auctionContentShort = auctionEnded ? (
+    <Trans>Auction ended</Trans>
+  ) : (
+    <Trans>Time left</Trans>
+  );
 
   const flooredMinutes = Math.floor(timerDuration.minutes());
   const flooredSeconds = Math.floor(timerDuration.seconds());
@@ -63,11 +73,18 @@ const AuctionTimer: React.FC<{
             color: isCool ? 'var(--brand-cool-light-text)' : 'var(--brand-warm-light-text)',
           }}
         >
-          {timerToggle
-            ? window.innerWidth < 992
-              ? auctionContentShort
-              : auctionContentLong
-            : `Ends on ${endTime.format('MMM Do')} at`}
+          {timerToggle ? (
+            window.innerWidth < 992 ? (
+              auctionContentShort
+            ) : (
+              auctionContentLong
+            )
+          ) : (
+            <>
+              <Trans>Ends on</Trans> {i18n.date(new Date(endTimeUnix * 1000), { month: 'short' })}{' '}
+              {i18n.date(new Date(endTimeUnix * 1000), { day: 'numeric' })} <Trans>at</Trans>
+            </>
+          )}
         </h4>
       </Col>
       <Col xs="auto" lg={12}>
@@ -80,21 +97,27 @@ const AuctionTimer: React.FC<{
           >
             <div className={classes.timerSection}>
               <span>
-                {`${Math.floor(timerDuration.hours())}`}
-                <span className={classes.small}>h</span>
+                <Trans>
+                  {`${Math.floor(timerDuration.hours())}`}
+                  <span className={classes.small}>h</span>
+                </Trans>
               </span>
             </div>
             <div className={classes.timerSection}>
-              <span>
-                {`${flooredMinutes}`}
-                <span className={classes.small}>m</span>
-              </span>
+              <Trans>
+                <span>
+                  {`${flooredMinutes}`}
+                  <span className={classes.small}>m</span>
+                </span>
+              </Trans>
             </div>
             <div className={classes.timerSectionFinal}>
-              <span>
-                {`${flooredSeconds}`}
-                <span className={classes.small}>s</span>
-              </span>
+              <Trans>
+                <span>
+                  {`${flooredSeconds}`}
+                  <span className={classes.small}>s</span>
+                </span>
+              </Trans>
             </div>
           </h2>
         ) : (
@@ -105,7 +128,7 @@ const AuctionTimer: React.FC<{
             }}
           >
             <div className={clsx(classes.timerSection, classes.clockSection)}>
-              <span>{endTime.format('h:mm:ss a')}</span>
+              <span>{i18n.date(new Date(endTimeUnix * 1000), { timeStyle: 'medium' })}</span>
             </div>
           </h2>
         )}
diff --git a/packages/nouns-webapp/src/components/Banner/index.tsx b/packages/nouns-webapp/src/components/Banner/index.tsx
index dddee061..c89f8a63 100644
--- a/packages/nouns-webapp/src/components/Banner/index.tsx
+++ b/packages/nouns-webapp/src/components/Banner/index.tsx
@@ -3,6 +3,7 @@ import Section from '../../layout/Section';
 import { Col } from 'react-bootstrap';
 import calendar_noun from '../../assets/calendar_noun.png';
 import Noun from '../Noun';
+import { Trans } from '@lingui/macro';
 
 const Banner = () => {
   return (
@@ -10,11 +11,11 @@ const Banner = () => {
       <Col lg={6}>
         <div className={classes.wrapper}>
           <h1>
-            ONE NOUN,
+            <Trans>ONE NOUN,</Trans>
             <br />
-            EVERY DAY,
+            <Trans>EVERY DAY,</Trans>
             <br />
-            FOREVER.
+            <Trans>FOREVER.</Trans>
           </h1>
         </div>
       </Col>
diff --git a/packages/nouns-webapp/src/components/Bid/index.tsx b/packages/nouns-webapp/src/components/Bid/index.tsx
index 1aa2fe1e..048c1e3f 100644
--- a/packages/nouns-webapp/src/components/Bid/index.tsx
+++ b/packages/nouns-webapp/src/components/Bid/index.tsx
@@ -13,6 +13,7 @@ import { NounsAuctionHouseFactory } from '@nouns/sdk';
 import config from '../../config';
 import WalletConnectModal from '../WalletConnectModal';
 import SettleManuallyBtn from '../SettleManuallyBtn';
+import { Trans } from '@lingui/macro';
 
 const computeMinimumNextBid = (
   currentBid: BigNumber,
@@ -58,9 +59,10 @@ const Bid: React.FC<{
   const bidInputRef = useRef<HTMLInputElement>(null);
 
   const [bidInput, setBidInput] = useState('');
+
   const [bidButtonContent, setBidButtonContent] = useState({
     loading: false,
-    content: auctionEnded ? 'Settle' : 'Place bid',
+    content: auctionEnded ? <Trans>Settle</Trans> : <Trans>Place bid</Trans>,
   });
 
   const [showConnectModal, setShowConnectModal] = useState(false);
@@ -106,10 +108,13 @@ const Bid: React.FC<{
     if (currentBid(bidInputRef).isLessThan(minBid)) {
       setModal({
         show: true,
-        title: 'Insufficient bid amount 🤏',
-        message: `Please place a bid higher than or equal to the minimum bid amount of ${minBidEth(
-          minBid,
-        )} ETH.`,
+        title: <Trans>Insufficient bid amount 🤏</Trans>,
+        message: (
+          <Trans>
+            Please place a bid higher than or equal to the minimum bid amount of {minBidEth(minBid)}{' '}
+            ETH
+          </Trans>
+        ),
       });
       setBidInput(minBidEth(minBid));
       return;
@@ -147,11 +152,11 @@ const Bid: React.FC<{
     if (isMiningUserTx && auction.bidder === account && isCorrectTx) {
       placeBidState.status = 'Success';
       setModal({
-        title: 'Success',
-        message: `Bid was placed successfully!`,
+        title: <Trans>Success</Trans>,
+        message: <Trans>Bid was placed successfully!</Trans>,
         show: true,
       });
-      setBidButtonContent({ loading: false, content: 'Place bid' });
+      setBidButtonContent({ loading: false, content: <Trans>Place bid</Trans> });
       clearBidInput();
     }
   }, [auction, placeBidState, account, setModal]);
@@ -162,27 +167,35 @@ const Bid: React.FC<{
       case 'None':
         setBidButtonContent({
           loading: false,
-          content: 'Place bid',
+          content: <Trans>Place bid</Trans>,
         });
         break;
       case 'Mining':
-        setBidButtonContent({ loading: true, content: '' });
+        setBidButtonContent({ loading: true, content: <></> });
         break;
       case 'Fail':
         setModal({
-          title: 'Transaction Failed',
-          message: placeBidState.errorMessage ? placeBidState.errorMessage : 'Please try again.',
+          title: <Trans>Transaction Failed</Trans>,
+          message: placeBidState.errorMessage ? (
+            placeBidState.errorMessage
+          ) : (
+            <Trans>Please try again.</Trans>
+          ),
           show: true,
         });
-        setBidButtonContent({ loading: false, content: 'Bid' });
+        setBidButtonContent({ loading: false, content: <Trans>Bid</Trans> });
         break;
       case 'Exception':
         setModal({
-          title: 'Error',
-          message: placeBidState.errorMessage ? placeBidState.errorMessage : 'Please try again.',
+          title: <Trans>Error</Trans>,
+          message: placeBidState.errorMessage ? (
+            placeBidState.errorMessage
+          ) : (
+            <Trans>Please try again.</Trans>
+          ),
           show: true,
         });
-        setBidButtonContent({ loading: false, content: 'Bid' });
+        setBidButtonContent({ loading: false, content: <Trans>Bid</Trans> });
         break;
     }
   }, [placeBidState, auctionEnded, setModal]);
@@ -193,39 +206,43 @@ const Bid: React.FC<{
       case 'None':
         setBidButtonContent({
           loading: false,
-          content: 'Settle Auction',
+          content: <Trans>Settle Auction</Trans>,
         });
         break;
       case 'Mining':
-        setBidButtonContent({ loading: true, content: '' });
+        setBidButtonContent({ loading: true, content: <></> });
         break;
       case 'Success':
         setModal({
-          title: 'Success',
-          message: `Settled auction successfully!`,
+          title: <Trans>Success</Trans>,
+          message: <Trans>Settled auction successfully!</Trans>,
           show: true,
         });
-        setBidButtonContent({ loading: false, content: 'Settle Auction' });
+        setBidButtonContent({ loading: false, content: <Trans>Settle Auction</Trans> });
         break;
       case 'Fail':
         setModal({
-          title: 'Transaction Failed',
-          message: settleAuctionState.errorMessage
-            ? settleAuctionState.errorMessage
-            : 'Please try again.',
+          title: <Trans>Transaction Failed</Trans>,
+          message: settleAuctionState.errorMessage ? (
+            settleAuctionState.errorMessage
+          ) : (
+            <Trans>Please try again.</Trans>
+          ),
           show: true,
         });
-        setBidButtonContent({ loading: false, content: 'Settle Auction' });
+        setBidButtonContent({ loading: false, content: <Trans>Settle Auction</Trans> });
         break;
       case 'Exception':
         setModal({
-          title: 'Error',
-          message: settleAuctionState.errorMessage
-            ? settleAuctionState.errorMessage
-            : 'Please try again.',
+          title: <Trans>Error</Trans>,
+          message: settleAuctionState.errorMessage ? (
+            settleAuctionState.errorMessage
+          ) : (
+            <Trans>Please try again.</Trans>
+          ),
           show: true,
         });
-        setBidButtonContent({ loading: false, content: 'Settle Auction' });
+        setBidButtonContent({ loading: false, content: <Trans>Settle Auction</Trans> });
         break;
     }
   }, [settleAuctionState, auctionEnded, setModal]);
@@ -235,7 +252,6 @@ const Bid: React.FC<{
   const isDisabled =
     placeBidState.status === 'Mining' || settleAuctionState.status === 'Mining' || !activeAccount;
 
-  const minBidCopy = `Ξ ${minBidEth(minBid)} or more`;
   const fomoNounsBtnOnClickHandler = () => {
     // Open Fomo Nouns in a new tab
     window.open('https://fomonouns.wtf', '_blank')?.focus();
@@ -252,7 +268,13 @@ const Bid: React.FC<{
         {!auctionEnded && (
           <>
             <span className={classes.customPlaceholderBidAmt}>
-              {!auctionEnded && !bidInput ? minBidCopy : ''}
+              {!auctionEnded && !bidInput ? (
+                <>
+                  Ξ {minBidEth(minBid)} <Trans>or more</Trans>
+                </>
+              ) : (
+                ''
+              )}
             </span>
             <FormControl
               className={classes.bidInput}
@@ -276,7 +298,7 @@ const Bid: React.FC<{
           <>
             <Col lg={12} className={classes.voteForNextNounBtnWrapper}>
               <Button className={classes.bidBtnAuctionEnded} onClick={fomoNounsBtnOnClickHandler}>
-                Vote for the next Noun ⌐◧-◧
+                <Trans>Vote for the next Noun ⌐◧-◧</Trans>
               </Button>
             </Col>
             {/* Only show force settle button if wallet connected */}
diff --git a/packages/nouns-webapp/src/components/BidHistoryBtn/index.tsx b/packages/nouns-webapp/src/components/BidHistoryBtn/index.tsx
index 95342e23..5118f760 100644
--- a/packages/nouns-webapp/src/components/BidHistoryBtn/index.tsx
+++ b/packages/nouns-webapp/src/components/BidHistoryBtn/index.tsx
@@ -1,6 +1,7 @@
 import bidBtnClasses from './BidHistoryBtn.module.css';
 
 import { useAppSelector } from '../../hooks';
+import { Trans } from '@lingui/macro';
 
 const BidHistoryBtn: React.FC<{ onClick: () => void }> = props => {
   const { onClick } = props;
@@ -12,7 +13,9 @@ const BidHistoryBtn: React.FC<{ onClick: () => void }> = props => {
       className={isCool ? bidBtnClasses.bidHistoryWrapperCool : bidBtnClasses.bidHistoryWrapperWarm}
       onClick={onClick}
     >
-      <div className={bidBtnClasses.bidHistory}>View all bids</div>
+      <div className={bidBtnClasses.bidHistory}>
+        <Trans>View all bids</Trans>
+      </div>
     </div>
   );
 };
diff --git a/packages/nouns-webapp/src/components/BidHistoryModal/index.tsx b/packages/nouns-webapp/src/components/BidHistoryModal/index.tsx
index 5ad5694d..4b4d3bf3 100644
--- a/packages/nouns-webapp/src/components/BidHistoryModal/index.tsx
+++ b/packages/nouns-webapp/src/components/BidHistoryModal/index.tsx
@@ -7,6 +7,7 @@ import { StandaloneNounRoundedCorners } from '../StandaloneNoun';
 import { useAuctionBids } from '../../wrappers/onDisplayAuction';
 import { Bid } from '../../utils/types';
 import BidHistoryModalRow from '../BidHistoryModalRow';
+import { Trans } from '@lingui/macro';
 
 export const Backdrop: React.FC<{ onDismiss: () => void }> = props => {
   return <div className={classes.backdrop} onClick={props.onDismiss} />;
@@ -36,8 +37,12 @@ const BidHistoryModalOverlay: React.FC<{
             </div>
 
             <div className={classes.title}>
-              <h2>Bids for</h2>
-              <h1>Noun {auction && auction.nounId.toString()}</h1>
+              <h2>
+                <Trans>Bids for</Trans>
+              </h2>
+              <h1>
+                <Trans>Noun</Trans> {auction && auction.nounId.toString()}
+              </h1>
             </div>
           </div>
           <div className={classes.bidWrapper}>
@@ -48,7 +53,9 @@ const BidHistoryModalOverlay: React.FC<{
                 })}
               </ul>
             ) : (
-              <div className={classes.nullStateText}>Bids will appear here</div>
+              <div className={classes.nullStateText}>
+                <Trans>Bids will appear here</Trans>
+              </div>
             )}
           </div>
         </div>
diff --git a/packages/nouns-webapp/src/components/BidHistoryModalRow/index.tsx b/packages/nouns-webapp/src/components/BidHistoryModalRow/index.tsx
index 6dcdd01e..4cca20fa 100644
--- a/packages/nouns-webapp/src/components/BidHistoryModalRow/index.tsx
+++ b/packages/nouns-webapp/src/components/BidHistoryModalRow/index.tsx
@@ -4,7 +4,6 @@ import { ExternalLinkIcon } from '@heroicons/react/solid';
 import { useShortAddress } from '../ShortAddress';
 import { buildEtherscanTxLink } from '../../utils/etherscan';
 import TruncatedAmount from '../TruncatedAmount';
-import dayjs from 'dayjs';
 import BigNumber from 'bignumber.js';
 import { BigNumber as EthersBN } from '@ethersproject/bignumber';
 import { Bid } from '../../utils/types';
@@ -15,7 +14,7 @@ import Davatar from '@davatar/react';
 import { useEthers } from '@usedapp/core';
 import { useReverseENSLookUp } from '../../utils/ensLookup';
 import { containsBlockedText } from '../../utils/moderation/containsBlockedText';
-
+import { i18n } from '@lingui/core';
 interface BidHistoryModalRowProps {
   bid: Bid;
   index: number;
@@ -34,9 +33,6 @@ const BidHistoryModalRow: React.FC<BidHistoryModalRowProps> = props => {
   const { library: provider } = useEthers();
 
   const bidAmount = <TruncatedAmount amount={new BigNumber(EthersBN.from(bid.value).toString())} />;
-  const date = `${dayjs(bid.timestamp.toNumber() * 1000).format('MMM DD')} at ${dayjs(
-    bid.timestamp.toNumber() * 1000,
-  ).format('hh:mm a')}`;
 
   const ens = useReverseENSLookUp(bid.sender);
   const ensMatchesBlocklistRegex = containsBlockedText(ens || '', 'en');
@@ -62,7 +58,12 @@ const BidHistoryModalRow: React.FC<BidHistoryModalRowProps> = props => {
                     />
                   )}
                   <br />
-                  <div className={classes.bidDate}>{date}</div>
+                  <div className={classes.bidDate}>
+                    {i18n.date(new Date(bid.timestamp.toNumber() * 1000), {
+                      dateStyle: 'medium',
+                      timeStyle: 'short',
+                    })}
+                  </div>
                 </span>
               </div>
             </div>
diff --git a/packages/nouns-webapp/src/components/CreateProposalButton/index.tsx b/packages/nouns-webapp/src/components/CreateProposalButton/index.tsx
index 80079c4b..c5367929 100644
--- a/packages/nouns-webapp/src/components/CreateProposalButton/index.tsx
+++ b/packages/nouns-webapp/src/components/CreateProposalButton/index.tsx
@@ -1,4 +1,6 @@
 import { Button, Spinner } from 'react-bootstrap';
+import { Trans } from '@lingui/macro';
+import { i18n } from '@lingui/core';
 
 const CreateProposalButton = ({
   className,
@@ -19,15 +21,19 @@ const CreateProposalButton = ({
 }) => {
   const buttonText = () => {
     if (hasActiveOrPendingProposal) {
-      return 'You already have an active or pending proposal';
+      return <Trans>You already have an active or pending proposal</Trans>;
     }
     if (!hasEnoughVote) {
       if (proposalThreshold) {
-        return `You must have ${proposalThreshold + 1} votes to submit a proposal`;
+        return (
+          <Trans>
+            You must have {i18n.number(proposalThreshold || 0 + 1)} votes to submit a proposal
+          </Trans>
+        );
       }
-      return "You don't have enough votes to submit a proposal";
+      return <Trans>You don't have enough votes to submit a proposal</Trans>;
     }
-    return 'Create Proposal';
+    return <Trans>Create Proposal</Trans>;
   };
 
   return (
diff --git a/packages/nouns-webapp/src/components/CurrentBid/index.tsx b/packages/nouns-webapp/src/components/CurrentBid/index.tsx
index f180d1c0..d9f4fb49 100644
--- a/packages/nouns-webapp/src/components/CurrentBid/index.tsx
+++ b/packages/nouns-webapp/src/components/CurrentBid/index.tsx
@@ -4,6 +4,7 @@ import TruncatedAmount from '../TruncatedAmount';
 import { Row, Col } from 'react-bootstrap';
 import { useAppSelector } from '../../hooks';
 import clsx from 'clsx';
+import { Trans } from '@lingui/macro';
 
 /**
  * Passible to CurrentBid as `currentBid` prop to indicate that
@@ -19,7 +20,7 @@ type BidNa = typeof BID_N_A;
 const CurrentBid: React.FC<{ currentBid: BigNumber | BidNa; auctionEnded: boolean }> = props => {
   const { currentBid, auctionEnded } = props;
   const isCool = useAppSelector(state => state.application.isCoolBackground);
-  const titleContent = auctionEnded ? 'Winning bid' : 'Current bid';
+  const titleContent = auctionEnded ? <Trans>Winning bid</Trans> : <Trans>Current bid</Trans>;
 
   return (
     <Row className={clsx(classes.wrapper, classes.container, classes.section)}>
diff --git a/packages/nouns-webapp/src/components/Documentation/index.tsx b/packages/nouns-webapp/src/components/Documentation/index.tsx
index 234201d1..e9937c62 100644
--- a/packages/nouns-webapp/src/components/Documentation/index.tsx
+++ b/packages/nouns-webapp/src/components/Documentation/index.tsx
@@ -3,175 +3,263 @@ import { Col } from 'react-bootstrap';
 import classes from './Documentation.module.css';
 import Accordion from 'react-bootstrap/Accordion';
 import Link from '../Link';
+import { Trans } from '@lingui/macro';
 
 const Documentation = () => {
   const cryptopunksLink = (
-    <Link text="CryptoPunks" url="https://www.larvalabs.com/cryptopunks" leavesPage={true} />
+    <Link
+      text={<Trans>Cryptopunks</Trans>}
+      url="https://www.larvalabs.com/cryptopunks"
+      leavesPage={true}
+    />
+  );
+  const playgroundLink = (
+    <Link text={<Trans>Playground</Trans>} url="/playground" leavesPage={false} />
   );
-  const playgroundLink = <Link text="Playground" url="/playground" leavesPage={false} />;
   const publicDomainLink = (
     <Link
-      text="public domain"
+      text={<Trans>public domain</Trans>}
       url="https://creativecommons.org/publicdomain/zero/1.0/"
       leavesPage={true}
     />
   );
   const compoundGovLink = (
-    <Link text="Compound Governance" url="https://compound.finance/governance" leavesPage={true} />
+    <Link
+      text={<Trans>Compound Governance</Trans>}
+      url="https://compound.finance/governance"
+      leavesPage={true}
+    />
   );
   return (
     <Section fullWidth={false}>
       <Col lg={{ span: 10, offset: 1 }}>
         <div className={classes.headerWrapper}>
-          <h1>WTF?</h1>
+          <h1>
+            <Trans>WTF?</Trans>
+          </h1>
           <p className={classes.aboutText}>
-            Nouns are an experimental attempt to improve the formation of on-chain avatar
-            communities. While projects such as {cryptopunksLink} have attempted to bootstrap
-            digital community and identity, Nouns attempt to bootstrap identity, community,
-            governance, and a treasury that can be used by the community.
+            <Trans>
+              Nouns are an experimental attempt to improve the formation of on-chain avatar
+              communities. While projects such as {cryptopunksLink} have attempted to bootstrap
+              digital community and identity, Nouns attempt to bootstrap identity, community,
+              governance, and a treasury that can be used by the community
+            </Trans>
           </p>
           <p className={classes.aboutText} style={{ paddingBottom: '4rem' }}>
-            Learn more below, or start creating Nouns off-chain using the {playgroundLink}.
+            <Trans>
+              Learn more below, or start creating Nouns off-chain using the {playgroundLink}.
+            </Trans>
           </p>
         </div>
         <Accordion flush>
           <Accordion.Item eventKey="0" className={classes.accordionItem}>
-            <Accordion.Header className={classes.accordionHeader}>Summary</Accordion.Header>
+            <Accordion.Header className={classes.accordionHeader}>
+              <Trans>Summary</Trans>
+            </Accordion.Header>
             <Accordion.Body>
               <ul>
-                <li>Nouns artwork is in the {publicDomainLink}.</li>
-                <li>One Noun is trustlessly auctioned every 24 hours, forever.</li>
-                <li>100% of Noun auction proceeds are trustlessly sent to the treasury.</li>
-                <li>Settlement of one auction kicks off the next.</li>
-                <li>All Nouns are members of Nouns DAO.</li>
-                <li>Nouns DAO uses a fork of {compoundGovLink}.</li>
-                <li>One Noun is equal to one vote.</li>
-                <li>The treasury is controlled exclusively by Nouns via governance.</li>
-                <li>Artwork is generative and stored directly on-chain (not IPFS).</li>
-                <li>No explicit rules exist for attribute scarcity; all Nouns are equally rare.</li>
-                <li>
-                  Nounders receive rewards in the form of Nouns (10% of supply for first 5 years).
+                <li>
+                  <Trans>Nouns artwork is in the {publicDomainLink}.</Trans>
+                </li>
+                <li>
+                  <Trans>One Noun is trustlessly auctioned every 24 hours, forever.</Trans>
+                </li>
+                <li>
+                  <Trans>100% of Noun auction proceeds are trustlessly sent to the treasury.</Trans>
+                </li>
+                <li>
+                  <Trans>Settlement of one auction kicks off the next.</Trans>
+                </li>
+                <li>
+                  <Trans>All Nouns are members of Nouns DAO.</Trans>
+                </li>
+                <li>
+                  <Trans>Nouns DAO uses a fork of {compoundGovLink}.</Trans>
+                </li>
+                <li>
+                  <Trans>One Noun is equal to one vote.</Trans>
+                </li>
+                <li>
+                  <Trans>The treasury is controlled exclusively by Nouns via governance.</Trans>
+                </li>
+                <li>
+                  <Trans>Artwork is generative and stored directly on-chain (not IPFS).</Trans>
+                </li>
+                <li>
+                  <Trans>
+                    No explicit rules exist for attribute scarcity; all Nouns are equally rare.
+                  </Trans>
+                </li>
+                <li>
+                  <Trans>
+                    Nounders receive rewards in the form of Nouns (10% of supply for first 5 years).
+                  </Trans>
                 </li>
               </ul>
             </Accordion.Body>
           </Accordion.Item>
 
           <Accordion.Item eventKey="1" className={classes.accordionItem}>
-            <Accordion.Header className={classes.accordionHeader}>Daily Auctions</Accordion.Header>
+            <Accordion.Header className={classes.accordionHeader}>
+              <Trans>Daily Auctions</Trans>
+            </Accordion.Header>
             <Accordion.Body>
               <p className={classes.aboutText}>
-                The Nouns Auction Contract will act as a self-sufficient Noun generation and
-                distribution mechanism, auctioning one Noun every 24 hours, forever. 100% of auction
-                proceeds (ETH) are automatically deposited in the Nouns DAO treasury, where they are
-                governed by Noun owners.
+                <Trans>
+                  The Nouns Auction Contract will act as a self-sufficient Noun generation and
+                  distribution mechanism, auctioning one Noun every 24 hours, forever. 100% of
+                  auction proceeds (ETH) are automatically deposited in the Nouns DAO treasury,
+                  where they are governed by Noun owners.
+                </Trans>
               </p>
 
               <p className={classes.aboutText}>
-                Each time an auction is settled, the settlement transaction will also cause a new
-                Noun to be minted and a new 24 hour auction to begin.{' '}
+                <Trans>
+                  Each time an auction is settled, the settlement transaction will also cause a new
+                  Noun to be minted and a new 24 hour auction to begin.{' '}
+                </Trans>
               </p>
               <p>
-                While settlement is most heavily incentivized for the winning bidder, it can be
-                triggered by anyone, allowing the system to trustlessly auction Nouns as long as
-                Ethereum is operational and there are interested bidders.
+                <Trans>
+                  While settlement is most heavily incentivized for the winning bidder, it can be
+                  triggered by anyone, allowing the system to trustlessly auction Nouns as long as
+                  Ethereum is operational and there are interested bidders.
+                </Trans>
               </p>
             </Accordion.Body>
           </Accordion.Item>
           <Accordion.Item eventKey="2" className={classes.accordionItem}>
-            <Accordion.Header className={classes.accordionHeader}>Nouns DAO</Accordion.Header>
+            <Accordion.Header className={classes.accordionHeader}>
+              <Trans>Nouns DAO</Trans>
+            </Accordion.Header>
             <Accordion.Body>
-              Nouns DAO utilizes a fork of {compoundGovLink} and is the main governing body of the
-              Nouns ecosystem. The Nouns DAO treasury receives 100% of ETH proceeds from daily Noun
-              auctions. Each Noun is an irrevocable member of Nouns DAO and entitled to one vote in
-              all governance matters. Noun votes are non-transferable (if you sell your Noun the
-              vote goes with it) but delegatable, which means you can assign your vote to someone
-              else as long as you own your Noun.
+              <Trans>
+                Nouns DAO utilizes a fork of {compoundGovLink} and is the main governing body of the
+                Nouns ecosystem. The Nouns DAO treasury receives 100% of ETH proceeds from daily
+                Noun auctions. Each Noun is an irrevocable member of Nouns DAO and entitled to one
+                vote in all governance matters. Noun votes are non-transferable (if you sell your
+                Noun the vote goes with it) but delegatable, which means you can assign your vote to
+                someone else as long as you own your Noun.
+              </Trans>
             </Accordion.Body>
           </Accordion.Item>
           <Accordion.Item eventKey="3" className={classes.accordionItem}>
             <Accordion.Header className={classes.accordionHeader}>
-              Governance ‘Slow Start’
+              <Trans>Governance ‘Slow Start’</Trans>
             </Accordion.Header>
             <Accordion.Body>
               <p>
-                In addition to the precautions taken by Compound Governance, Nounders have given
-                themselves a special veto right to ensure that no malicious proposals can be passed
-                while the Noun supply is low. This veto right will only be used if an obviously
-                harmful governance proposal has been passed, and is intended as a last resort.
+                <Trans>
+                  In addition to the precautions taken by Compound Governance, Nounders have given
+                  themselves a special veto right to ensure that no malicious proposals can be
+                  passed while the Noun supply is low. This veto right will only be used if an
+                  obviously harmful governance proposal has been passed, and is intended as a last
+                  resort.
+                </Trans>
               </p>
               <p>
-                Nounders will proveably revoke this veto right when they deem it safe to do so. This
-                decision will be based on a healthy Noun distribution and a community that is
-                engaged in the governance process.
+                <Trans>
+                  Nounders will proveably revoke this veto right when they deem it safe to do so.
+                  This decision will be based on a healthy Noun distribution and a community that is
+                  engaged in the governance process.
+                </Trans>
               </p>
             </Accordion.Body>
           </Accordion.Item>
           <Accordion.Item eventKey="4" className={classes.accordionItem}>
-            <Accordion.Header className={classes.accordionHeader}>Noun Traits</Accordion.Header>
+            <Accordion.Header className={classes.accordionHeader}>
+              <Trans>Noun Traits</Trans>
+            </Accordion.Header>
             <Accordion.Body>
               <p>
-                Nouns are generated randomly based Ethereum block hashes. There are no 'if'
-                statements or other rules governing Noun trait scarcity, which makes all Nouns
-                equally rare. As of this writing, Nouns are made up of:
+                <Trans>
+                  Nouns are generated randomly based Ethereum block hashes. There are no 'if'
+                  statements or other rules governing Noun trait scarcity, which makes all Nouns
+                  equally rare. As of this writing, Nouns are made up of:
+                </Trans>
               </p>
               <ul>
-                <li>backgrounds (2) </li>
-                <li>bodies (30)</li>
-                <li>accessories (137) </li>
-                <li>heads (234) </li>
-                <li>glasses (21)</li>
+                <li>
+                  <Trans>backgrounds (2) </Trans>
+                </li>
+                <li>
+                  <Trans>bodies (30)</Trans>
+                </li>
+                <li>
+                  <Trans>accessories (137) </Trans>
+                </li>
+                <li>
+                  <Trans>heads (234) </Trans>
+                </li>
+                <li>
+                  <Trans>glasses (21)</Trans>
+                </li>
               </ul>
-              You can experiment with off-chain Noun generation at the {playgroundLink}.
+              <Trans>
+                You can experiment with off-chain Noun generation at the {playgroundLink}.
+              </Trans>
             </Accordion.Body>
           </Accordion.Item>
           <Accordion.Item eventKey="5" className={classes.accordionItem}>
             <Accordion.Header className={classes.accordionHeader}>
-              On-Chain Artwork
+              <Trans>On-Chain Artwork</Trans>
             </Accordion.Header>
             <Accordion.Body>
               <p>
-                Nouns are stored directly on Ethereum and do not utilize pointers to other networks
-                such as IPFS. This is possible because Noun parts are compressed and stored on-chain
-                using a custom run-length encoding (RLE), which is a form of lossless compression.
+                <Trans>
+                  Nouns are stored directly on Ethereum and do not utilize pointers to other
+                  networks such as IPFS. This is possible because Noun parts are compressed and
+                  stored on-chain using a custom run-length encoding (RLE), which is a form of
+                  lossless compression.
+                </Trans>
               </p>
 
               <p>
-                The compressed parts are efficiently converted into a single base64 encoded SVG
-                image on-chain. To accomplish this, each part is decoded into an intermediate format
-                before being converted into a series of SVG rects using batched, on-chain string
-                concatenation. Once the entire SVG has been generated, it is base64 encoded.
+                <Trans>
+                  The compressed parts are efficiently converted into a single base64 encoded SVG
+                  image on-chain. To accomplish this, each part is decoded into an intermediate
+                  format before being converted into a series of SVG rects using batched, on-chain
+                  string concatenation. Once the entire SVG has been generated, it is base64
+                  encoded.
+                </Trans>
               </p>
             </Accordion.Body>
           </Accordion.Item>
           <Accordion.Item eventKey="6" className={classes.accordionItem}>
             <Accordion.Header className={classes.accordionHeader}>
-              Noun Seeder Contract
+              <Trans>Noun Seeder Contract</Trans>
             </Accordion.Header>
             <Accordion.Body>
               <p>
-                The Noun Seeder contract is used to determine Noun traits during the minting
-                process. The seeder contract can be replaced to allow for future trait generation
-                algorithm upgrades. Additionally, it can be locked by the Nouns DAO to prevent any
-                future updates. Currently, Noun traits are determined using pseudo-random number
-                generation:
+                <Trans>
+                  The Noun Seeder contract is used to determine Noun traits during the minting
+                  process. The seeder contract can be replaced to allow for future trait generation
+                  algorithm upgrades. Additionally, it can be locked by the Nouns DAO to prevent any
+                  future updates. Currently, Noun traits are determined using pseudo-random number
+                  generation:
+                </Trans>
               </p>
               <code>keccak256(abi.encodePacked(blockhash(block.number - 1), nounId))</code>
               <br />
               <br />
               <p>
-                Trait generation is not truly random. Traits can be predicted when minting a Noun on
-                the pending block.
+                <Trans>
+                  Trait generation is not truly random. Traits can be predicted when minting a Noun
+                  on the pending block.
+                </Trans>
               </p>
             </Accordion.Body>
           </Accordion.Item>
           <Accordion.Item eventKey="7" className={classes.accordionItem}>
             <Accordion.Header className={classes.accordionHeader}>
-              Nounder's Reward
+              <Trans>Nounder's Reward</Trans>
             </Accordion.Header>
             <Accordion.Body>
               <p>
-                'Nounders' are the group of ten builders that initiated Nouns. Here are the
-                Nounders:
+                <Trans>
+                  'Nounders' are the group of ten builders that initiated Nouns. Here are the
+                  Nounders:
+                </Trans>
               </p>
               <ul>
                 <li>
@@ -216,16 +304,20 @@ const Documentation = () => {
                 </li>
               </ul>
               <p>
-                Because 100% of Noun auction proceeds are sent to Nouns DAO, Nounders have chosen to
-                compensate themselves with Nouns. Every 10th Noun for the first 5 years of the
-                project (Noun ids #0, #10, #20, #30 and so on) will be automatically sent to the
-                Nounder's multisig to be vested and shared among the founding members of the
-                project.
+                <Trans>
+                  Because 100% of Noun auction proceeds are sent to Nouns DAO, Nounders have chosen
+                  to compensate themselves with Nouns. Every 10th Noun for the first 5 years of the
+                  project (Noun ids #0, #10, #20, #30 and so on) will be automatically sent to the
+                  Nounder's multisig to be vested and shared among the founding members of the
+                  project.
+                </Trans>
               </p>
               <p>
-                Nounder distributions don't interfere with the cadence of 24 hour auctions. Nouns
-                are sent directly to the Nounder's Multisig, and auctions continue on schedule with
-                the next available Noun ID.
+                <Trans>
+                  Nounder distributions don't interfere with the cadence of 24 hour auctions. Nouns
+                  are sent directly to the Nounder's Multisig, and auctions continue on schedule
+                  with the next available Noun ID.
+                </Trans>
               </p>
             </Accordion.Body>
           </Accordion.Item>
diff --git a/packages/nouns-webapp/src/components/Footer/index.tsx b/packages/nouns-webapp/src/components/Footer/index.tsx
index 2328f325..dc108886 100644
--- a/packages/nouns-webapp/src/components/Footer/index.tsx
+++ b/packages/nouns-webapp/src/components/Footer/index.tsx
@@ -4,6 +4,7 @@ import { buildEtherscanAddressLink } from '../../utils/etherscan';
 import { externalURL, ExternalURL } from '../../utils/externalURL';
 import config from '../../config';
 import Link from '../Link';
+import { Trans } from '@lingui/macro';
 
 const Footer = () => {
   const twitterURL = externalURL(ExternalURL.twitter);
@@ -15,10 +16,10 @@ const Footer = () => {
     <div className={classes.wrapper}>
       <Container className={classes.container}>
         <footer className={classes.footerSignature}>
-          <Link text="Discord" url={discordURL} leavesPage={true} />
-          <Link text="Twitter" url={twitterURL} leavesPage={true} />
-          <Link text="Etherscan" url={etherscanURL} leavesPage={true} />
-          <Link text="Forums" url={discourseURL} leavesPage={false} />
+          <Link text={<Trans>Discord</Trans>} url={discordURL} leavesPage={true} />
+          <Link text={<Trans>Twitter</Trans>} url={twitterURL} leavesPage={true} />
+          <Link text={<Trans>Etherscan</Trans>} url={etherscanURL} leavesPage={true} />
+          <Link text={<Trans>Forums</Trans>} url={discourseURL} leavesPage={false} />
         </footer>
       </Container>
     </div>
diff --git a/packages/nouns-webapp/src/components/LanguageSelectionModal/LanguageSelectionModal.module.css b/packages/nouns-webapp/src/components/LanguageSelectionModal/LanguageSelectionModal.module.css
new file mode 100644
index 00000000..cd677ae6
--- /dev/null
+++ b/packages/nouns-webapp/src/components/LanguageSelectionModal/LanguageSelectionModal.module.css
@@ -0,0 +1,31 @@
+.wrapper {
+  max-height: 40vh;
+  overflow-y: scroll;
+}
+
+.languageButton {
+  border: none;
+  margin: 5px;
+  padding: 5px 20px;
+  border-radius: 5px;
+  background-color: rgba(211, 211, 211, 0.664);
+  color: var(--brand-black);
+  border: none;
+  display: flex;
+  justify-content: space-between;
+}
+
+.languageButton:hover,
+.languageButton:active,
+.languageButton:focus,
+.languageButton:disabled {
+  outline: none !important;
+  box-shadow: none !important;
+  background-color: lightgray !important;
+  color: var(--brand-dark-green);
+  color: white;
+}
+
+.icon {
+  margin-top: 0.25rem;
+}
diff --git a/packages/nouns-webapp/src/components/LanguageSelectionModal/index.tsx b/packages/nouns-webapp/src/components/LanguageSelectionModal/index.tsx
new file mode 100644
index 00000000..46b7a72b
--- /dev/null
+++ b/packages/nouns-webapp/src/components/LanguageSelectionModal/index.tsx
@@ -0,0 +1,47 @@
+import Modal from '../Modal';
+import classes from './LanguageSelectionModal.module.css';
+import { setLocale } from '../../i18n/setLocale';
+import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
+import { faCheck } from '@fortawesome/free-solid-svg-icons';
+import { Trans } from '@lingui/macro';
+import { SUPPORTED_LOCALES, SupportedLocale, LOCALE_LABEL } from '../../i18n/locales';
+import { useActiveLocale } from '../../hooks/useActivateLocale';
+
+interface LanguageSelectionModalProps {
+  onDismiss: () => void;
+}
+
+/**
+ * Note: This is only used on mobile. On desktop, language is selected via a dropdown.
+ */
+const LanguageSelectionModal: React.FC<LanguageSelectionModalProps> = props => {
+  const { onDismiss } = props;
+  const activeLocale = useActiveLocale();
+
+  const modalContent = (
+    <div className={classes.LanguageSelectionModal}>
+      {SUPPORTED_LOCALES.map((locale: SupportedLocale) => {
+        return (
+          <div
+            className={classes.languageButton}
+            key={locale}
+            onClick={() => {
+              setLocale(locale);
+              onDismiss();
+            }}
+          >
+            {LOCALE_LABEL[locale]}
+            {locale === activeLocale && (
+              <FontAwesomeIcon icon={faCheck} height={24} width={24} className={classes.icon} />
+            )}
+          </div>
+        );
+      })}
+    </div>
+  );
+
+  return (
+    <Modal title={<Trans>Select Language</Trans>} content={modalContent} onDismiss={onDismiss} />
+  );
+};
+export default LanguageSelectionModal;
diff --git a/packages/nouns-webapp/src/components/Link/index.tsx b/packages/nouns-webapp/src/components/Link/index.tsx
index 4ea49368..cf3f72a8 100644
--- a/packages/nouns-webapp/src/components/Link/index.tsx
+++ b/packages/nouns-webapp/src/components/Link/index.tsx
@@ -1,6 +1,7 @@
+import { ReactNode } from 'react';
 import classes from './Link.module.css';
 
-const Link: React.FC<{ text: string; url: string; leavesPage: boolean }> = props => {
+const Link: React.FC<{ text: ReactNode; url: string; leavesPage: boolean }> = props => {
   const { text, url, leavesPage } = props;
   return (
     <a
diff --git a/packages/nouns-webapp/src/components/Modal/index.tsx b/packages/nouns-webapp/src/components/Modal/index.tsx
index 5a6eb153..9942db12 100644
--- a/packages/nouns-webapp/src/components/Modal/index.tsx
+++ b/packages/nouns-webapp/src/components/Modal/index.tsx
@@ -8,7 +8,7 @@ export const Backdrop: React.FC<{ onDismiss: () => void }> = props => {
 };
 
 const ModalOverlay: React.FC<{
-  title?: string;
+  title?: React.ReactNode;
   content?: React.ReactNode;
   onDismiss: () => void;
 }> = props => {
@@ -25,7 +25,7 @@ const ModalOverlay: React.FC<{
 };
 
 const Modal: React.FC<{
-  title?: string;
+  title?: React.ReactNode;
   content?: React.ReactNode;
   onDismiss: () => void;
 }> = props => {
diff --git a/packages/nouns-webapp/src/components/NavBar/index.tsx b/packages/nouns-webapp/src/components/NavBar/index.tsx
index 9c3966c6..b16fa7f4 100644
--- a/packages/nouns-webapp/src/components/NavBar/index.tsx
+++ b/packages/nouns-webapp/src/components/NavBar/index.tsx
@@ -19,6 +19,9 @@ import { faComments } from '@fortawesome/free-solid-svg-icons';
 import { faPlay } from '@fortawesome/free-solid-svg-icons';
 import NavBarTreasury from '../NavBarTreasury';
 import NavWallet from '../NavWallet';
+import { Trans } from '@lingui/macro';
+import React from 'react';
+import NavLocaleSwitcher from '../NavLocaleSwitcher';
 
 const NavBar = () => {
   const activeAccount = useAppSelector(state => state.account.activeAccount);
@@ -79,7 +82,7 @@ const NavBar = () => {
           <Navbar.Collapse className="justify-content-end">
             <Nav.Link as={Link} to="/vote" className={classes.nounsNavLink}>
               <NavBarButton
-                buttonText={'DAO'}
+                buttonText={<Trans>DAO</Trans>}
                 buttonIcon={<FontAwesomeIcon icon={faUsers} />}
                 buttonStyle={nonWalletButtonStyle}
               />
@@ -91,7 +94,7 @@ const NavBar = () => {
               rel="noreferrer"
             >
               <NavBarButton
-                buttonText={'Docs'}
+                buttonText={<Trans>Docs</Trans>}
                 buttonIcon={<FontAwesomeIcon icon={faBookOpen} />}
                 buttonStyle={nonWalletButtonStyle}
               />
@@ -103,18 +106,19 @@ const NavBar = () => {
               rel="noreferrer"
             >
               <NavBarButton
-                buttonText={'Discourse'}
+                buttonText={<Trans>Discourse</Trans>}
                 buttonIcon={<FontAwesomeIcon icon={faComments} />}
                 buttonStyle={nonWalletButtonStyle}
               />
             </Nav.Link>
             <Nav.Link as={Link} to="/playground" className={classes.nounsNavLink}>
               <NavBarButton
-                buttonText={'Playground'}
+                buttonText={<Trans>Playground</Trans>}
                 buttonIcon={<FontAwesomeIcon icon={faPlay} />}
                 buttonStyle={nonWalletButtonStyle}
               />
             </Nav.Link>
+            <NavLocaleSwitcher buttonStyle={nonWalletButtonStyle} />
             <NavWallet address={activeAccount || '0'} buttonStyle={nonWalletButtonStyle} />{' '}
           </Navbar.Collapse>
         </Container>
diff --git a/packages/nouns-webapp/src/components/NavBarButton/index.tsx b/packages/nouns-webapp/src/components/NavBarButton/index.tsx
index ff0ef4b9..ce9c6193 100644
--- a/packages/nouns-webapp/src/components/NavBarButton/index.tsx
+++ b/packages/nouns-webapp/src/components/NavBarButton/index.tsx
@@ -12,7 +12,7 @@ export enum NavBarButtonStyle {
 }
 
 interface NavBarButtonProps {
-  buttonText: string;
+  buttonText: React.ReactNode;
   buttonIcon?: React.ReactNode;
   buttonStyle?: NavBarButtonStyle;
 }
diff --git a/packages/nouns-webapp/src/components/NavBarTreasury/index.tsx b/packages/nouns-webapp/src/components/NavBarTreasury/index.tsx
index 9c5bcfae..16fdbebc 100644
--- a/packages/nouns-webapp/src/components/NavBarTreasury/index.tsx
+++ b/packages/nouns-webapp/src/components/NavBarTreasury/index.tsx
@@ -1,6 +1,8 @@
 import classes from './NavBarTreasury.module.css';
 import { NavBarButtonStyle } from '../NavBarButton';
 import clsx from 'clsx';
+import { Trans } from '@lingui/macro';
+import { i18n } from '@lingui/core';
 
 interface NavBarTreasuryProps {
   treasuryBalance: string;
@@ -39,11 +41,9 @@ const NavBarTreasury: React.FC<NavBarTreasuryProps> = props => {
               treasuryStyle === NavBarButtonStyle.WHITE_INFO ? classes.whiteTreasuryHeader : '',
             )}
           >
-            Treasury
-          </div>
-          <div className={classes.treasuryBalance}>
-            Ξ {Number(treasuryBalance).toLocaleString('en-US')}
+            <Trans>Treasury</Trans>
           </div>
+          <div className={classes.treasuryBalance}>Ξ {i18n.number(Number(treasuryBalance))}</div>
         </div>
       </div>
     </div>
diff --git a/packages/nouns-webapp/src/components/NavLocaleSwitcher/NavLocalSwitcher.module.css b/packages/nouns-webapp/src/components/NavLocaleSwitcher/NavLocalSwitcher.module.css
new file mode 100644
index 00000000..12f46a25
--- /dev/null
+++ b/packages/nouns-webapp/src/components/NavLocaleSwitcher/NavLocalSwitcher.module.css
@@ -0,0 +1,70 @@
+.desktopLanguageButton {
+  justify-content: space-between;
+}
+
+.dropdownActive {
+  background-color: white;
+  color: black;
+}
+
+.dropDownTop {
+  border-radius: 10px 10px 0px 0px;
+  padding-top: 0.65rem;
+  padding-bottom: 0.5rem;
+  padding-left: 1rem;
+  margin-left: 4px;
+  border-bottom: 1px solid rgba(0, 0, 0, 0.06);
+  transition: all 0.125s ease-in-out;
+}
+
+.dropDownTop:hover {
+  color: black;
+}
+
+.dropDownBottom {
+  border-radius: 0px 0px 10px 10px;
+  padding-bottom: 0.65rem;
+  padding-top: 0.5rem;
+  padding-left: 1rem;
+  margin-left: 4px;
+}
+
+.dropDownBottom:hover {
+  color: black;
+}
+
+.dropDownInterior {
+  border-bottom: 1px solid rgba(0, 0, 0, 0.06);
+  padding-bottom: 0.65rem;
+  padding-top: 0.5rem;
+  padding-left: 1rem;
+  margin-left: 4px;
+}
+
+.dropDownInterior:hover {
+  color: black;
+}
+
+.languageButton {
+  border: none;
+  margin: 5px;
+  padding: 5px 20px;
+  border-radius: 5px;
+  background-color: rgba(211, 211, 211, 0.664);
+  color: var(--brand-black);
+  border: none;
+}
+.languageButton img {
+  margin-right: 10px;
+  border-radius: 5px;
+}
+.languageButton:hover,
+.languageButton:active,
+.languageButton:focus,
+.languageButton:disabled {
+  outline: none !important;
+  box-shadow: none !important;
+  background-color: lightgray !important;
+  color: var(--brand-dark-green);
+  color: white;
+}
diff --git a/packages/nouns-webapp/src/components/NavLocaleSwitcher/index.tsx b/packages/nouns-webapp/src/components/NavLocaleSwitcher/index.tsx
new file mode 100644
index 00000000..cc5ea8b8
--- /dev/null
+++ b/packages/nouns-webapp/src/components/NavLocaleSwitcher/index.tsx
@@ -0,0 +1,168 @@
+import React, { useState } from 'react';
+import NavBarButton, { NavBarButtonStyle } from '../NavBarButton';
+import classes from './NavLocalSwitcher.module.css';
+import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
+import { faCheck, faSortDown } from '@fortawesome/free-solid-svg-icons';
+import { faSortUp } from '@fortawesome/free-solid-svg-icons';
+import { faGlobe } from '@fortawesome/free-solid-svg-icons';
+import { Dropdown } from 'react-bootstrap';
+import clsx from 'clsx';
+import { useHistory } from 'react-router-dom';
+import { isMobileScreen } from '../../utils/isMobile';
+import { usePickByState } from '../../utils/colorResponsiveUIUtils';
+import LanguageSelectionModal from '../LanguageSelectionModal';
+import { setLocale } from '../../i18n/setLocale';
+import { Trans } from '@lingui/macro';
+import navWalletClasses from '../NavWallet/NavWallet.module.css';
+import { SUPPORTED_LOCALES, SupportedLocale, LOCALE_LABEL } from '../../i18n/locales';
+import { useActiveLocale } from '../../hooks/useActivateLocale';
+
+interface NavLocalSwitcherProps {
+  buttonStyle?: NavBarButtonStyle;
+}
+
+type Props = {
+  onClick: (e: any) => void;
+  value: string;
+};
+
+type RefType = number;
+
+type CustomMenuProps = {
+  children?: React.ReactNode;
+  style?: React.CSSProperties;
+  className?: string;
+  labeledBy?: string;
+};
+
+const NavLocaleSwitcher: React.FC<NavLocalSwitcherProps> = props => {
+  const { buttonStyle } = props;
+
+  const [buttonUp, setButtonUp] = useState(false);
+  const history = useHistory();
+  const [showLanguagePickerModal, setShowLanguagePickerModal] = useState(false);
+  const activeLocale = useActiveLocale();
+
+  const statePrimaryButtonClass = usePickByState(
+    navWalletClasses.whiteInfo,
+    navWalletClasses.coolInfo,
+    navWalletClasses.warmInfo,
+    history,
+  );
+
+  const stateSelectedDropdownClass = usePickByState(
+    navWalletClasses.whiteInfoSelected,
+    navWalletClasses.dropdownActive,
+    navWalletClasses.dropdownActive,
+    history,
+  );
+
+  const buttonStyleTop = usePickByState(
+    navWalletClasses.whiteInfoSelectedTop,
+    navWalletClasses.coolInfoSelected,
+    navWalletClasses.warmInfoSelected,
+    history,
+  );
+
+  const buttonStyleBottom = usePickByState(
+    navWalletClasses.whiteInfoSelectedBottom,
+    navWalletClasses.coolInfoSelected,
+    navWalletClasses.warmInfoSelected,
+    history,
+  );
+
+  const customDropdownToggle = React.forwardRef<RefType, Props>(({ onClick, value }, ref) => (
+    <>
+      <div
+        className={clsx(
+          navWalletClasses.wrapper,
+          buttonUp ? stateSelectedDropdownClass : statePrimaryButtonClass,
+        )}
+        onClick={e => {
+          e.preventDefault();
+          onClick(e);
+        }}
+      >
+        <div className={navWalletClasses.button}>
+          <div className={navWalletClasses.address}>{<FontAwesomeIcon icon={faGlobe} />}</div>
+          <div className={buttonUp ? navWalletClasses.arrowUp : navWalletClasses.arrowDown}>
+            <FontAwesomeIcon icon={buttonUp ? faSortUp : faSortDown} />{' '}
+          </div>
+        </div>
+      </div>
+    </>
+  ));
+
+  const CustomMenu = React.forwardRef((props: CustomMenuProps, ref: React.Ref<HTMLDivElement>) => {
+    return (
+      <div
+        ref={ref}
+        style={props.style}
+        className={props.className}
+        aria-labelledby={props.labeledBy}
+      >
+        {SUPPORTED_LOCALES.map((locale: SupportedLocale, index: number) => {
+          let dropDownStyle;
+          let buttonStyle;
+
+          switch (index) {
+            case 0:
+              dropDownStyle = classes.dropDownTop;
+              buttonStyle = buttonStyleTop;
+              break;
+            case SUPPORTED_LOCALES.length - 1:
+              dropDownStyle = classes.dropDownBottom;
+              buttonStyle = buttonStyleBottom;
+              break;
+            default:
+              dropDownStyle = classes.dropDownInterior;
+              buttonStyle = buttonStyleBottom;
+          }
+
+          return (
+            <div
+              className={clsx(
+                navWalletClasses.button,
+                navWalletClasses.switchWalletText,
+                buttonStyle,
+                dropDownStyle,
+                classes.desktopLanguageButton,
+              )}
+              onClick={() => setLocale(locale)}
+            >
+              {LOCALE_LABEL[locale]}
+              {activeLocale === locale && <FontAwesomeIcon icon={faCheck} height={24} width={24} />}
+            </div>
+          );
+        })}
+      </div>
+    );
+  });
+
+  return (
+    <>
+      {showLanguagePickerModal && (
+        <LanguageSelectionModal onDismiss={() => setShowLanguagePickerModal(false)} />
+      )}
+      {isMobileScreen() ? (
+        <div
+          className={navWalletClasses.nounsNavLink}
+          onClick={() => setShowLanguagePickerModal(true)}
+        >
+          <NavBarButton
+            buttonText={<Trans>Language</Trans>}
+            buttonIcon={<FontAwesomeIcon icon={faGlobe} />}
+            buttonStyle={buttonStyle}
+          />
+        </div>
+      ) : (
+        <Dropdown className={navWalletClasses.nounsNavLink} onToggle={() => setButtonUp(!buttonUp)} autoClose={true}>
+          <Dropdown.Toggle as={customDropdownToggle} id="dropdown-custom-components" />
+          <Dropdown.Menu className={`${navWalletClasses.desktopDropdown} `} as={CustomMenu} />
+        </Dropdown>
+      )}
+    </>
+  );
+};
+
+export default NavLocaleSwitcher;
diff --git a/packages/nouns-webapp/src/components/NavWallet/WalletConnectButton/index.tsx b/packages/nouns-webapp/src/components/NavWallet/WalletConnectButton/index.tsx
index af2d3a4c..2c16501a 100644
--- a/packages/nouns-webapp/src/components/NavWallet/WalletConnectButton/index.tsx
+++ b/packages/nouns-webapp/src/components/NavWallet/WalletConnectButton/index.tsx
@@ -1,6 +1,7 @@
 import React from 'react';
 import { Nav } from 'react-bootstrap';
 import NavBarButton, { NavBarButtonStyle } from '../../NavBarButton';
+import { Trans } from '@lingui/macro';
 
 interface WalletConnectButtonProps {
   className: string;
@@ -12,7 +13,7 @@ const WalletConnectButton: React.FC<WalletConnectButtonProps> = props => {
   const { className, onClickHandler, buttonStyle } = props;
   return (
     <Nav.Link className={className} onClick={onClickHandler}>
-      <NavBarButton buttonStyle={buttonStyle} buttonText={'Connect'} />
+      <NavBarButton buttonStyle={buttonStyle} buttonText={<Trans>Connect</Trans>} />
     </Nav.Link>
   );
 };
diff --git a/packages/nouns-webapp/src/components/NavWallet/index.tsx b/packages/nouns-webapp/src/components/NavWallet/index.tsx
index db1e049b..867123df 100644
--- a/packages/nouns-webapp/src/components/NavWallet/index.tsx
+++ b/packages/nouns-webapp/src/components/NavWallet/index.tsx
@@ -16,6 +16,7 @@ import { useShortAddress } from '../ShortAddress';
 import { isMobileScreen } from '../../utils/isMobile';
 import { usePickByState } from '../../utils/colorResponsiveUIUtils';
 import WalletConnectButton from './WalletConnectButton';
+import { Trans } from '@lingui/macro';
 
 interface NavWalletProps {
   address: string;
@@ -150,7 +151,7 @@ const NavWallet: React.FC<NavWalletProps> = props => {
               ),
             )}
           >
-            Switch wallet
+            <Trans>Switch wallet</Trans>
           </div>
 
           <div
@@ -167,7 +168,7 @@ const NavWallet: React.FC<NavWalletProps> = props => {
               classes.disconnectText,
             )}
           >
-            Disconnect
+            <Trans>Disconnect</Trans>
           </div>
         </div>
       </div>
@@ -197,10 +198,10 @@ const NavWallet: React.FC<NavWalletProps> = props => {
           className={classes.mobileSwitchWalletText}
           onClick={switchWalletHandler}
         >
-          Switch
+          <Trans>Switch</Trans>
         </div>
         <div className={classes.disconnectText} onClick={disconectWalletHandler}>
-          Sign out
+          <Trans>Sign out</Trans>
         </div>
       </div>
     </div>
diff --git a/packages/nouns-webapp/src/components/NounInfoCard/index.tsx b/packages/nouns-webapp/src/components/NounInfoCard/index.tsx
index 5dc77a20..d3165eb9 100644
--- a/packages/nouns-webapp/src/components/NounInfoCard/index.tsx
+++ b/packages/nouns-webapp/src/components/NounInfoCard/index.tsx
@@ -13,6 +13,7 @@ import { useAppSelector } from '../../hooks';
 
 import config from '../../config';
 import { buildEtherscanAddressLink } from '../../utils/etherscan';
+import { Trans } from '@lingui/macro';
 
 interface NounInfoCardProps {
   nounId: number;
@@ -39,12 +40,12 @@ const NounInfoCard: React.FC<NounInfoCardProps> = props => {
       <Col lg={12} className={classes.nounInfoRow}>
         <NounInfoRowButton
           iconImgSource={_BidsIcon}
-          btnText={lastAuctionNounId === nounId ? 'Bids' : 'Bid history'}
+          btnText={lastAuctionNounId === nounId ? <Trans>Bids</Trans> : <Trans>Bid history</Trans>}
           onClickHandler={bidHistoryOnClickHandler}
         />
         <NounInfoRowButton
           iconImgSource={_AddressIcon}
-          btnText={'Etherscan'}
+          btnText={<Trans>Etherscan</Trans>}
           onClickHandler={etherscanButtonClickHandler}
         />
       </Col>
diff --git a/packages/nouns-webapp/src/components/NounInfoRowBirthday/index.tsx b/packages/nouns-webapp/src/components/NounInfoRowBirthday/index.tsx
index a1983ba8..f9518819 100644
--- a/packages/nouns-webapp/src/components/NounInfoRowBirthday/index.tsx
+++ b/packages/nouns-webapp/src/components/NounInfoRowBirthday/index.tsx
@@ -8,6 +8,8 @@ import _BirthdayIcon from '../../assets/icons/Birthday.svg';
 import { Image } from 'react-bootstrap';
 import { useAppSelector } from '../../hooks';
 import { AuctionState } from '../../state/slices/auction';
+import { Trans } from '@lingui/macro';
+import { i18n } from '@lingui/core';
 
 interface NounInfoRowBirthdayProps {
   nounId: number;
@@ -34,23 +36,9 @@ const NounInfoRowBirthday: React.FC<NounInfoRowBirthdayProps> = props => {
   );
 
   if (!startTime) {
-    return <>Error fetching noun birthday</>;
+    return <Trans>Error fetching Noun birthday</Trans>;
   }
 
-  const monthNames = [
-    'January',
-    'February',
-    'March',
-    'April',
-    'May',
-    'June',
-    'July',
-    'August',
-    'September',
-    'October',
-    'November',
-    'December',
-  ];
   const birthday = new Date(Number(startTime._hex) * 1000);
 
   return (
@@ -58,9 +46,9 @@ const NounInfoRowBirthday: React.FC<NounInfoRowBirthdayProps> = props => {
       <span>
         <Image src={_BirthdayIcon} className={classes.birthdayIcon} />
       </span>
-      Born
+      <Trans>Born</Trans>
       <span className={classes.nounInfoRowBirthday}>
-        {monthNames[birthday.getUTCMonth()]} {birthday.getUTCDate()}, {birthday.getUTCFullYear()}
+        {i18n.date(birthday, { month: 'long', year: 'numeric', day: '2-digit' })}
       </span>
     </div>
   );
diff --git a/packages/nouns-webapp/src/components/NounInfoRowButton/index.tsx b/packages/nouns-webapp/src/components/NounInfoRowButton/index.tsx
index ff5b2a4d..92f6726d 100644
--- a/packages/nouns-webapp/src/components/NounInfoRowButton/index.tsx
+++ b/packages/nouns-webapp/src/components/NounInfoRowButton/index.tsx
@@ -5,7 +5,7 @@ import { useAppSelector } from '../../hooks';
 
 interface NounInfoRowButtonProps {
   iconImgSource: string;
-  btnText: string;
+  btnText: React.ReactNode;
   onClickHandler: () => void;
 }
 
diff --git a/packages/nouns-webapp/src/components/NounInfoRowHolder/index.tsx b/packages/nouns-webapp/src/components/NounInfoRowHolder/index.tsx
index 7ce7477e..46f7e56b 100644
--- a/packages/nouns-webapp/src/components/NounInfoRowHolder/index.tsx
+++ b/packages/nouns-webapp/src/components/NounInfoRowHolder/index.tsx
@@ -11,6 +11,7 @@ import { buildEtherscanAddressLink } from '../../utils/etherscan';
 import ShortAddress from '../ShortAddress';
 
 import { useAppSelector } from '../../hooks';
+import { Trans } from '@lingui/macro';
 
 interface NounInfoRowHolderProps {
   nounId: number;
@@ -26,11 +27,17 @@ const NounInfoRowHolder: React.FC<NounInfoRowHolderProps> = props => {
   if (loading) {
     return (
       <div className={classes.nounHolderInfoContainer}>
-        <span className={classes.nounHolderLoading}>Loading...</span>
+        <span className={classes.nounHolderLoading}>
+          <Trans>Loading...</Trans>
+        </span>
       </div>
     );
   } else if (error) {
-    return <div>Failed to fetch noun info</div>;
+    return (
+      <div>
+        <Trans>Failed to fetch Noun info</Trans>
+      </div>
+    );
   }
 
   const shortAddressComponent = <ShortAddress address={data && data.noun.owner.id} />;
@@ -40,7 +47,9 @@ const NounInfoRowHolder: React.FC<NounInfoRowHolderProps> = props => {
       <span>
         <Image src={_HeartIcon} className={classes.heartIcon} />
       </span>
-      <span>Held by</span>
+      <span>
+        <Trans>Held by</Trans>
+      </span>
       <span>
         <a
           className={
@@ -51,9 +60,11 @@ const NounInfoRowHolder: React.FC<NounInfoRowHolderProps> = props => {
           rel="noreferrer"
         >
           {data.noun.owner.id.toLowerCase() ===
-          config.addresses.nounsAuctionHouseProxy.toLowerCase()
-            ? 'Nouns Auction House'
-            : shortAddressComponent}
+          config.addresses.nounsAuctionHouseProxy.toLowerCase() ? (
+            <Trans>Nouns Auction House</Trans>
+          ) : (
+            shortAddressComponent
+          )}
         </a>
       </span>
       <span className={classes.linkIconSpan}>
diff --git a/packages/nouns-webapp/src/components/NounProfileVoteRow/index.tsx b/packages/nouns-webapp/src/components/NounProfileVoteRow/index.tsx
index 5cfa8b23..b3f9be57 100644
--- a/packages/nouns-webapp/src/components/NounProfileVoteRow/index.tsx
+++ b/packages/nouns-webapp/src/components/NounProfileVoteRow/index.tsx
@@ -14,6 +14,7 @@ import VoteStatusPill from '../VoteStatusPill';
 import _PendingVoteIcon from '../../assets/icons/PendingVote.svg';
 import { Vote } from '../../utils/vote';
 import { NounVoteHistory } from '../ProfileActivityFeed';
+import { Trans } from '@lingui/macro';
 
 interface NounProfileVoteRowProps {
   proposal: Proposal;
@@ -42,19 +43,19 @@ const selectIconForNounVoteActivityRow = (proposal: Proposal, vote?: NounVoteHis
 const selectVotingInfoText = (proposal: Proposal, vote?: NounVoteHistory) => {
   if (!vote) {
     if (proposal.status === ProposalState.PENDING || proposal.status === ProposalState.ACTIVE) {
-      return 'Waiting for';
+      return <Trans>Waiting for</Trans>;
     }
-    return 'Absent for';
+    return <Trans>Absent for</Trans>;
   } else if (vote.supportDetailed) {
     switch (vote.supportDetailed) {
       case Vote.FOR:
-        return 'Voted for';
+        return <Trans>Voted for</Trans>;
       case Vote.ABSTAIN:
       default:
-        return 'Abstained on';
+        return <Trans>Abstained on</Trans>;
     }
   } else {
-    return 'Voted aginst';
+    return <Trans>Voted aginst</Trans>;
   }
 };
 
@@ -81,25 +82,25 @@ const selectProposalStatus = (proposal: Proposal) => {
 const selectProposalText = (proposal: Proposal) => {
   switch (proposal.status) {
     case ProposalState.PENDING:
-      return 'Pending';
+      return <Trans>Pending</Trans>;
     case ProposalState.ACTIVE:
-      return 'Active';
+      return <Trans>Active</Trans>;
     case ProposalState.SUCCEEDED:
-      return 'Succeeded';
+      return <Trans>Succeeded</Trans>;
     case ProposalState.EXECUTED:
-      return 'Executed';
+      return <Trans>Executed</Trans>;
     case ProposalState.DEFEATED:
-      return 'Defeated';
+      return <Trans>Defeated</Trans>;
     case ProposalState.QUEUED:
-      return 'Queued';
+      return <Trans>Queued</Trans>;
     case ProposalState.CANCELED:
-      return 'Canceled';
+      return <Trans>Canceled</Trans>;
     case ProposalState.VETOED:
-      return 'Vetoed';
+      return <Trans>Vetoed</Trans>;
     case ProposalState.EXPIRED:
-      return 'Expired';
+      return <Trans>Expired</Trans>;
     default:
-      return 'Undetermined';
+      return <Trans>Undetermined</Trans>;
   }
 };
 
diff --git a/packages/nouns-webapp/src/components/ProfileActivityFeed/index.tsx b/packages/nouns-webapp/src/components/ProfileActivityFeed/index.tsx
index a0408594..0221c9e4 100644
--- a/packages/nouns-webapp/src/components/ProfileActivityFeed/index.tsx
+++ b/packages/nouns-webapp/src/components/ProfileActivityFeed/index.tsx
@@ -13,6 +13,7 @@ import { useNounCanVoteTimestamp } from '../../wrappers/nounsAuction';
 import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
 import { faChevronDown } from '@fortawesome/free-solid-svg-icons';
 import { faChevronUp } from '@fortawesome/free-solid-svg-icons';
+import { Trans } from '@lingui/macro';
 
 interface ProfileActivityFeedProps {
   nounId: number;
@@ -49,7 +50,11 @@ const ProfileActivityFeed: React.FC<ProfileActivityFeedProps> = props => {
   if (loading || !proposals || !proposals.length || proposalTimestampLoading) {
     return <></>;
   } else if (error || proposalTimestampError) {
-    return <div>Failed to fetch noun activity history</div>;
+    return (
+      <div>
+        <Trans>Failed to fetch Noun activity history</Trans>
+      </div>
+    );
   }
 
   const nounVotes: { [key: string]: NounVoteHistory } = data.noun.votes
@@ -71,7 +76,9 @@ const ProfileActivityFeed: React.FC<ProfileActivityFeedProps> = props => {
     <Section fullWidth={false}>
       <Col lg={{ span: 10, offset: 1 }}>
         <div className={classes.headerWrapper}>
-          <h1>Activity</h1>
+          <h1>
+            <Trans>Activity</Trans>
+          </h1>
         </div>
         {filteredProposals && filteredProposals.length ? (
           <>
@@ -121,7 +128,7 @@ const ProfileActivityFeed: React.FC<ProfileActivityFeedProps> = props => {
                     className={classes.expandCollapseCopy}
                     onClick={() => setTruncateProposals(false)}
                   >
-                    Show all {filteredProposals.length} events{' '}
+                    <Trans>Show all {filteredProposals.length} events </Trans>{' '}
                     <FontAwesomeIcon icon={faChevronDown} />
                   </div>
                 ) : (
@@ -129,7 +136,7 @@ const ProfileActivityFeed: React.FC<ProfileActivityFeedProps> = props => {
                     className={classes.expandCollapseCopy}
                     onClick={() => setTruncateProposals(true)}
                   >
-                    Show fewer <FontAwesomeIcon icon={faChevronUp} />
+                    <Trans>Show fewer</Trans> <FontAwesomeIcon icon={faChevronUp} />
                   </div>
                 )}
               </>
@@ -137,7 +144,7 @@ const ProfileActivityFeed: React.FC<ProfileActivityFeedProps> = props => {
           </>
         ) : (
           <div className={classes.nullStateCopy}>
-            This Noun has no activity, since it was just created. Check back soon!
+            <Trans>This Noun has no activity, since it was just created. Check back soon!</Trans>
           </div>
         )}
       </Col>
diff --git a/packages/nouns-webapp/src/components/ProposalContent/index.tsx b/packages/nouns-webapp/src/components/ProposalContent/index.tsx
index 3b77bc5e..98522cc2 100644
--- a/packages/nouns-webapp/src/components/ProposalContent/index.tsx
+++ b/packages/nouns-webapp/src/components/ProposalContent/index.tsx
@@ -7,6 +7,7 @@ import remarkBreaks from 'remark-breaks';
 import { buildEtherscanAddressLink, buildEtherscanTxLink } from '../../utils/etherscan';
 import { utils } from 'ethers';
 import classes from './ProposalContent.module.css';
+import { Trans } from '@lingui/macro';
 
 interface ProposalContentProps {
   proposal?: Proposal;
@@ -38,7 +39,9 @@ const ProposalContent: React.FC<ProposalContentProps> = props => {
     <>
       <Row>
         <Col className={classes.section}>
-          <h5>Description</h5>
+          <h5>
+            <Trans>Description</Trans>
+          </h5>
           {proposal?.description && (
             <ReactMarkdown
               className={classes.markdown}
@@ -50,7 +53,9 @@ const ProposalContent: React.FC<ProposalContentProps> = props => {
       </Row>
       <Row>
         <Col className={classes.section}>
-          <h5>Proposed Transactions</h5>
+          <h5>
+            <Trans>Proposed Transactions</Trans>
+          </h5>
           <ol>
             {proposal?.details?.map((d, i) => {
               return (
@@ -79,7 +84,9 @@ const ProposalContent: React.FC<ProposalContentProps> = props => {
       </Row>
       <Row>
         <Col className={classes.section}>
-          <h5>Proposer</h5>
+          <h5>
+            <Trans>Proposer</Trans>
+          </h5>
           {proposal?.proposer && proposal?.transactionHash && (
             <>
               {linkIfAddress(proposal.proposer)} at {transactionLink(proposal.transactionHash)}
diff --git a/packages/nouns-webapp/src/components/ProposalEditor/index.tsx b/packages/nouns-webapp/src/components/ProposalEditor/index.tsx
index 3588eec8..b2f1e3cc 100644
--- a/packages/nouns-webapp/src/components/ProposalEditor/index.tsx
+++ b/packages/nouns-webapp/src/components/ProposalEditor/index.tsx
@@ -3,6 +3,7 @@ import { InputGroup, FormControl, FormText } from 'react-bootstrap';
 import remarkBreaks from 'remark-breaks';
 import ReactMarkdown from 'react-markdown';
 import { useState } from 'react';
+import { Trans } from '@lingui/macro';
 
 const ProposalEditor = ({
   title,
@@ -26,7 +27,9 @@ const ProposalEditor = ({
   return (
     <div>
       <InputGroup className={`${classes.proposalEditor} d-flex flex-column`}>
-        <FormText>Proposal</FormText>
+        <FormText>
+          <Trans>Proposal</Trans>
+        </FormText>
         <FormControl
           className={classes.titleInput}
           value={title}
@@ -44,7 +47,9 @@ const ProposalEditor = ({
       </InputGroup>
       {proposalText !== '' && (
         <div className={classes.previewArea}>
-          <h3>Preview:</h3>
+          <h3>
+            <Trans>Preview:</Trans>
+          </h3>
           <ReactMarkdown
             className={classes.markdown}
             children={proposalText}
diff --git a/packages/nouns-webapp/src/components/ProposalHeader/index.tsx b/packages/nouns-webapp/src/components/ProposalHeader/index.tsx
index 32ad1465..3f997ae5 100644
--- a/packages/nouns-webapp/src/components/ProposalHeader/index.tsx
+++ b/packages/nouns-webapp/src/components/ProposalHeader/index.tsx
@@ -9,7 +9,8 @@ import clsx from 'clsx';
 import { isMobileScreen } from '../../utils/isMobile';
 import { useUserVotesAsOfBlock } from '../../wrappers/nounToken';
 import { useBlockTimestamp } from '../../hooks/useBlockTimestamp';
-import dayjs from 'dayjs';
+import { Trans } from '@lingui/macro';
+import { i18n } from '@lingui/core';
 
 interface ProposalHeaderProps {
   proposal: Proposal;
@@ -18,6 +19,28 @@ interface ProposalHeaderProps {
   submitButtonClickHandler: () => void;
 }
 
+const getTranslatedVoteCopyFromString = (proposalVote: string) => {
+  if (proposalVote === 'For') {
+    return (
+      <Trans>
+        You voted <strong>For</strong>this proposal
+      </Trans>
+    );
+  }
+  if (proposalVote === 'Against') {
+    return (
+      <Trans>
+        You voted <strong>Against</strong>this proposal
+      </Trans>
+    );
+  }
+  return (
+    <Trans>
+      You <strong>Abstained</strong> from this proposal
+    </Trans>
+  );
+};
+
 const ProposalHeader: React.FC<ProposalHeaderProps> = props => {
   const { proposal, isActiveForVoting, isWalletConnected, submitButtonClickHandler } = props;
 
@@ -31,16 +54,24 @@ const ProposalHeader: React.FC<ProposalHeaderProps> = props => {
   const voteButton = (
     <>
       {isWalletConnected ? (
-        <>{!availableVotes && <div className={classes.noVotesText}>You have no votes.</div>}</>
+        <>
+          {!availableVotes && (
+            <div className={classes.noVotesText}>
+              <Trans>You have no votes.</Trans>
+            </div>
+          )}
+        </>
       ) : (
-        <div className={classes.connectWalletText}>Connect a wallet to vote.</div>
+        <div className={classes.connectWalletText}>
+          <Trans>Connect a wallet to vote.</Trans>
+        </div>
       )}
       <Button
         className={disableVoteButton ? classes.submitBtnDisabled : classes.submitBtn}
         disabled={disableVoteButton}
         onClick={submitButtonClickHandler}
       >
-        Submit vote
+        <Trans>Submit vote</Trans>
       </Button>
     </>
   );
@@ -55,7 +86,9 @@ const ProposalHeader: React.FC<ProposalHeaderProps> = props => {
           <div className={classes.headerRow}>
             <span>
               <div className="d-flex">
-                <div>Proposal {proposal.id}</div>
+                <div>
+                  <Trans>Proposal {i18n.number(parseInt(proposal.id || '0'))}</Trans>
+                </div>
                 <div>
                   <ProposalStatus status={proposal?.status} className={classes.proposalStatus} />
                 </div>
@@ -81,15 +114,20 @@ const ProposalHeader: React.FC<ProposalHeaderProps> = props => {
 
       {proposal && isActiveForVoting && hasVoted && (
         <Alert variant="success" className={classes.voterIneligibleAlert}>
-          You voted <strong>{proposalVote}</strong> this proposal
+          {getTranslatedVoteCopyFromString(proposalVote)}
         </Alert>
       )}
 
       {proposal && isActiveForVoting && proposalCreationTimestamp && !!availableVotes && !hasVoted && (
         <Alert variant="success" className={classes.voterIneligibleAlert}>
-          Only Nouns you owned or were delegated to you before{' '}
-          {dayjs.unix(proposalCreationTimestamp).format('MMMM D, YYYY h:mm A z')} are eligible to
-          vote.
+          <Trans>
+            Only Nons you owned or were delegated to you before{' '}
+            {i18n.date(new Date(proposalCreationTimestamp * 1000), {
+              dateStyle: 'long',
+              timeStyle: 'long',
+            })}{' '}
+            are eligible to vote.
+          </Trans>
         </Alert>
       )}
     </>
diff --git a/packages/nouns-webapp/src/components/ProposalStatus/index.tsx b/packages/nouns-webapp/src/components/ProposalStatus/index.tsx
index 0bc7e54f..4e64a851 100644
--- a/packages/nouns-webapp/src/components/ProposalStatus/index.tsx
+++ b/packages/nouns-webapp/src/components/ProposalStatus/index.tsx
@@ -2,6 +2,7 @@ import classes from './ProposalStatus.module.css';
 import { ProposalState } from '../../wrappers/nounsDao';
 import React from 'react';
 import clsx from 'clsx';
+import { Trans } from '@lingui/macro';
 
 const statusVariant = (status: ProposalState | undefined) => {
   switch (status) {
@@ -25,25 +26,25 @@ const statusVariant = (status: ProposalState | undefined) => {
 const statusText = (status: ProposalState | undefined) => {
   switch (status) {
     case ProposalState.PENDING:
-      return 'Pending';
+      return <Trans>Pending</Trans>;
     case ProposalState.ACTIVE:
-      return 'Active';
+      return <Trans>Active</Trans>;
     case ProposalState.SUCCEEDED:
-      return 'Succeeded';
+      return <Trans>Succeeded</Trans>;
     case ProposalState.EXECUTED:
-      return 'Executed';
+      return <Trans>Executed</Trans>;
     case ProposalState.DEFEATED:
-      return 'Defeated';
+      return <Trans>Defeated</Trans>;
     case ProposalState.QUEUED:
-      return 'Queued';
+      return <Trans>Queued</Trans>;
     case ProposalState.CANCELED:
-      return 'Canceled';
+      return <Trans>Canceled</Trans>;
     case ProposalState.VETOED:
-      return 'Vetoed';
+      return <Trans>Vetoed</Trans>;
     case ProposalState.EXPIRED:
-      return 'Expired';
+      return <Trans>Expired</Trans>;
     default:
-      return 'Undetermined';
+      return <Trans>Undetermined</Trans>;
   }
 };
 
diff --git a/packages/nouns-webapp/src/components/ProposalTransactionFormModal/index.tsx b/packages/nouns-webapp/src/components/ProposalTransactionFormModal/index.tsx
index 7216d16d..e043c53d 100644
--- a/packages/nouns-webapp/src/components/ProposalTransactionFormModal/index.tsx
+++ b/packages/nouns-webapp/src/components/ProposalTransactionFormModal/index.tsx
@@ -19,6 +19,7 @@ import classes from './ProposalTransactionFormModal.module.css';
 import BigNumber from 'bignumber.js';
 import 'bs-custom-file-input';
 import 'react-stepz/dist/index.css';
+import { Trans } from '@lingui/macro';
 
 interface ProposalTransactionFormModalProps {
   show: boolean;
@@ -199,12 +200,16 @@ const ProposalTransactionFormModal = ({
       centered
     >
       <Modal.Header closeButton>
-        <Modal.Title>Add a Proposal Transaction</Modal.Title>
+        <Modal.Title>
+          <Trans>Add a Proposal Transaction</Trans>
+        </Modal.Title>
       </Modal.Header>
       <Modal.Body>
         <StepProgressBar className={classes.stepProgressBar} steps={steps} />
         <Step step={0}>
-          <label htmlFor="callee-address">Address (Callee or Recipient)</label>
+          <label htmlFor="callee-address">
+            <Trans>Address (Callee or Recipient)</Trans>
+          </label>
           <FormControl
             value={address}
             type="text"
@@ -213,11 +218,15 @@ const ProposalTransactionFormModal = ({
           />
         </Step>
         <Step step={1}>
-          <label htmlFor="eth-value">Value in ETH (Optional)</label>
+          <label htmlFor="eth-value">
+            <Trans>Value in ETH (Optional)</Trans>
+          </label>
           <FormControl value={value} id="eth-value" onChange={e => setValue(e.target.value)} />
         </Step>
         <Step step={2}>
-          <label htmlFor="function">Function (Optional)</label>
+          <label htmlFor="function">
+            <Trans>Function (Optional)</Trans>
+          </label>
           <FormControl
             value={func}
             as="select"
@@ -262,13 +271,15 @@ const ProposalTransactionFormModal = ({
               ))}
             </FormGroup>
           ) : (
-            'No arguments required'
+            <Trans>No arguments required </Trans>
           )}
         </Step>
         <Step step={4}>
           <Row>
             <Col sm="3">
-              <b>Address</b>
+              <b>
+                <Trans>Address</Trans>
+              </b>
             </Col>
             <Col sm="9" className="text-break">
               <a href={buildEtherscanAddressLink(address)} target="_blank" rel="noreferrer">
@@ -278,26 +289,32 @@ const ProposalTransactionFormModal = ({
           </Row>
           <Row>
             <Col sm="3">
-              <b>Value</b>
+              <b>
+                <Trans>Value</Trans>
+              </b>
             </Col>
-            <Col sm="9">{value ? `${value} ETH` : 'None'}</Col>
+            <Col sm="9">{value ? `${value} ETH` : <Trans>None</Trans>}</Col>
           </Row>
           <Row>
             <Col sm="3">
-              <b>Function</b>
+              <b>
+                <Trans>Function</Trans>
+              </b>
             </Col>
             <Col sm="9" className="text-break">
-              {func || 'None'}
+              {func || <Trans>None</Trans>}
             </Col>
           </Row>
           <Row>
             <Col sm="3">
-              <b>Arguments</b>
+              <b>
+                <Trans>Arguments</Trans>
+              </b>
             </Col>
             <Col sm="9">
               <hr />
             </Col>
-            <Col sm="9">{abi?.functions[func]?.inputs?.length ? '' : 'None'}</Col>
+            <Col sm="9">{abi?.functions[func]?.inputs?.length ? '' : <Trans>None</Trans>}</Col>
           </Row>
           {abi?.functions[func]?.inputs.map((input, i) => (
             <Row key={i}>
@@ -317,10 +334,14 @@ const ProposalTransactionFormModal = ({
             size="lg"
             disabled={currentStep === 0}
           >
-            Back
+            <Trans>Back</Trans>
           </Button>
           <Button onClick={stepForwardOrCallback} variant="primary" size="lg">
-            {currentStep !== steps.length - 1 ? 'Next' : 'Add Transaction'}
+            {currentStep !== steps.length - 1 ? (
+              <Trans>Next</Trans>
+            ) : (
+              <Trans>Add Transaction</Trans>
+            )}
           </Button>
         </div>
       </Modal.Body>
diff --git a/packages/nouns-webapp/src/components/Proposals/index.tsx b/packages/nouns-webapp/src/components/Proposals/index.tsx
index 83fbef2f..ac4e0631 100644
--- a/packages/nouns-webapp/src/components/Proposals/index.tsx
+++ b/packages/nouns-webapp/src/components/Proposals/index.tsx
@@ -7,6 +7,8 @@ import { useEthers } from '@usedapp/core';
 import { isMobileScreen } from '../../utils/isMobile';
 import clsx from 'clsx';
 import { useUserVotes } from '../../wrappers/nounToken';
+import { Trans } from '@lingui/macro';
+import { i18n } from '@lingui/core';
 
 const Proposals = ({ proposals }: { proposals: Proposal[] }) => {
   const history = useHistory();
@@ -18,26 +20,30 @@ const Proposals = ({ proposals }: { proposals: Proposal[] }) => {
 
   const nullStateCopy = () => {
     if (account !== null) {
-      return 'You have no Votes.';
+      return <Trans>You have no Votes.</Trans>;
     }
-    return 'Connect wallet to make a proposal.';
+    return <Trans>Connect wallet to make a proposal.</Trans>;
   };
 
   return (
     <div className={classes.proposals}>
       <div>
-        <h3 className={classes.heading}>Proposals</h3>
+        <h3 className={classes.heading}>
+          <Trans>Proposals</Trans>
+        </h3>
         {account !== undefined && connectedAccountNounVotes > 0 ? (
           <div className={classes.submitProposalButtonWrapper}>
             <Button className={classes.generateBtn} onClick={() => history.push('create-proposal')}>
-              Submit Proposal
+              <Trans>Submit Proposal</Trans>
             </Button>
           </div>
         ) : (
           <div className={clsx('d-flex', classes.submitProposalButtonWrapper)}>
             {!isMobile && <div className={classes.nullStateCopy}>{nullStateCopy()}</div>}
             <div className={classes.nullBtnWrapper}>
-              <Button className={classes.generateBtnDisabled}>Submit Proposal</Button>
+              <Button className={classes.generateBtnDisabled}>
+                <Trans>Submit Proposal</Trans>
+              </Button>
             </div>
           </div>
         )}
@@ -55,7 +61,8 @@ const Proposals = ({ proposals }: { proposals: Proposal[] }) => {
                 key={i}
               >
                 <span className={classes.proposalTitle}>
-                  <span className={classes.proposalId}>{p.id}</span> <span>{p.title}</span>
+                  <span className={classes.proposalId}>{i18n.number(parseInt(p.id || '0'))}</span>{' '}
+                  <span>{p.title}</span>
                 </span>
                 <div className={classes.proposalStatusWrapper}>
                   <ProposalStatus status={p.status}></ProposalStatus>
@@ -65,8 +72,12 @@ const Proposals = ({ proposals }: { proposals: Proposal[] }) => {
           })
       ) : (
         <Alert variant="secondary">
-          <Alert.Heading>No proposals found.</Alert.Heading>
-          <p>Proposals submitted by community members will appear here.</p>
+          <Alert.Heading>
+            <Trans>No proposals found</Trans>
+          </Alert.Heading>
+          <p>
+            <Trans>Proposals submitted by community members will appear here.</Trans>
+          </p>
         </Alert>
       )}
     </div>
diff --git a/packages/nouns-webapp/src/components/SettleManuallyBtn/index.tsx b/packages/nouns-webapp/src/components/SettleManuallyBtn/index.tsx
index c75846d9..564588b2 100644
--- a/packages/nouns-webapp/src/components/SettleManuallyBtn/index.tsx
+++ b/packages/nouns-webapp/src/components/SettleManuallyBtn/index.tsx
@@ -5,6 +5,7 @@ import dayjs from 'dayjs';
 import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
 import { faInfoCircle } from '@fortawesome/free-solid-svg-icons';
 import { CHAIN_ID } from '../../config';
+import { Trans } from '@lingui/macro';
 
 const SettleManuallyBtn: React.FC<{
   settleAuctionHandler: () => void;
@@ -50,7 +51,6 @@ const SettleManuallyBtn: React.FC<{
   }, [auction, auctionTimer]);
 
   const mins = timerDuration.minutes();
-  const minsContent = () => `${mins + 1} minute${mins !== 0 ? 's' : ''}`;
 
   return (
     <p className={classes.emergencySettleWrapper}>
@@ -60,11 +60,17 @@ const SettleManuallyBtn: React.FC<{
         disabled={!settleEnabled}
       >
         {settleEnabled ? (
-          <>{` Settle manually`}</>
+          <>
+            <Trans>Settle manually</Trans>
+          </>
         ) : (
           <>
             <FontAwesomeIcon icon={faInfoCircle} />
-            {` You can settle manually in ${minsContent()}`}
+            {mins !== 0 ? (
+              <Trans>You can settle manually in {mins + 1} minutes</Trans>
+            ) : (
+              <Trans>You can settle manually in 1 minute</Trans>
+            )}
           </>
         )}
       </button>
diff --git a/packages/nouns-webapp/src/components/VoteCard/index.tsx b/packages/nouns-webapp/src/components/VoteCard/index.tsx
index e0f1db7c..be7cfb31 100644
--- a/packages/nouns-webapp/src/components/VoteCard/index.tsx
+++ b/packages/nouns-webapp/src/components/VoteCard/index.tsx
@@ -5,6 +5,8 @@ import { Proposal } from '../../wrappers/nounsDao';
 import NounImageVoteTable from '../NounImageVoteTable';
 import VoteProgresBar from '../VoteProgressBar';
 import classes from './VoteCard.module.css';
+import { Trans } from '@lingui/macro';
+import { i18n } from '@lingui/core';
 
 export enum VoteCardVariant {
   FOR,
@@ -29,17 +31,17 @@ const VoteCard: React.FC<VoteCardProps> = props => {
   switch (variant) {
     case VoteCardVariant.FOR:
       titleClass = classes.for;
-      titleCopy = 'For';
+      titleCopy = <Trans>For</Trans>;
       voteCount = proposal.forCount;
       break;
     case VoteCardVariant.AGAINST:
       titleClass = classes.against;
-      titleCopy = 'Against';
+      titleCopy = <Trans>Against</Trans>;
       voteCount = proposal.againstCount;
       break;
     default:
       titleClass = classes.abstain;
-      titleCopy = 'Abstain';
+      titleCopy = <Trans>Abstain</Trans>;
       voteCount = proposal.abstainCount;
       break;
   }
@@ -51,11 +53,13 @@ const VoteCard: React.FC<VoteCardProps> = props => {
         <Card.Body className="p-2">
           <Card.Text className="py-2 m-0">
             <span className={`${classes.voteCardHeaderText} ${titleClass}`}>{titleCopy}</span>
-            {!isMobile && <span className={classes.voteCardVoteCount}>{voteCount}</span>}
+            {!isMobile && (
+              <span className={classes.voteCardVoteCount}>{i18n.number(voteCount)}</span>
+            )}
           </Card.Text>
           {isMobile && (
             <Card.Text className="py-2 m-0">
-              <span className={classes.voteCardVoteCount}>{voteCount}</span>
+              <span className={classes.voteCardVoteCount}>{i18n.number(voteCount)}</span>
             </Card.Text>
           )}
           <VoteProgresBar variant={variant} percentage={percentage} />
diff --git a/packages/nouns-webapp/src/components/VoteModal/index.tsx b/packages/nouns-webapp/src/components/VoteModal/index.tsx
index c4db5a4d..89a7f927 100644
--- a/packages/nouns-webapp/src/components/VoteModal/index.tsx
+++ b/packages/nouns-webapp/src/components/VoteModal/index.tsx
@@ -2,10 +2,12 @@ import { Button, FloatingLabel, FormControl, Spinner } from 'react-bootstrap';
 import Modal from '../Modal';
 import classes from './VoteModal.module.css';
 import { useCastVote, useCastVoteWithReason, Vote } from '../../wrappers/nounsDao';
-import { useCallback, useEffect, useState } from 'react';
+import { ReactNode, useCallback, useEffect, useState } from 'react';
 import { TransactionStatus } from '@usedapp/core';
 import NavBarButton, { NavBarButtonStyle } from '../NavBarButton';
 import clsx from 'clsx';
+import { Trans } from '@lingui/macro';
+import { i18n } from '@lingui/core';
 
 interface VoteModalProps {
   show: boolean;
@@ -24,12 +26,12 @@ const VoteModal = ({ show, onHide, proposalId, availableVotes }: VoteModalProps)
   const [isLoading, setIsLoading] = useState(false);
   const [isVoteSucessful, setIsVoteSuccessful] = useState(false);
   const [isVoteFailed, setIsVoteFailed] = useState(false);
-  const [failureCopy, setFailureCopy] = useState('');
-  const [errorMessage, setErrorMessage] = useState('');
+  const [failureCopy, setFailureCopy] = useState<ReactNode>('');
+  const [errorMessage, setErrorMessage] = useState<ReactNode>('');
 
   const getVoteErrorMessage = (error: string | undefined) => {
     if (error?.match(/voter already voted/)) {
-      return 'User Already Voted';
+      return <Trans>User Already Voted</Trans>;
     }
     return error;
   };
@@ -47,14 +49,16 @@ const VoteModal = ({ show, onHide, proposalId, availableVotes }: VoteModalProps)
         setIsVoteSuccessful(true);
         break;
       case 'Fail':
-        setFailureCopy('Transaction Failed');
-        setErrorMessage(state?.errorMessage || 'Please try again.');
+        setFailureCopy(<Trans>Transaction Failed</Trans>);
+        setErrorMessage(state?.errorMessage || <Trans>Please try again.</Trans>);
         setIsLoading(false);
         setIsVoteFailed(true);
         break;
       case 'Exception':
-        setFailureCopy('Error');
-        setErrorMessage(getVoteErrorMessage(state?.errorMessage) || 'Please try again.');
+        setFailureCopy(<Trans>Error</Trans>);
+        setErrorMessage(
+          getVoteErrorMessage(state?.errorMessage) || <Trans>Please try again.</Trans>,
+        );
         setIsLoading(false);
         setIsVoteFailed(true);
         break;
@@ -91,14 +95,22 @@ const VoteModal = ({ show, onHide, proposalId, availableVotes }: VoteModalProps)
     <>
       {isVoteSucessful && (
         <div className={classes.transactionStatus}>
-          <p>You've successfully voted on on prop {proposalId}</p>
+          <p>
+            <Trans>
+              You've successfully voted on on prop {i18n.number(parseInt(proposalId || '0'))}
+            </Trans>
+          </p>
 
-          <div className={classes.voteSuccessBody}>Thank you for voting.</div>
+          <div className={classes.voteSuccessBody}>
+            <Trans>Thank you for voting.</Trans>
+          </div>
         </div>
       )}
       {isVoteFailed && (
         <div className={classes.transactionStatus}>
-          <p className={classes.voteFailureTitle}>There was an error voting for your account.</p>
+          <p className={classes.voteFailureTitle}>
+            <Trans>There was an error voting for your account.</Trans>
+          </p>
           <div className={classes.voteFailureBody}>
             {failureCopy}: <span className={classes.voteFailureErrorMessage}>{errorMessage}</span>
           </div>
@@ -108,9 +120,16 @@ const VoteModal = ({ show, onHide, proposalId, availableVotes }: VoteModalProps)
         <div className={clsx(classes.votingButtonsWrapper, isLoading ? classes.disabled : '')}>
           <div onClick={() => setVote(Vote.FOR)}>
             <NavBarButton
-              buttonText={`Cast ${availableVotes} ${
-                availableVotes > 1 ? 'votes' : 'vote'
-              } for Prop ${proposalId} `}
+              buttonText={
+                availableVotes > 1 ? (
+                  <Trans>
+                    Cast {i18n.number(availableVotes)} votes for Prop{' '}
+                    {i18n.number(parseInt(proposalId || '0'))}
+                  </Trans>
+                ) : (
+                  <Trans>Cast 1 vote for Prop {i18n.number(parseInt(proposalId || '0'))}</Trans>
+                )
+              }
               buttonIcon={<></>}
               buttonStyle={
                 vote === Vote.FOR
@@ -122,9 +141,16 @@ const VoteModal = ({ show, onHide, proposalId, availableVotes }: VoteModalProps)
           <br />
           <div onClick={() => setVote(Vote.AGAINST)}>
             <NavBarButton
-              buttonText={`Cast ${availableVotes} ${
-                availableVotes > 1 ? 'votes' : 'vote'
-              } against Prop ${proposalId} `}
+              buttonText={
+                availableVotes > 1 ? (
+                  <Trans>
+                    Cast {i18n.number(availableVotes)} votes against Prop{' '}
+                    {i18n.number(parseInt(proposalId || '0'))}
+                  </Trans>
+                ) : (
+                  <Trans>Cast 1 vote against Prop {i18n.number(parseInt(proposalId || '0'))}</Trans>
+                )
+              }
               buttonIcon={<></>}
               buttonStyle={
                 vote === Vote.AGAINST
@@ -136,7 +162,11 @@ const VoteModal = ({ show, onHide, proposalId, availableVotes }: VoteModalProps)
           <br />
           <div onClick={() => setVote(Vote.ABSTAIN)}>
             <NavBarButton
-              buttonText={`Abstain from voting on Prop ${proposalId} `}
+              buttonText={
+                <Trans>
+                  Abstain from voting on Prop {i18n.number(parseInt(proposalId || '0'))}
+                </Trans>
+              }
               buttonIcon={<></>}
               buttonStyle={
                 vote === Vote.ABSTAIN
@@ -146,10 +176,12 @@ const VoteModal = ({ show, onHide, proposalId, availableVotes }: VoteModalProps)
             />
           </div>
           <br />
-          <FloatingLabel controlId="reasonTextarea" label="Reason (Optional)">
+          <FloatingLabel controlId="reasonTextarea" label={<Trans>Reason (Optional)</Trans>}>
             <FormControl
               as="textarea"
-              placeholder={`Reason for voting ${Vote[vote ?? Vote.FOR]}`}
+              placeholder={
+                i18n.locale === 'en' ? `Reason for voting ${Vote[vote ?? Vote.FOR]}` : ''
+              }
               value={voteReason}
               onChange={e => setVoteReason(e.target.value)}
               className={classes.voteReasonTextarea}
@@ -170,7 +202,7 @@ const VoteModal = ({ show, onHide, proposalId, availableVotes }: VoteModalProps)
             }}
             className={vote === undefined ? classes.submitBtnDisabled : classes.submitBtn}
           >
-            {isLoading ? <Spinner animation="border" /> : 'Submit Vote'}
+            {isLoading ? <Spinner animation="border" /> : <Trans>Submit Vote</Trans>}
           </Button>
         </div>
       )}
@@ -191,7 +223,7 @@ const VoteModal = ({ show, onHide, proposalId, availableVotes }: VoteModalProps)
       {show && (
         <Modal
           onDismiss={resetNonSuccessStateAndHideModal}
-          title={`Vote on Prop ${proposalId}`}
+          title={<Trans>Vote on Prop {i18n.number(parseInt(proposalId || '0'))}</Trans>}
           content={voteModalContent}
         />
       )}
diff --git a/packages/nouns-webapp/src/components/VoteStatusPill/index.tsx b/packages/nouns-webapp/src/components/VoteStatusPill/index.tsx
index 4b9be383..1306363a 100644
--- a/packages/nouns-webapp/src/components/VoteStatusPill/index.tsx
+++ b/packages/nouns-webapp/src/components/VoteStatusPill/index.tsx
@@ -2,7 +2,7 @@ import classes from './VoteStatusPill.module.css';
 
 interface VoteStatusPillProps {
   status: string;
-  text: string;
+  text: React.ReactNode;
 }
 
 const VoteStatusPill: React.FC<VoteStatusPillProps> = props => {
diff --git a/packages/nouns-webapp/src/components/WalletConnectModal/index.tsx b/packages/nouns-webapp/src/components/WalletConnectModal/index.tsx
index 84b7b867..91801e75 100644
--- a/packages/nouns-webapp/src/components/WalletConnectModal/index.tsx
+++ b/packages/nouns-webapp/src/components/WalletConnectModal/index.tsx
@@ -10,6 +10,7 @@ import { TrezorConnector } from '@web3-react/trezor-connector';
 import { FortmaticConnector } from '@web3-react/fortmatic-connector';
 import config, { CHAIN_ID } from '../../config';
 import classes from './WalletConnectModal.module.css';
+import { Trans } from '@lingui/macro';
 
 const WalletConnectModal: React.FC<{ onDismiss: () => void }> = props => {
   const { onDismiss } = props;
@@ -100,10 +101,12 @@ const WalletConnectModal: React.FC<{ onDismiss: () => void }> = props => {
           console.log(localStorage.removeItem('walletconnect'));
         }}
       >
-        Clear WalletConnect Data
+        <Trans>Clear WalletConnect Data</Trans>
       </div>
     </div>
   );
-  return <Modal title="Connect your wallet" content={wallets} onDismiss={onDismiss} />;
+  return (
+    <Modal title={<Trans>Connect your wallet</Trans>} content={wallets} onDismiss={onDismiss} />
+  );
 };
 export default WalletConnectModal;
diff --git a/packages/nouns-webapp/src/components/Winner/index.tsx b/packages/nouns-webapp/src/components/Winner/index.tsx
index 50560fa1..97d77453 100644
--- a/packages/nouns-webapp/src/components/Winner/index.tsx
+++ b/packages/nouns-webapp/src/components/Winner/index.tsx
@@ -4,6 +4,7 @@ import classes from './Winner.module.css';
 import ShortAddress from '../ShortAddress';
 import clsx from 'clsx';
 import { isMobileScreen } from '../../utils/isMobile';
+import { Trans } from '@lingui/macro';
 
 interface WinnerProps {
   winner: string;
@@ -29,7 +30,7 @@ const Winner: React.FC<WinnerProps> = props => {
             color: isCool ? 'var(--brand-cool-dark-text)' : 'var(--brand-warm-dark-text)',
           }}
         >
-          You
+          <Trans>You</Trans>
         </h2>
       </Col>
       {!isMobile && (
@@ -40,7 +41,9 @@ const Winner: React.FC<WinnerProps> = props => {
             rel="noreferrer noopener"
             className={classes.verifyLink}
           >
-            <Button className={classes.verifyButton}>What now?</Button>
+            <Button className={classes.verifyButton}>
+              <Trans>What now?</Trans>
+            </Button>
           </a>
         </Col>
       )}
@@ -60,7 +63,7 @@ const Winner: React.FC<WinnerProps> = props => {
               color: isCool ? 'var(--brand-cool-light-text)' : 'var(--brand-warm-light-text)',
             }}
           >
-            Winner
+            <Trans>Winner</Trans>
           </h4>
         </Col>
         <Col xs="auto" lg={12}>
@@ -82,7 +85,9 @@ const Winner: React.FC<WinnerProps> = props => {
             rel="noreferrer noopener"
             className={classes.verifyLink}
           >
-            <Button className={classes.verifyButton}>What now?</Button>
+            <Button className={classes.verifyButton}>
+              <Trans>What now?</Trans>
+            </Button>
           </a>
         </Row>
       )}
diff --git a/packages/nouns-webapp/src/hooks/useActivateLocale.ts b/packages/nouns-webapp/src/hooks/useActivateLocale.ts
new file mode 100644
index 00000000..a2d3f5a5
--- /dev/null
+++ b/packages/nouns-webapp/src/hooks/useActivateLocale.ts
@@ -0,0 +1,48 @@
+/**
+ * useActiveLocale.ts is a modified version of https://github.com/Uniswap/interface/blob/main/src/hooks/useActiveLocale.ts
+ */
+import { fromNavigator } from '@lingui/detect-locale';
+import { DEFAULT_LOCALE, SUPPORTED_LOCALES, SupportedLocale } from '../i18n/locales';
+
+/**
+ * Given a locale string (e.g. from user agent), return the best match for corresponding SupportedLocale
+ * @param maybeSupportedLocale the fuzzy locale identifier
+ */
+function parseLocale(maybeSupportedLocale: unknown): SupportedLocale | undefined {
+  if (typeof maybeSupportedLocale !== 'string') return undefined;
+  const lowerMaybeSupportedLocale = maybeSupportedLocale.toLowerCase();
+  return SUPPORTED_LOCALES.find(
+    (locale: string) =>
+      locale.toLowerCase() === lowerMaybeSupportedLocale ||
+      locale.split('-')[0] === lowerMaybeSupportedLocale,
+  );
+}
+
+/**
+ * Returns the supported locale read from the user agent (navigator)
+ */
+export function navigatorLocale(): SupportedLocale | undefined {
+  if (!navigator.language) return undefined;
+
+  const [language, region] = navigator.language.split('-');
+
+  if (region) {
+    return parseLocale(`${language}-${region.toUpperCase()}`) ?? parseLocale(language);
+  }
+
+  return parseLocale(language);
+}
+
+function storeLocale(): SupportedLocale | undefined {
+  return localStorage.getItem('lang') ?? undefined;
+}
+
+export const initialLocale = parseLocale(storeLocale()) ?? navigatorLocale() ?? DEFAULT_LOCALE;
+
+/**
+ * Returns the currently active locale, from a combination of user agent, query string, and user settings stored in redux
+ * Stores the query string locale in redux (if set) to persist across sessions
+ */
+export function useActiveLocale(): SupportedLocale {
+  return storeLocale() ?? navigatorLocale() ?? fromNavigator() ?? DEFAULT_LOCALE;
+}
diff --git a/packages/nouns-webapp/src/i18n/LanguageProvider.tsx b/packages/nouns-webapp/src/i18n/LanguageProvider.tsx
new file mode 100644
index 00000000..3b92d041
--- /dev/null
+++ b/packages/nouns-webapp/src/i18n/LanguageProvider.tsx
@@ -0,0 +1,24 @@
+/**
+ * LanguageProvider.tsx is a modified version of https://github.com/Uniswap/interface/blob/main/src/lib/i18n.tsx
+ */
+import { SupportedLocale } from './locales';
+import { initialLocale, useActiveLocale } from '../hooks/useActivateLocale';
+import { dynamicActivate, NounsI18nProvider } from './NounsI18nProvider';
+import { ReactNode, useCallback } from 'react';
+
+dynamicActivate(initialLocale);
+
+export function LanguageProvider({ children }: { children: ReactNode }) {
+  const locale = useActiveLocale();
+
+  const onActivate = useCallback((locale: SupportedLocale) => {
+    // dynamicActivate(locale);
+    dynamicActivate('pseudo');
+  }, []);
+
+  return (
+    <NounsI18nProvider locale={locale} forceRenderAfterLocaleChange={false} onActivate={onActivate}>
+      {children}
+    </NounsI18nProvider>
+  );
+}
diff --git a/packages/nouns-webapp/src/i18n/NounsI18nProvider.tsx b/packages/nouns-webapp/src/i18n/NounsI18nProvider.tsx
new file mode 100644
index 00000000..83d0ebe6
--- /dev/null
+++ b/packages/nouns-webapp/src/i18n/NounsI18nProvider.tsx
@@ -0,0 +1,68 @@
+/**
+ * NounsI18nProvier.tsx is a modified version of https://github.com/Uniswap/interface/blob/main/src/lib/i18n.tsx
+ */
+import { i18n } from '@lingui/core';
+import { I18nProvider } from '@lingui/react';
+import { DEFAULT_LOCALE, SupportedLocale } from './locales';
+import { en, ja } from 'make-plural/plurals';
+import { PluralCategory } from 'make-plural/plurals';
+import { ReactNode, useEffect } from 'react';
+
+type LocalePlural = {
+  [key in SupportedLocale]: (n: number | string, ord?: boolean) => PluralCategory;
+};
+
+const plurals: LocalePlural = {
+  'en-US': en,
+  'ja-JP': ja,
+  pseudo: en,
+};
+
+export async function dynamicActivate(locale: SupportedLocale) {
+  i18n.loadLocaleData(locale, { plurals: () => plurals[locale] });
+  try {
+    const catalog = await import(`../locales/${locale}.js`);
+    // Bundlers will either export it as default or as a named export named default.
+    i18n.load(locale, catalog.messages || catalog.default.messages);
+  } catch {}
+  console.log('activating: ', locale);
+  i18n.activate(locale);
+}
+
+interface ProviderProps {
+  locale: SupportedLocale;
+  forceRenderAfterLocaleChange?: boolean;
+  onActivate?: (locale: SupportedLocale) => void;
+  children: ReactNode;
+}
+
+export function NounsI18nProvider({
+  locale,
+  forceRenderAfterLocaleChange = true,
+  onActivate,
+  children,
+}: ProviderProps) {
+  useEffect(() => {
+    dynamicActivate(locale)
+      .then(() => onActivate?.(locale))
+      .catch(error => {
+        console.error('Failed to activate locale', locale, error);
+      });
+  }, [locale, onActivate]);
+
+  // Initialize the locale immediately if it is DEFAULT_LOCALE, so that keys are shown while the translation messages load.
+  // This renders the translation _keys_, not the translation _messages_, which is only acceptable while loading the DEFAULT_LOCALE,
+  // as [there are no "default" messages](https://github.com/lingui/js-lingui/issues/388#issuecomment-497779030).
+  // See https://github.com/lingui/js-lingui/issues/1194#issuecomment-1068488619.
+  if (i18n.locale === undefined && locale === DEFAULT_LOCALE) {
+    i18n.loadLocaleData(DEFAULT_LOCALE, { plurals: () => plurals[DEFAULT_LOCALE] });
+    i18n.load(DEFAULT_LOCALE, {});
+    i18n.activate(DEFAULT_LOCALE);
+  }
+
+  return (
+    <I18nProvider forceRenderOnLocaleChange={forceRenderAfterLocaleChange} i18n={i18n}>
+      {children}
+    </I18nProvider>
+  );
+}
diff --git a/packages/nouns-webapp/src/i18n/locales.ts b/packages/nouns-webapp/src/i18n/locales.ts
new file mode 100644
index 00000000..5cb69495
--- /dev/null
+++ b/packages/nouns-webapp/src/i18n/locales.ts
@@ -0,0 +1,14 @@
+export const SUPPORTED_LOCALES = [
+  // order as they appear in the language dropdown
+  'en-US',
+  'ja-JP',
+];
+export type SupportedLocale = typeof SUPPORTED_LOCALES[number] | 'pseudo';
+
+export const DEFAULT_LOCALE: SupportedLocale = 'en-US';
+
+export const LOCALE_LABEL: { [locale in SupportedLocale]: string } = {
+  'en-US': 'English',
+  'ja-JP': '日本語',
+  pseudo: 'ƥƨèúδô',
+};
diff --git a/packages/nouns-webapp/src/i18n/setLocale.ts b/packages/nouns-webapp/src/i18n/setLocale.ts
new file mode 100644
index 00000000..806f9420
--- /dev/null
+++ b/packages/nouns-webapp/src/i18n/setLocale.ts
@@ -0,0 +1,13 @@
+import { dynamicActivate } from './NounsI18nProvider';
+
+/**
+ * Sets locale in local storage
+ *
+ * Note: this value will persist across sessions
+ *
+ * @param locale Locale we wish to use for this user
+ */
+export const setLocale = (locale: string) => {
+  localStorage.setItem('lang', locale);
+  dynamicActivate(locale);
+};
diff --git a/packages/nouns-webapp/src/index.tsx b/packages/nouns-webapp/src/index.tsx
index b2206d67..9c1d8138 100644
--- a/packages/nouns-webapp/src/index.tsx
+++ b/packages/nouns-webapp/src/index.tsx
@@ -42,6 +42,7 @@ import { Provider } from 'react-redux';
 import { composeWithDevTools } from 'redux-devtools-extension';
 import { nounPath } from './utils/history';
 import { push } from 'connected-react-router';
+import { LanguageProvider } from './i18n/LanguageProvider';
 
 dotenv.config();
 
@@ -202,7 +203,9 @@ ReactDOM.render(
           <ApolloProvider client={client}>
             <PastAuctions />
             <DAppProvider config={useDappConfig}>
-              <App />
+              <LanguageProvider>
+                <App />
+              </LanguageProvider>
               <Updaters />
             </DAppProvider>
           </ApolloProvider>
diff --git a/packages/nouns-webapp/src/locales/en-US.js b/packages/nouns-webapp/src/locales/en-US.js
new file mode 100644
index 00000000..35d5ce85
--- /dev/null
+++ b/packages/nouns-webapp/src/locales/en-US.js
@@ -0,0 +1,314 @@
+/*eslint-disable*/ module.exports = {
+  messages: {
+    "'Nounders' are the group of ten builders that initiated Nouns. Here are the Nounders:":
+      "'Nounders' are the group of ten builders that initiated Nouns. Here are the Nounders:",
+    '100% of Noun auction proceeds are trustlessly sent to the treasury.':
+      '100% of Noun auction proceeds are trustlessly sent to the treasury.',
+    '3.5 artists, 6.5 technologists': '3.5 artists, 6.5 technologists',
+    "404: This is not the person, place, or thing you're looking for...":
+      "404: This is not the person, place, or thing you're looking for...",
+    '<0>{flooredMinutes}<1>m</1></0>': ['<0>', ['flooredMinutes'], '<1>m</1></0>'],
+    '<0>{flooredSeconds}<1>s</1></0>': ['<0>', ['flooredSeconds'], '<1>s</1></0>'],
+    'Absent for': 'Absent for',
+    Abstain: 'Abstain',
+    'Abstain from voting on Prop {0}': ['Abstain from voting on Prop ', ['0']],
+    'Abstained on': 'Abstained on',
+    Accessory: 'Accessory',
+    Active: 'Active',
+    Activity: 'Activity',
+    'Add Transaction': 'Add Transaction',
+    'Add a Proposal Transaction': 'Add a Proposal Transaction',
+    'Add one or more transactions and describe your proposal for the community. The proposal cannot modified after submission, so please verify all information before submitting. The voting period will begin after 2 1/3 days and last for 3 days.':
+      'Add one or more transactions and describe your proposal for the community. The proposal cannot modified after submission, so please verify all information before submitting. The voting period will begin after 2 1/3 days and last for 3 days.',
+    Address: 'Address',
+    'Address (Callee or Recipient)': 'Address (Callee or Recipient)',
+    Against: 'Against',
+    "All Noun auction proceeds are sent to the Nouns DAO. For this reason, we, the project's founders (‘Nounders’) have chosen to compensate ourselves with Nouns. Every 10th noun for the first 5 years of the project will be sent to our multisig (5/10), where it will be vested and distributed to individual Nounders.":
+      "All Noun auction proceeds are sent to the Nouns DAO. For this reason, we, the project's founders (‘Nounders’) have chosen to compensate ourselves with Nouns. Every 10th noun for the first 5 years of the project will be sent to our multisig (5/10), where it will be vested and distributed to individual Nounders.",
+    'All Nouns are members of Nouns DAO.': 'All Nouns are members of Nouns DAO.',
+    'All Proposals': 'All Proposals',
+    Arguments: 'Arguments',
+    'Artwork is generative and stored directly on-chain (not IPFS).':
+      'Artwork is generative and stored directly on-chain (not IPFS).',
+    'Auction ended': 'Auction ended',
+    'Auction ends in': 'Auction ends in',
+    Back: 'Back',
+    Background: 'Background',
+    "Because 100% of Noun auction proceeds are sent to Nouns DAO, Nounders have chosen to compensate themselves with Nouns. Every 10th Noun for the first 5 years of the project (Noun ids #0, #10, #20, #30 and so on) will be automatically sent to the Nounder's multisig to be vested and shared among the founding members of the project.":
+      "Because 100% of Noun auction proceeds are sent to Nouns DAO, Nounders have chosen to compensate themselves with Nouns. Every 10th Noun for the first 5 years of the project (Noun ids #0, #10, #20, #30 and so on) will be automatically sent to the Nounder's multisig to be vested and shared among the founding members of the project.",
+    Bid: 'Bid',
+    'Bid history': 'Bid history',
+    'Bid was placed successfully!': 'Bid was placed successfully!',
+    Bids: 'Bids',
+    'Bids for': 'Bids for',
+    'Bids will appear here': 'Bids will appear here',
+    Body: 'Body',
+    Born: 'Born',
+    Canceled: 'Canceled',
+    'Cast 1 vote against Prop {0}': ['Cast 1 vote against Prop ', ['0']],
+    'Cast 1 vote for Prop {0}': ['Cast 1 vote for Prop ', ['0']],
+    'Cast {0} votes against Prop {1}': ['Cast ', ['0'], ' votes against Prop ', ['1']],
+    'Cast {0} votes for Prop {1}': ['Cast ', ['0'], ' votes for Prop ', ['1']],
+    'Clear WalletConnect Data': 'Clear WalletConnect Data',
+    'Compound Governance': 'Compound Governance',
+    Connect: 'Connect',
+    'Connect a wallet to vote.': 'Connect a wallet to vote.',
+    'Connect wallet to make a proposal.': 'Connect wallet to make a proposal.',
+    'Connect your wallet': 'Connect your wallet',
+    'Create Proposal': 'Create Proposal',
+    Cryptopunks: 'Cryptopunks',
+    'Current bid': 'Current bid',
+    DAO: 'DAO',
+    'Daily Auctions': 'Daily Auctions',
+    Defeated: 'Defeated',
+    Description: 'Description',
+    Disconnect: 'Disconnect',
+    Discord: 'Discord',
+    Discourse: 'Discourse',
+    Docs: 'Docs',
+    'EVERY DAY,': 'EVERY DAY,',
+    'Each time an auction is settled, the settlement transaction will also cause a new Noun to be minted and a new 24 hour auction to begin.':
+      'Each time an auction is settled, the settlement transaction will also cause a new Noun to be minted and a new 24 hour auction to begin.',
+    Ended: 'Ended',
+    Ends: 'Ends',
+    'Ends on': 'Ends on',
+    Error: 'Error',
+    'Error fetching Noun birthday': 'Error fetching Noun birthday',
+    Etherscan: 'Etherscan',
+    Execute: 'Execute',
+    Executed: 'Executed',
+    Expired: 'Expired',
+    Explore: 'Explore',
+    'FOREVER.': 'FOREVER.',
+    'Failed to fetch': 'Failed to fetch',
+    'Failed to fetch Noun activity history': 'Failed to fetch Noun activity history',
+    'Failed to fetch Noun info': 'Failed to fetch Noun info',
+    For: 'For',
+    Forums: 'Forums',
+    Function: 'Function',
+    'Function (Optional)': 'Function (Optional)',
+    'Generate Nouns': 'Generate Nouns',
+    Glasses: 'Glasses',
+    Governance: 'Governance',
+    'Governance ‘Slow Start’': 'Governance ‘Slow Start’',
+    Head: 'Head',
+    'Held by': 'Held by',
+    'Help mint the next Noun': 'Help mint the next Noun',
+    'In addition to the precautions taken by Compound Governance, Nounders have given themselves a special veto right to ensure that no malicious proposals can be passed while the Noun supply is low. This veto right will only be used if an obviously harmful governance proposal has been passed, and is intended as a last resort.':
+      'In addition to the precautions taken by Compound Governance, Nounders have given themselves a special veto right to ensure that no malicious proposals can be passed while the Noun supply is low. This veto right will only be used if an obviously harmful governance proposal has been passed, and is intended as a last resort.',
+    'Insufficient bid amount 🤏': 'Insufficient bid amount 🤏',
+    Language: 'Language',
+    'Learn more below, or start creating Nouns off-chain using the {playgroundLink}.': [
+      'Learn more below, or start creating Nouns off-chain using the ',
+      ['playgroundLink'],
+      '.',
+    ],
+    'Loading...': 'Loading...',
+    Next: 'Next',
+    'No arguments required': 'No arguments required',
+    'No explicit rules exist for attribute scarcity; all Nouns are equally rare.':
+      'No explicit rules exist for attribute scarcity; all Nouns are equally rare.',
+    'No proposals found': 'No proposals found',
+    None: 'None',
+    Noun: 'Noun',
+    'Noun Seeder Contract': 'Noun Seeder Contract',
+    'Noun Traits': 'Noun Traits',
+    'Noun {0}': ['Noun ', ['0']],
+    "Nounder distributions don't interfere with the cadence of 24 hour auctions. Nouns are sent directly to the Nounder's Multisig, and auctions continue on schedule with the next available Noun ID.":
+      "Nounder distributions don't interfere with the cadence of 24 hour auctions. Nouns are sent directly to the Nounder's Multisig, and auctions continue on schedule with the next available Noun ID.",
+    "Nounder's Reward": "Nounder's Reward",
+    'Nounders receive rewards in the form of Nouns (10% of supply for first 5 years).':
+      'Nounders receive rewards in the form of Nouns (10% of supply for first 5 years).',
+    'Nounders will proveably revoke this veto right when they deem it safe to do so. This decision will be based on a healthy Noun distribution and a community that is engaged in the governance process.':
+      'Nounders will proveably revoke this veto right when they deem it safe to do so. This decision will be based on a healthy Noun distribution and a community that is engaged in the governance process.',
+    "Nounders' Reward": "Nounders' Reward",
+    Nouns: 'Nouns',
+    'Nouns Auction House': 'Nouns Auction House',
+    'Nouns DAO': 'Nouns DAO',
+    'Nouns DAO uses a fork of {compoundGovLink}.': [
+      'Nouns DAO uses a fork of ',
+      ['compoundGovLink'],
+      '.',
+    ],
+    'Nouns DAO utilizes a fork of {compoundGovLink} and is the main governing body of the Nouns ecosystem. The Nouns DAO treasury receives 100% of ETH proceeds from daily Noun auctions. Each Noun is an irrevocable member of Nouns DAO and entitled to one vote in all governance matters. Noun votes are non-transferable (if you sell your Noun the vote goes with it) but delegatable, which means you can assign your vote to someone else as long as you own your Noun.':
+      [
+        'Nouns DAO utilizes a fork of ',
+        ['compoundGovLink'],
+        ' and is the main governing body of the Nouns ecosystem. The Nouns DAO treasury receives 100% of ETH proceeds from daily Noun auctions. Each Noun is an irrevocable member of Nouns DAO and entitled to one vote in all governance matters. Noun votes are non-transferable (if you sell your Noun the vote goes with it) but delegatable, which means you can assign your vote to someone else as long as you own your Noun.',
+      ],
+    'Nouns Protocol': 'Nouns Protocol',
+    'Nouns are an experimental attempt to improve the formation of on-chain avatar communities. While projects such as {cryptopunksLink} have attempted to bootstrap digital community and identity, Nouns attempt to bootstrap identity, community, governance, and a treasury that can be used by the community':
+      [
+        'Nouns are an experimental attempt to improve the formation of on-chain avatar communities. While projects such as ',
+        ['cryptopunksLink'],
+        ' have attempted to bootstrap digital community and identity, Nouns attempt to bootstrap identity, community, governance, and a treasury that can be used by the community',
+      ],
+    "Nouns are generated randomly based Ethereum block hashes. There are no 'if' statements or other rules governing Noun trait scarcity, which makes all Nouns equally rare. As of this writing, Nouns are made up of:":
+      "Nouns are generated randomly based Ethereum block hashes. There are no 'if' statements or other rules governing Noun trait scarcity, which makes all Nouns equally rare. As of this writing, Nouns are made up of:",
+    'Nouns are stored directly on Ethereum and do not utilize pointers to other networks such as IPFS. This is possible because Noun parts are compressed and stored on-chain using a custom run-length encoding (RLE), which is a form of lossless compression.':
+      'Nouns are stored directly on Ethereum and do not utilize pointers to other networks such as IPFS. This is possible because Noun parts are compressed and stored on-chain using a custom run-length encoding (RLE), which is a form of lossless compression.',
+    'Nouns artwork is in the {publicDomainLink}.': [
+      'Nouns artwork is in the ',
+      ['publicDomainLink'],
+      '.',
+    ],
+    'Nouns govern <0>Nouns DAO</0>. Nouns can vote on proposals or delegate their vote to a third party. A minimum of <1>{nounsRequired} {0}</1> is required to submit proposals.':
+      [
+        'Nouns govern <0>Nouns DAO</0>. Nouns can vote on proposals or delegate their vote to a third party. A minimum of <1>',
+        ['nounsRequired'],
+        ' ',
+        ['0'],
+        '</1> is required to submit proposals.',
+      ],
+    'ONE NOUN,': 'ONE NOUN,',
+    'On-Chain Artwork': 'On-Chain Artwork',
+    'One Noun is equal to one vote.': 'One Noun is equal to one vote.',
+    'One Noun is trustlessly auctioned every 24 hours, forever.':
+      'One Noun is trustlessly auctioned every 24 hours, forever.',
+    'Only 32x32 PNG images are accepted': 'Only 32x32 PNG images are accepted',
+    'Only Nons you owned or were delegated to you before {0} are eligible to vote.': [
+      'Only Nons you owned or were delegated to you before ',
+      ['0'],
+      ' are eligible to vote.',
+    ],
+    Pending: 'Pending',
+    'Place bid': 'Place bid',
+    Playground: 'Playground',
+    'Please place a bid higher than or equal to the minimum bid amount of {0} ETH': [
+      'Please place a bid higher than or equal to the minimum bid amount of ',
+      ['0'],
+      ' ETH',
+    ],
+    'Please try again.': 'Please try again.',
+    'Preview:': 'Preview:',
+    Proposal: 'Proposal',
+    'Proposal Created!': 'Proposal Created!',
+    'Proposal Executed!': 'Proposal Executed!',
+    'Proposal Queued!': 'Proposal Queued!',
+    'Proposal {0}': ['Proposal ', ['0']],
+    Proposals: 'Proposals',
+    'Proposals submitted by community members will appear here.':
+      'Proposals submitted by community members will appear here.',
+    'Proposed Transactions': 'Proposed Transactions',
+    Proposer: 'Proposer',
+    Queue: 'Queue',
+    Queued: 'Queued',
+    Quorum: 'Quorum',
+    'Reason (Optional)': 'Reason (Optional)',
+    'Select Language': 'Select Language',
+    Settle: 'Settle',
+    'Settle Auction': 'Settle Auction',
+    'Settle manually': 'Settle manually',
+    'Settled auction successfully!': 'Settled auction successfully!',
+    'Settlement of one auction kicks off the next.':
+      'Settlement of one auction kicks off the next.',
+    'Show all {0} events': ['Show all ', ['0'], ' events'],
+    'Show fewer': 'Show fewer',
+    'Sign out': 'Sign out',
+    Snapshot: 'Snapshot',
+    Starts: 'Starts',
+    'Submit Proposal': 'Submit Proposal',
+    'Submit Vote': 'Submit Vote',
+    'Submit vote': 'Submit vote',
+    Succeeded: 'Succeeded',
+    Success: 'Success',
+    Summary: 'Summary',
+    Switch: 'Switch',
+    'Switch wallet': 'Switch wallet',
+    'Taken at block': 'Taken at block',
+    'Thank you for voting.': 'Thank you for voting.',
+    'The Noun Seeder contract is used to determine Noun traits during the minting process. The seeder contract can be replaced to allow for future trait generation algorithm upgrades. Additionally, it can be locked by the Nouns DAO to prevent any future updates. Currently, Noun traits are determined using pseudo-random number generation:':
+      'The Noun Seeder contract is used to determine Noun traits during the minting process. The seeder contract can be replaced to allow for future trait generation algorithm upgrades. Additionally, it can be locked by the Nouns DAO to prevent any future updates. Currently, Noun traits are determined using pseudo-random number generation:',
+    'The Nounders': 'The Nounders',
+    'The Nounders reward is intended as compensation for our pre and post-launch contributions to the project, and to help us participate meaningfully in governance as the project matures. Since there are 10 Nounders, after 5 years each Nounder could receive up to 1% of the Noun supply.':
+      'The Nounders reward is intended as compensation for our pre and post-launch contributions to the project, and to help us participate meaningfully in governance as the project matures. Since there are 10 Nounders, after 5 years each Nounder could receive up to 1% of the Noun supply.',
+    'The Nouns Auction Contract will act as a self-sufficient Noun generation and distribution mechanism, auctioning one Noun every 24 hours, forever. 100% of auction proceeds (ETH) are automatically deposited in the Nouns DAO treasury, where they are governed by Noun owners.':
+      'The Nouns Auction Contract will act as a self-sufficient Noun generation and distribution mechanism, auctioning one Noun every 24 hours, forever. 100% of auction proceeds (ETH) are automatically deposited in the Nouns DAO treasury, where they are governed by Noun owners.',
+    'The compressed parts are efficiently converted into a single base64 encoded SVG image on-chain. To accomplish this, each part is decoded into an intermediate format before being converted into a series of SVG rects using batched, on-chain string concatenation. Once the entire SVG has been generated, it is base64 encoded.':
+      'The compressed parts are efficiently converted into a single base64 encoded SVG image on-chain. To accomplish this, each part is decoded into an intermediate format before being converted into a series of SVG rects using batched, on-chain string concatenation. Once the entire SVG has been generated, it is base64 encoded.',
+    "The playground was built using the {nounsProtocolLink}. Noun's traits are determined by the Noun Seed. The seed was generated using {nounsAssetsLink} and rendered using the {nounsSDKLink}.":
+      [
+        'The playground was built using the ',
+        ['nounsProtocolLink'],
+        ". Noun's traits are determined by the Noun Seed. The seed was generated using ",
+        ['nounsAssetsLink'],
+        ' and rendered using the ',
+        ['nounsSDKLink'],
+        '.',
+      ],
+    'The treasury is controlled exclusively by Nouns via governance.':
+      'The treasury is controlled exclusively by Nouns via governance.',
+    'There was an error voting for your account.': 'There was an error voting for your account.',
+    'This Noun has no activity, since it was just created. Check back soon!':
+      'This Noun has no activity, since it was just created. Check back soon!',
+    'This treasury exists for <0>Nouns DAO</0> participants to allocate resources for the long-term growth and prosperity of the Nouns project.':
+      'This treasury exists for <0>Nouns DAO</0> participants to allocate resources for the long-term growth and prosperity of the Nouns project.',
+    Threshold: 'Threshold',
+    'Time left': 'Time left',
+    'Tip:': 'Tip:',
+    'Trait generation is not truly random. Traits can be predicted when minting a Noun on the pending block.':
+      'Trait generation is not truly random. Traits can be predicted when minting a Noun on the pending block.',
+    'Transaction Failed': 'Transaction Failed',
+    'Transaction Successful!': 'Transaction Successful!',
+    Treasury: 'Treasury',
+    Twitter: 'Twitter',
+    Undetermined: 'Undetermined',
+    Upload: 'Upload',
+    'Upload Custom Trait': 'Upload Custom Trait',
+    'User Already Voted': 'User Already Voted',
+    Value: 'Value',
+    'Value in ETH (Optional)': 'Value in ETH (Optional)',
+    Vetoed: 'Vetoed',
+    'View all bids': 'View all bids',
+    'Vote for the next Noun ⌐◧-◧': 'Vote for the next Noun ⌐◧-◧',
+    'Vote on Prop {0}': ['Vote on Prop ', ['0']],
+    'Voted aginst': 'Voted aginst',
+    'Voted for': 'Voted for',
+    'WTF?': 'WTF?',
+    'Waiting for': 'Waiting for',
+    'What now?': 'What now?',
+    'While settlement is most heavily incentivized for the winning bidder, it can be triggered by anyone, allowing the system to trustlessly auction Nouns as long as Ethereum is operational and there are interested bidders.':
+      'While settlement is most heavily incentivized for the winning bidder, it can be triggered by anyone, allowing the system to trustlessly auction Nouns as long as Ethereum is operational and there are interested bidders.',
+    Winner: 'Winner',
+    'Winning bid': 'Winning bid',
+    You: 'You',
+    'You <0>Abstained</0> from this proposal': 'You <0>Abstained</0> from this proposal',
+    'You already have an active or pending proposal':
+      'You already have an active or pending proposal',
+    'You can experiment with off-chain Noun generation at the {playgroundLink}.': [
+      'You can experiment with off-chain Noun generation at the ',
+      ['playgroundLink'],
+      '.',
+    ],
+    'You can settle manually in 1 minute': 'You can settle manually in 1 minute',
+    'You can settle manually in {0} minutes': ['You can settle manually in ', ['0'], ' minutes'],
+    "You don't have enough votes to submit a proposal":
+      "You don't have enough votes to submit a proposal",
+    'You have no Votes.': 'You have no Votes.',
+    'You have no votes.': 'You have no votes.',
+    'You must have {0} votes to submit a proposal': [
+      'You must have ',
+      ['0'],
+      ' votes to submit a proposal',
+    ],
+    'You voted <0>Against</0>this proposal': 'You voted <0>Against</0>this proposal',
+    'You voted <0>For</0>this proposal': 'You voted <0>For</0>this proposal',
+    "You've generated {0} years worth of Nouns": [
+      "You've generated ",
+      ['0'],
+      ' years worth of Nouns',
+    ],
+    "You've successfully voted on on prop {0}": ["You've successfully voted on on prop ", ['0']],
+    'accessories (137)': 'accessories (137)',
+    at: 'at',
+    'backgrounds (2)': 'backgrounds (2)',
+    'bodies (30)': 'bodies (30)',
+    'glasses (21)': 'glasses (21)',
+    'heads (234)': 'heads (234)',
+    'or more': 'or more',
+    'public domain': 'public domain',
+    '{0} votes': [['0'], ' votes'],
+    '{0}<0>h</0>': [['0'], '<0>h</0>'],
+    '{moveStateButtonAction} Proposal ⌐◧-◧': [['moveStateButtonAction'], ' Proposal ⌐◧-◧'],
+  },
+};
diff --git a/packages/nouns-webapp/src/locales/en-US.po b/packages/nouns-webapp/src/locales/en-US.po
new file mode 100644
index 00000000..2bd77c07
--- /dev/null
+++ b/packages/nouns-webapp/src/locales/en-US.po
@@ -0,0 +1,955 @@
+msgid ""
+msgstr ""
+"POT-Creation-Date: 2022-04-26 20:07-0700\n"
+"MIME-Version: 1.0\n"
+"Content-Type: text/plain; charset=utf-8\n"
+"Content-Transfer-Encoding: 8bit\n"
+"X-Generator: @lingui/cli\n"
+"Language: en-US\n"
+"Project-Id-Version: \n"
+"Report-Msgid-Bugs-To: \n"
+"PO-Revision-Date: \n"
+"Last-Translator: \n"
+"Language-Team: \n"
+"Plural-Forms: \n"
+
+#: src/components/Documentation/index.tsx
+msgid "'Nounders' are the group of ten builders that initiated Nouns. Here are the Nounders:"
+msgstr "'Nounders' are the group of ten builders that initiated Nouns. Here are the Nounders:"
+
+#: src/components/Documentation/index.tsx
+msgid "100% of Noun auction proceeds are trustlessly sent to the treasury."
+msgstr "100% of Noun auction proceeds are trustlessly sent to the treasury."
+
+#: src/pages/Nounders/index.tsx
+msgid "3.5 artists, 6.5 technologists"
+msgstr "3.5 artists, 6.5 technologists"
+
+#: src/pages/NotFound/index.tsx
+msgid "404: This is not the person, place, or thing you're looking for..."
+msgstr "404: This is not the person, place, or thing you're looking for..."
+
+#: src/components/AuctionTimer/index.tsx
+msgid "<0>{flooredMinutes}<1>m</1></0>"
+msgstr "<0>{flooredMinutes}<1>m</1></0>"
+
+#: src/components/AuctionTimer/index.tsx
+msgid "<0>{flooredSeconds}<1>s</1></0>"
+msgstr "<0>{flooredSeconds}<1>s</1></0>"
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Absent for"
+msgstr "Absent for"
+
+#: src/components/VoteCard/index.tsx
+msgid "Abstain"
+msgstr "Abstain"
+
+#: src/components/VoteModal/index.tsx
+msgid "Abstain from voting on Prop {0}"
+msgstr "Abstain from voting on Prop {0}"
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Abstained on"
+msgstr "Abstained on"
+
+#: src/pages/Playground/index.tsx
+msgid "Accessory"
+msgstr "Accessory"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Active"
+msgstr "Active"
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "Activity"
+msgstr "Activity"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+msgid "Add Transaction"
+msgstr "Add Transaction"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Add a Proposal Transaction"
+msgstr "Add a Proposal Transaction"
+
+#: src/pages/CreateProposal/index.tsx
+msgid "Add one or more transactions and describe your proposal for the community. The proposal cannot modified after submission, so please verify all information before submitting. The voting period will begin after 2 1/3 days and last for 3 days."
+msgstr "Add one or more transactions and describe your proposal for the community. The proposal cannot modified after submission, so please verify all information before submitting. The voting period will begin after 2 1/3 days and last for 3 days."
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Address"
+msgstr "Address"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Address (Callee or Recipient)"
+msgstr "Address (Callee or Recipient)"
+
+#: src/components/VoteCard/index.tsx
+msgid "Against"
+msgstr "Against"
+
+#: src/pages/Nounders/index.tsx
+msgid "All Noun auction proceeds are sent to the Nouns DAO. For this reason, we, the project's founders (‘Nounders’) have chosen to compensate ourselves with Nouns. Every 10th noun for the first 5 years of the project will be sent to our multisig (5/10), where it will be vested and distributed to individual Nounders."
+msgstr "All Noun auction proceeds are sent to the Nouns DAO. For this reason, we, the project's founders (‘Nounders’) have chosen to compensate ourselves with Nouns. Every 10th noun for the first 5 years of the project will be sent to our multisig (5/10), where it will be vested and distributed to individual Nounders."
+
+#: src/components/Documentation/index.tsx
+msgid "All Nouns are members of Nouns DAO."
+msgstr "All Nouns are members of Nouns DAO."
+
+#: src/pages/CreateProposal/index.tsx
+msgid "All Proposals"
+msgstr "All Proposals"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Arguments"
+msgstr "Arguments"
+
+#: src/components/Documentation/index.tsx
+msgid "Artwork is generative and stored directly on-chain (not IPFS)."
+msgstr "Artwork is generative and stored directly on-chain (not IPFS)."
+
+#: src/components/AuctionTimer/index.tsx
+#: src/components/AuctionTimer/index.tsx
+msgid "Auction ended"
+msgstr "Auction ended"
+
+#: src/components/AuctionTimer/index.tsx
+msgid "Auction ends in"
+msgstr "Auction ends in"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Back"
+msgstr "Back"
+
+#: src/pages/Playground/index.tsx
+msgid "Background"
+msgstr "Background"
+
+#: src/components/Documentation/index.tsx
+msgid "Because 100% of Noun auction proceeds are sent to Nouns DAO, Nounders have chosen to compensate themselves with Nouns. Every 10th Noun for the first 5 years of the project (Noun ids #0, #10, #20, #30 and so on) will be automatically sent to the Nounder's multisig to be vested and shared among the founding members of the project."
+msgstr "Because 100% of Noun auction proceeds are sent to Nouns DAO, Nounders have chosen to compensate themselves with Nouns. Every 10th Noun for the first 5 years of the project (Noun ids #0, #10, #20, #30 and so on) will be automatically sent to the Nounder's multisig to be vested and shared among the founding members of the project."
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+msgid "Bid"
+msgstr "Bid"
+
+#: src/components/NounInfoCard/index.tsx
+msgid "Bid history"
+msgstr "Bid history"
+
+#: src/components/Bid/index.tsx
+msgid "Bid was placed successfully!"
+msgstr "Bid was placed successfully!"
+
+#: src/components/NounInfoCard/index.tsx
+msgid "Bids"
+msgstr "Bids"
+
+#: src/components/BidHistoryModal/index.tsx
+msgid "Bids for"
+msgstr "Bids for"
+
+#: src/components/BidHistoryModal/index.tsx
+msgid "Bids will appear here"
+msgstr "Bids will appear here"
+
+#: src/pages/Playground/index.tsx
+msgid "Body"
+msgstr "Body"
+
+#: src/components/NounInfoRowBirthday/index.tsx
+msgid "Born"
+msgstr "Born"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Canceled"
+msgstr "Canceled"
+
+#: src/components/VoteModal/index.tsx
+msgid "Cast 1 vote against Prop {0}"
+msgstr "Cast 1 vote against Prop {0}"
+
+#: src/components/VoteModal/index.tsx
+msgid "Cast 1 vote for Prop {0}"
+msgstr "Cast 1 vote for Prop {0}"
+
+#: src/components/VoteModal/index.tsx
+msgid "Cast {0} votes against Prop {1}"
+msgstr "Cast {0} votes against Prop {1}"
+
+#: src/components/VoteModal/index.tsx
+msgid "Cast {0} votes for Prop {1}"
+msgstr "Cast {0} votes for Prop {1}"
+
+#: src/components/WalletConnectModal/index.tsx
+msgid "Clear WalletConnect Data"
+msgstr "Clear WalletConnect Data"
+
+#: src/components/Documentation/index.tsx
+msgid "Compound Governance"
+msgstr "Compound Governance"
+
+#: src/components/NavWallet/WalletConnectButton/index.tsx
+msgid "Connect"
+msgstr "Connect"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "Connect a wallet to vote."
+msgstr "Connect a wallet to vote."
+
+#: src/components/Proposals/index.tsx
+msgid "Connect wallet to make a proposal."
+msgstr "Connect wallet to make a proposal."
+
+#: src/components/WalletConnectModal/index.tsx
+msgid "Connect your wallet"
+msgstr "Connect your wallet"
+
+#: src/components/CreateProposalButton/index.tsx
+#: src/pages/CreateProposal/index.tsx
+msgid "Create Proposal"
+msgstr "Create Proposal"
+
+#: src/components/Documentation/index.tsx
+msgid "Cryptopunks"
+msgstr "Cryptopunks"
+
+#: src/components/CurrentBid/index.tsx
+msgid "Current bid"
+msgstr "Current bid"
+
+#: src/components/NavBar/index.tsx
+msgid "DAO"
+msgstr "DAO"
+
+#: src/components/Documentation/index.tsx
+msgid "Daily Auctions"
+msgstr "Daily Auctions"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Defeated"
+msgstr "Defeated"
+
+#: src/components/ProposalContent/index.tsx
+msgid "Description"
+msgstr "Description"
+
+#: src/components/NavWallet/index.tsx
+msgid "Disconnect"
+msgstr "Disconnect"
+
+#: src/components/Footer/index.tsx
+msgid "Discord"
+msgstr "Discord"
+
+#: src/components/NavBar/index.tsx
+msgid "Discourse"
+msgstr "Discourse"
+
+#: src/components/NavBar/index.tsx
+msgid "Docs"
+msgstr "Docs"
+
+#: src/components/Banner/index.tsx
+msgid "EVERY DAY,"
+msgstr "EVERY DAY,"
+
+#: src/components/Documentation/index.tsx
+msgid "Each time an auction is settled, the settlement transaction will also cause a new Noun to be minted and a new 24 hour auction to begin."
+msgstr "Each time an auction is settled, the settlement transaction will also cause a new Noun to be minted and a new 24 hour auction to begin."
+
+#: src/pages/Vote/index.tsx
+msgid "Ended"
+msgstr "Ended"
+
+#: src/pages/Vote/index.tsx
+msgid "Ends"
+msgstr "Ends"
+
+#: src/components/AuctionTimer/index.tsx
+msgid "Ends on"
+msgstr "Ends on"
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/VoteModal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/Vote/index.tsx
+msgid "Error"
+msgstr "Error"
+
+#: src/components/NounInfoRowBirthday/index.tsx
+msgid "Error fetching Noun birthday"
+msgstr "Error fetching Noun birthday"
+
+#: src/components/Footer/index.tsx
+#: src/components/NounInfoCard/index.tsx
+msgid "Etherscan"
+msgstr "Etherscan"
+
+#: src/pages/Vote/index.tsx
+msgid "Execute"
+msgstr "Execute"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Executed"
+msgstr "Executed"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Expired"
+msgstr "Expired"
+
+#: src/pages/Playground/index.tsx
+msgid "Explore"
+msgstr "Explore"
+
+#: src/components/Banner/index.tsx
+msgid "FOREVER."
+msgstr "FOREVER."
+
+#: src/pages/Vote/index.tsx
+msgid "Failed to fetch"
+msgstr "Failed to fetch"
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "Failed to fetch Noun activity history"
+msgstr "Failed to fetch Noun activity history"
+
+#: src/components/NounInfoRowHolder/index.tsx
+msgid "Failed to fetch Noun info"
+msgstr "Failed to fetch Noun info"
+
+#: src/components/VoteCard/index.tsx
+msgid "For"
+msgstr "For"
+
+#: src/components/Footer/index.tsx
+msgid "Forums"
+msgstr "Forums"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Function"
+msgstr "Function"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Function (Optional)"
+msgstr "Function (Optional)"
+
+#: src/pages/Playground/index.tsx
+msgid "Generate Nouns"
+msgstr "Generate Nouns"
+
+#: src/pages/Playground/index.tsx
+msgid "Glasses"
+msgstr "Glasses"
+
+#: src/pages/Governance/index.tsx
+msgid "Governance"
+msgstr "Governance"
+
+#: src/components/Documentation/index.tsx
+msgid "Governance ‘Slow Start’"
+msgstr "Governance ‘Slow Start’"
+
+#: src/pages/Playground/index.tsx
+msgid "Head"
+msgstr "Head"
+
+#: src/components/NounInfoRowHolder/index.tsx
+msgid "Held by"
+msgstr "Held by"
+
+#: src/components/AuctionActivity/index.tsx
+msgid "Help mint the next Noun"
+msgstr "Help mint the next Noun"
+
+#: src/components/Documentation/index.tsx
+msgid "In addition to the precautions taken by Compound Governance, Nounders have given themselves a special veto right to ensure that no malicious proposals can be passed while the Noun supply is low. This veto right will only be used if an obviously harmful governance proposal has been passed, and is intended as a last resort."
+msgstr "In addition to the precautions taken by Compound Governance, Nounders have given themselves a special veto right to ensure that no malicious proposals can be passed while the Noun supply is low. This veto right will only be used if an obviously harmful governance proposal has been passed, and is intended as a last resort."
+
+#: src/components/Bid/index.tsx
+msgid "Insufficient bid amount 🤏"
+msgstr "Insufficient bid amount 🤏"
+
+#: src/components/NavLocaleSwitcher/index.tsx
+msgid "Language"
+msgstr "Language"
+
+#: src/components/Documentation/index.tsx
+msgid "Learn more below, or start creating Nouns off-chain using the {playgroundLink}."
+msgstr "Learn more below, or start creating Nouns off-chain using the {playgroundLink}."
+
+#: src/components/NounInfoRowHolder/index.tsx
+msgid "Loading..."
+msgstr "Loading..."
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Next"
+msgstr "Next"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "No arguments required"
+msgstr "No arguments required"
+
+#: src/components/Documentation/index.tsx
+msgid "No explicit rules exist for attribute scarcity; all Nouns are equally rare."
+msgstr "No explicit rules exist for attribute scarcity; all Nouns are equally rare."
+
+#: src/components/Proposals/index.tsx
+msgid "No proposals found"
+msgstr "No proposals found"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+#: src/components/ProposalTransactionFormModal/index.tsx
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "None"
+msgstr "None"
+
+#: src/components/BidHistoryModal/index.tsx
+#: src/pages/Governance/index.tsx
+msgid "Noun"
+msgstr "Noun"
+
+#: src/components/Documentation/index.tsx
+msgid "Noun Seeder Contract"
+msgstr "Noun Seeder Contract"
+
+#: src/components/Documentation/index.tsx
+msgid "Noun Traits"
+msgstr "Noun Traits"
+
+#: src/components/AuctionActivityNounTitle/index.tsx
+msgid "Noun {0}"
+msgstr "Noun {0}"
+
+#: src/components/Documentation/index.tsx
+msgid "Nounder distributions don't interfere with the cadence of 24 hour auctions. Nouns are sent directly to the Nounder's Multisig, and auctions continue on schedule with the next available Noun ID."
+msgstr "Nounder distributions don't interfere with the cadence of 24 hour auctions. Nouns are sent directly to the Nounder's Multisig, and auctions continue on schedule with the next available Noun ID."
+
+#: src/components/Documentation/index.tsx
+msgid "Nounder's Reward"
+msgstr "Nounder's Reward"
+
+#: src/components/Documentation/index.tsx
+msgid "Nounders receive rewards in the form of Nouns (10% of supply for first 5 years)."
+msgstr "Nounders receive rewards in the form of Nouns (10% of supply for first 5 years)."
+
+#: src/components/Documentation/index.tsx
+msgid "Nounders will proveably revoke this veto right when they deem it safe to do so. This decision will be based on a healthy Noun distribution and a community that is engaged in the governance process."
+msgstr "Nounders will proveably revoke this veto right when they deem it safe to do so. This decision will be based on a healthy Noun distribution and a community that is engaged in the governance process."
+
+#: src/pages/Nounders/index.tsx
+msgid "Nounders' Reward"
+msgstr "Nounders' Reward"
+
+#: src/pages/Governance/index.tsx
+msgid "Nouns"
+msgstr "Nouns"
+
+#: src/components/NounInfoRowHolder/index.tsx
+msgid "Nouns Auction House"
+msgstr "Nouns Auction House"
+
+#: src/components/Documentation/index.tsx
+#: src/pages/Governance/index.tsx
+msgid "Nouns DAO"
+msgstr "Nouns DAO"
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns DAO uses a fork of {compoundGovLink}."
+msgstr "Nouns DAO uses a fork of {compoundGovLink}."
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns DAO utilizes a fork of {compoundGovLink} and is the main governing body of the Nouns ecosystem. The Nouns DAO treasury receives 100% of ETH proceeds from daily Noun auctions. Each Noun is an irrevocable member of Nouns DAO and entitled to one vote in all governance matters. Noun votes are non-transferable (if you sell your Noun the vote goes with it) but delegatable, which means you can assign your vote to someone else as long as you own your Noun."
+msgstr "Nouns DAO utilizes a fork of {compoundGovLink} and is the main governing body of the Nouns ecosystem. The Nouns DAO treasury receives 100% of ETH proceeds from daily Noun auctions. Each Noun is an irrevocable member of Nouns DAO and entitled to one vote in all governance matters. Noun votes are non-transferable (if you sell your Noun the vote goes with it) but delegatable, which means you can assign your vote to someone else as long as you own your Noun."
+
+#: src/pages/Playground/index.tsx
+msgid "Nouns Protocol"
+msgstr "Nouns Protocol"
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns are an experimental attempt to improve the formation of on-chain avatar communities. While projects such as {cryptopunksLink} have attempted to bootstrap digital community and identity, Nouns attempt to bootstrap identity, community, governance, and a treasury that can be used by the community"
+msgstr "Nouns are an experimental attempt to improve the formation of on-chain avatar communities. While projects such as {cryptopunksLink} have attempted to bootstrap digital community and identity, Nouns attempt to bootstrap identity, community, governance, and a treasury that can be used by the community"
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns are generated randomly based Ethereum block hashes. There are no 'if' statements or other rules governing Noun trait scarcity, which makes all Nouns equally rare. As of this writing, Nouns are made up of:"
+msgstr "Nouns are generated randomly based Ethereum block hashes. There are no 'if' statements or other rules governing Noun trait scarcity, which makes all Nouns equally rare. As of this writing, Nouns are made up of:"
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns are stored directly on Ethereum and do not utilize pointers to other networks such as IPFS. This is possible because Noun parts are compressed and stored on-chain using a custom run-length encoding (RLE), which is a form of lossless compression."
+msgstr "Nouns are stored directly on Ethereum and do not utilize pointers to other networks such as IPFS. This is possible because Noun parts are compressed and stored on-chain using a custom run-length encoding (RLE), which is a form of lossless compression."
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns artwork is in the {publicDomainLink}."
+msgstr "Nouns artwork is in the {publicDomainLink}."
+
+#: src/pages/Governance/index.tsx
+msgid "Nouns govern <0>Nouns DAO</0>. Nouns can vote on proposals or delegate their vote to a third party. A minimum of <1>{nounsRequired} {0}</1> is required to submit proposals."
+msgstr "Nouns govern <0>Nouns DAO</0>. Nouns can vote on proposals or delegate their vote to a third party. A minimum of <1>{nounsRequired} {0}</1> is required to submit proposals."
+
+#: src/components/Banner/index.tsx
+msgid "ONE NOUN,"
+msgstr "ONE NOUN,"
+
+#: src/components/Documentation/index.tsx
+msgid "On-Chain Artwork"
+msgstr "On-Chain Artwork"
+
+#: src/components/Documentation/index.tsx
+msgid "One Noun is equal to one vote."
+msgstr "One Noun is equal to one vote."
+
+#: src/components/Documentation/index.tsx
+msgid "One Noun is trustlessly auctioned every 24 hours, forever."
+msgstr "One Noun is trustlessly auctioned every 24 hours, forever."
+
+#: src/pages/Playground/index.tsx
+msgid "Only 32x32 PNG images are accepted"
+msgstr "Only 32x32 PNG images are accepted"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "Only Nons you owned or were delegated to you before {0} are eligible to vote."
+msgstr "Only Nons you owned or were delegated to you before {0} are eligible to vote."
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Pending"
+msgstr "Pending"
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+msgid "Place bid"
+msgstr "Place bid"
+
+#: src/components/Documentation/index.tsx
+#: src/components/NavBar/index.tsx
+#: src/pages/Playground/index.tsx
+msgid "Playground"
+msgstr "Playground"
+
+#: src/components/Bid/index.tsx
+msgid "Please place a bid higher than or equal to the minimum bid amount of {0} ETH"
+msgstr "Please place a bid higher than or equal to the minimum bid amount of {0} ETH"
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/VoteModal/index.tsx
+#: src/components/VoteModal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/Vote/index.tsx
+#: src/pages/Vote/index.tsx
+msgid "Please try again."
+msgstr "Please try again."
+
+#: src/components/ProposalEditor/index.tsx
+msgid "Preview:"
+msgstr "Preview:"
+
+#: src/components/ProposalEditor/index.tsx
+msgid "Proposal"
+msgstr "Proposal"
+
+#: src/pages/CreateProposal/index.tsx
+msgid "Proposal Created!"
+msgstr "Proposal Created!"
+
+#: src/pages/Vote/index.tsx
+msgid "Proposal Executed!"
+msgstr "Proposal Executed!"
+
+#: src/pages/Vote/index.tsx
+msgid "Proposal Queued!"
+msgstr "Proposal Queued!"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "Proposal {0}"
+msgstr "Proposal {0}"
+
+#: src/components/Proposals/index.tsx
+msgid "Proposals"
+msgstr "Proposals"
+
+#: src/components/Proposals/index.tsx
+msgid "Proposals submitted by community members will appear here."
+msgstr "Proposals submitted by community members will appear here."
+
+#: src/components/ProposalContent/index.tsx
+msgid "Proposed Transactions"
+msgstr "Proposed Transactions"
+
+#: src/components/ProposalContent/index.tsx
+msgid "Proposer"
+msgstr "Proposer"
+
+#: src/pages/Vote/index.tsx
+msgid "Queue"
+msgstr "Queue"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Queued"
+msgstr "Queued"
+
+#: src/pages/Vote/index.tsx
+msgid "Quorum"
+msgstr "Quorum"
+
+#: src/components/VoteModal/index.tsx
+msgid "Reason (Optional)"
+msgstr "Reason (Optional)"
+
+#: src/components/LanguageSelectionModal/index.tsx
+msgid "Select Language"
+msgstr "Select Language"
+
+#: src/components/Bid/index.tsx
+msgid "Settle"
+msgstr "Settle"
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+msgid "Settle Auction"
+msgstr "Settle Auction"
+
+#: src/components/SettleManuallyBtn/index.tsx
+msgid "Settle manually"
+msgstr "Settle manually"
+
+#: src/components/Bid/index.tsx
+msgid "Settled auction successfully!"
+msgstr "Settled auction successfully!"
+
+#: src/components/Documentation/index.tsx
+msgid "Settlement of one auction kicks off the next."
+msgstr "Settlement of one auction kicks off the next."
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "Show all {0} events"
+msgstr "Show all {0} events"
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "Show fewer"
+msgstr "Show fewer"
+
+#: src/components/NavWallet/index.tsx
+msgid "Sign out"
+msgstr "Sign out"
+
+#: src/pages/Vote/index.tsx
+msgid "Snapshot"
+msgstr "Snapshot"
+
+#: src/pages/Vote/index.tsx
+msgid "Starts"
+msgstr "Starts"
+
+#: src/components/Proposals/index.tsx
+#: src/components/Proposals/index.tsx
+msgid "Submit Proposal"
+msgstr "Submit Proposal"
+
+#: src/components/VoteModal/index.tsx
+msgid "Submit Vote"
+msgstr "Submit Vote"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "Submit vote"
+msgstr "Submit vote"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Succeeded"
+msgstr "Succeeded"
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/Vote/index.tsx
+msgid "Success"
+msgstr "Success"
+
+#: src/components/Documentation/index.tsx
+msgid "Summary"
+msgstr "Summary"
+
+#: src/components/NavWallet/index.tsx
+msgid "Switch"
+msgstr "Switch"
+
+#: src/components/NavWallet/index.tsx
+msgid "Switch wallet"
+msgstr "Switch wallet"
+
+#: src/pages/Vote/index.tsx
+msgid "Taken at block"
+msgstr "Taken at block"
+
+#: src/components/VoteModal/index.tsx
+msgid "Thank you for voting."
+msgstr "Thank you for voting."
+
+#: src/components/Documentation/index.tsx
+msgid "The Noun Seeder contract is used to determine Noun traits during the minting process. The seeder contract can be replaced to allow for future trait generation algorithm upgrades. Additionally, it can be locked by the Nouns DAO to prevent any future updates. Currently, Noun traits are determined using pseudo-random number generation:"
+msgstr "The Noun Seeder contract is used to determine Noun traits during the minting process. The seeder contract can be replaced to allow for future trait generation algorithm upgrades. Additionally, it can be locked by the Nouns DAO to prevent any future updates. Currently, Noun traits are determined using pseudo-random number generation:"
+
+#: src/pages/Nounders/index.tsx
+msgid "The Nounders"
+msgstr "The Nounders"
+
+#: src/pages/Nounders/index.tsx
+msgid "The Nounders reward is intended as compensation for our pre and post-launch contributions to the project, and to help us participate meaningfully in governance as the project matures. Since there are 10 Nounders, after 5 years each Nounder could receive up to 1% of the Noun supply."
+msgstr "The Nounders reward is intended as compensation for our pre and post-launch contributions to the project, and to help us participate meaningfully in governance as the project matures. Since there are 10 Nounders, after 5 years each Nounder could receive up to 1% of the Noun supply."
+
+#: src/components/Documentation/index.tsx
+msgid "The Nouns Auction Contract will act as a self-sufficient Noun generation and distribution mechanism, auctioning one Noun every 24 hours, forever. 100% of auction proceeds (ETH) are automatically deposited in the Nouns DAO treasury, where they are governed by Noun owners."
+msgstr "The Nouns Auction Contract will act as a self-sufficient Noun generation and distribution mechanism, auctioning one Noun every 24 hours, forever. 100% of auction proceeds (ETH) are automatically deposited in the Nouns DAO treasury, where they are governed by Noun owners."
+
+#: src/components/Documentation/index.tsx
+msgid "The compressed parts are efficiently converted into a single base64 encoded SVG image on-chain. To accomplish this, each part is decoded into an intermediate format before being converted into a series of SVG rects using batched, on-chain string concatenation. Once the entire SVG has been generated, it is base64 encoded."
+msgstr "The compressed parts are efficiently converted into a single base64 encoded SVG image on-chain. To accomplish this, each part is decoded into an intermediate format before being converted into a series of SVG rects using batched, on-chain string concatenation. Once the entire SVG has been generated, it is base64 encoded."
+
+#: src/pages/Playground/index.tsx
+msgid "The playground was built using the {nounsProtocolLink}. Noun's traits are determined by the Noun Seed. The seed was generated using {nounsAssetsLink} and rendered using the {nounsSDKLink}."
+msgstr "The playground was built using the {nounsProtocolLink}. Noun's traits are determined by the Noun Seed. The seed was generated using {nounsAssetsLink} and rendered using the {nounsSDKLink}."
+
+#: src/components/Documentation/index.tsx
+msgid "The treasury is controlled exclusively by Nouns via governance."
+msgstr "The treasury is controlled exclusively by Nouns via governance."
+
+#: src/components/VoteModal/index.tsx
+msgid "There was an error voting for your account."
+msgstr "There was an error voting for your account."
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "This Noun has no activity, since it was just created. Check back soon!"
+msgstr "This Noun has no activity, since it was just created. Check back soon!"
+
+#: src/pages/Governance/index.tsx
+msgid "This treasury exists for <0>Nouns DAO</0> participants to allocate resources for the long-term growth and prosperity of the Nouns project."
+msgstr "This treasury exists for <0>Nouns DAO</0> participants to allocate resources for the long-term growth and prosperity of the Nouns project."
+
+#: src/pages/Vote/index.tsx
+msgid "Threshold"
+msgstr "Threshold"
+
+#: src/components/AuctionTimer/index.tsx
+msgid "Time left"
+msgstr "Time left"
+
+#: src/pages/CreateProposal/index.tsx
+msgid "Tip:"
+msgstr "Tip:"
+
+#: src/components/Documentation/index.tsx
+msgid "Trait generation is not truly random. Traits can be predicted when minting a Noun on the pending block."
+msgstr "Trait generation is not truly random. Traits can be predicted when minting a Noun on the pending block."
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/VoteModal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/Vote/index.tsx
+msgid "Transaction Failed"
+msgstr "Transaction Failed"
+
+#: src/pages/Vote/index.tsx
+msgid "Transaction Successful!"
+msgstr "Transaction Successful!"
+
+#: src/components/NavBarTreasury/index.tsx
+#: src/pages/Governance/index.tsx
+msgid "Treasury"
+msgstr "Treasury"
+
+#: src/components/Footer/index.tsx
+msgid "Twitter"
+msgstr "Twitter"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Undetermined"
+msgstr "Undetermined"
+
+#: src/pages/Playground/index.tsx
+msgid "Upload"
+msgstr "Upload"
+
+#: src/pages/Playground/index.tsx
+msgid "Upload Custom Trait"
+msgstr "Upload Custom Trait"
+
+#: src/components/VoteModal/index.tsx
+msgid "User Already Voted"
+msgstr "User Already Voted"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Value"
+msgstr "Value"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Value in ETH (Optional)"
+msgstr "Value in ETH (Optional)"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Vetoed"
+msgstr "Vetoed"
+
+#: src/components/BidHistoryBtn/index.tsx
+msgid "View all bids"
+msgstr "View all bids"
+
+#: src/components/Bid/index.tsx
+msgid "Vote for the next Noun ⌐◧-◧"
+msgstr "Vote for the next Noun ⌐◧-◧"
+
+#: src/components/VoteModal/index.tsx
+msgid "Vote on Prop {0}"
+msgstr "Vote on Prop {0}"
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Voted aginst"
+msgstr "Voted aginst"
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Voted for"
+msgstr "Voted for"
+
+#: src/components/Documentation/index.tsx
+msgid "WTF?"
+msgstr "WTF?"
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Waiting for"
+msgstr "Waiting for"
+
+#: src/components/Winner/index.tsx
+#: src/components/Winner/index.tsx
+msgid "What now?"
+msgstr "What now?"
+
+#: src/components/Documentation/index.tsx
+msgid "While settlement is most heavily incentivized for the winning bidder, it can be triggered by anyone, allowing the system to trustlessly auction Nouns as long as Ethereum is operational and there are interested bidders."
+msgstr "While settlement is most heavily incentivized for the winning bidder, it can be triggered by anyone, allowing the system to trustlessly auction Nouns as long as Ethereum is operational and there are interested bidders."
+
+#: src/components/Winner/index.tsx
+msgid "Winner"
+msgstr "Winner"
+
+#: src/components/CurrentBid/index.tsx
+msgid "Winning bid"
+msgstr "Winning bid"
+
+#: src/components/Winner/index.tsx
+msgid "You"
+msgstr "You"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "You <0>Abstained</0> from this proposal"
+msgstr "You <0>Abstained</0> from this proposal"
+
+#: src/components/CreateProposalButton/index.tsx
+msgid "You already have an active or pending proposal"
+msgstr "You already have an active or pending proposal"
+
+#: src/components/Documentation/index.tsx
+msgid "You can experiment with off-chain Noun generation at the {playgroundLink}."
+msgstr "You can experiment with off-chain Noun generation at the {playgroundLink}."
+
+#: src/components/SettleManuallyBtn/index.tsx
+msgid "You can settle manually in 1 minute"
+msgstr "You can settle manually in 1 minute"
+
+#: src/components/SettleManuallyBtn/index.tsx
+msgid "You can settle manually in {0} minutes"
+msgstr "You can settle manually in {0} minutes"
+
+#: src/components/CreateProposalButton/index.tsx
+msgid "You don't have enough votes to submit a proposal"
+msgstr "You don't have enough votes to submit a proposal"
+
+#: src/components/Proposals/index.tsx
+msgid "You have no Votes."
+msgstr "You have no Votes."
+
+#: src/components/ProposalHeader/index.tsx
+msgid "You have no votes."
+msgstr "You have no votes."
+
+#: src/components/CreateProposalButton/index.tsx
+msgid "You must have {0} votes to submit a proposal"
+msgstr "You must have {0} votes to submit a proposal"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "You voted <0>Against</0>this proposal"
+msgstr "You voted <0>Against</0>this proposal"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "You voted <0>For</0>this proposal"
+msgstr "You voted <0>For</0>this proposal"
+
+#: src/pages/Playground/index.tsx
+msgid "You've generated {0} years worth of Nouns"
+msgstr "You've generated {0} years worth of Nouns"
+
+#: src/components/VoteModal/index.tsx
+msgid "You've successfully voted on on prop {0}"
+msgstr "You've successfully voted on on prop {0}"
+
+#: src/components/Documentation/index.tsx
+msgid "accessories (137)"
+msgstr "accessories (137)"
+
+#: src/components/AuctionTimer/index.tsx
+msgid "at"
+msgstr "at"
+
+#: src/components/Documentation/index.tsx
+msgid "backgrounds (2)"
+msgstr "backgrounds (2)"
+
+#: src/components/Documentation/index.tsx
+msgid "bodies (30)"
+msgstr "bodies (30)"
+
+#: src/components/Documentation/index.tsx
+msgid "glasses (21)"
+msgstr "glasses (21)"
+
+#: src/components/Documentation/index.tsx
+msgid "heads (234)"
+msgstr "heads (234)"
+
+#: src/components/Bid/index.tsx
+msgid "or more"
+msgstr "or more"
+
+#: src/components/Documentation/index.tsx
+msgid "public domain"
+msgstr "public domain"
+
+#: src/pages/Vote/index.tsx
+msgid "{0} votes"
+msgstr "{0} votes"
+
+#: src/components/AuctionTimer/index.tsx
+msgid "{0}<0>h</0>"
+msgstr "{0}<0>h</0>"
+
+#: src/pages/Vote/index.tsx
+msgid "{moveStateButtonAction} Proposal ⌐◧-◧"
+msgstr "{moveStateButtonAction} Proposal ⌐◧-◧"
diff --git a/packages/nouns-webapp/src/locales/ja-JP.js b/packages/nouns-webapp/src/locales/ja-JP.js
new file mode 100644
index 00000000..017b02e5
--- /dev/null
+++ b/packages/nouns-webapp/src/locales/ja-JP.js
@@ -0,0 +1,310 @@
+/*eslint-disable*/ module.exports = {
+  messages: {
+    "'Nounders' are the group of ten builders that initiated Nouns. Here are the Nounders:":
+      '"ナウンダーズ"とはナウンズの創業に携わった十人の創業者のことであり、以下の人物で構成されています：',
+    '100% of Noun auction proceeds are trustlessly sent to the treasury.':
+      'Nounオークションの売上は、第三者の介入無しで 100％トレジャリーに送られる仕組みになっています。',
+    '3.5 artists, 6.5 technologists': '3.5アーティスト、6.5技術者',
+    "404: This is not the person, place, or thing you're looking for...":
+      '404: お探しの人、場所、物は見つかりませんでした。',
+    '<0>{flooredMinutes}<1>m</1></0>': ['<0>', ['flooredMinutes'], '<1>m</1></0>'],
+    '<0>{flooredSeconds}<1>s</1></0>': ['<0>', ['flooredSeconds'], '<1>s</1></0>'],
+    'Absent for': '不在：',
+    Abstain: '放棄する',
+    'Abstain from voting on Prop {0}': ['Prop ', ['0'], ' への投票を中止する'],
+    'Abstained on': '廃止日',
+    Accessory: 'アクセサリー',
+    Active: 'アクティブ',
+    Activity: 'アクティビティ',
+    'Add Transaction': '取引を追加',
+    'Add a Proposal Transaction': '提案取引を追加',
+    'Add one or more transactions and describe your proposal for the community. The proposal cannot modified after submission, so please verify all information before submitting. The voting period will begin after 2 1/3 days and last for 3 days.':
+      '1つ以上の取引を追加し、あなたの提案をコミュニティに記述してください。 提出後に提案を変更することはできませんので、提出する前にすべての情報を確認してください。 投票期間は2/3日後に開始され、3日間続く予定です。',
+    Address: '住所',
+    'Address (Callee or Recipient)': '住所（カリーまたは受信者）',
+    Against: 'に対して',
+    "All Noun auction proceeds are sent to the Nouns DAO. For this reason, we, the project's founders (‘Nounders’) have chosen to compensate ourselves with Nouns. Every 10th noun for the first 5 years of the project will be sent to our multisig (5/10), where it will be vested and distributed to individual Nounders.":
+      'Nounオークションの収益はすべてNouns DAOに送られます。そのため、私たちプロジェクトの創設者(Nounders) はNounsを補償することを選択しました。 プロジェクトの最初の5年間の10回目の名詞は、マルチシグ(5/10) に送信されます。 それは個々のNoundersに既得され、配布されます。',
+    'All Nouns are members of Nouns DAO.': '名詞はすべてDAO名詞のメンバーです。',
+    'All Proposals': 'すべての提案',
+    Arguments: '引数',
+    'Artwork is generative and stored directly on-chain (not IPFS).':
+      'アートワークは生成され、直接チェーン上に保存されます(IPFSではありません)。',
+    'Auction ended': 'オークションが終了しました',
+    'Auction ends in': 'オークション終了まで',
+    Back: '戻る',
+    Background: '背景',
+    "Because 100% of Noun auction proceeds are sent to Nouns DAO, Nounders have chosen to compensate themselves with Nouns. Every 10th Noun for the first 5 years of the project (Noun ids #0, #10, #20, #30 and so on) will be automatically sent to the Nounder's multisig to be vested and shared among the founding members of the project.":
+      'Nounオークションの収益の100%がNouns DAOに送られるため、NoundersはNounsで自分自身を補償することを選択しました。 プロジェクトの最初の5年間の10番目の名詞(Noun ids#0, #10, #20) #30などが自動的にNounderのマルチシグに送信され、プロジェクトの創設メンバー間で既得権と共有されます。',
+    Bid: 'Bid',
+    'Bid history': '入札履歴',
+    'Bid was placed successfully!': '入札が正常に配置されました！',
+    Bids: '入札額',
+    'Bids for': '入札額',
+    'Bids will appear here': '入札額はここに表示されます',
+    Body: '本文',
+    Born: '生まれ',
+    Canceled: 'キャンセルしました',
+    'Cast 1 vote against Prop {0}': ['Prop ', ['0'], ' に対して1票を投じてください'],
+    'Cast 1 vote for Prop {0}': ['Prop ', ['0'], ' に 1 票を投入する'],
+    'Cast {0} votes against Prop {1}': ['Prop ', ['0'], ' に ', ['1'], ' 票を投入する'],
+    'Cast {0} votes for Prop {1}': ['Prop ', ['0'], ' に ', ['1'], ' 票を投入する'],
+    'Clear WalletConnect Data': 'WalletConnect データをクリア',
+    'Compound Governance': '複合ガバナンス',
+    Connect: '接続する',
+    'Connect a wallet to vote.': '投票するウォレットを接続します。',
+    'Connect wallet to make a proposal.': 'ウォレットに接続して提案してください。',
+    'Connect your wallet': 'ウォレットに接続',
+    'Create Proposal': '提案を作成',
+    Cryptopunks: 'クリプトパンクス',
+    'Current bid': '現在の入札額',
+    DAO: 'DAO',
+    'Daily Auctions': 'デイリーオークション数',
+    Defeated: '破られた',
+    Description: '説明',
+    Disconnect: '接続を解除',
+    Discord: 'Discord',
+    Discourse: 'Discourse',
+    Docs: 'ドキュメント',
+    'EVERY DAY,': '毎日',
+    'Each time an auction is settled, the settlement transaction will also cause a new Noun to be minted and a new 24 hour auction to begin.':
+      'オークションが決済されるたびに 決済取引により、新しい名詞が鋳造され、24時間オークションが開始されます。',
+    Ended: '終了',
+    Ends: '終了',
+    'Ends on': '終了日時',
+    Error: 'エラー',
+    'Error fetching Noun birthday': 'Nounの誕生日を取得できませんでした',
+    Etherscan: 'Etherscan',
+    Execute: '実行',
+    Executed: '遂行済み',
+    Expired: '期限切れ',
+    Explore: '探索',
+    'FOREVER.': '忘れないで。',
+    'Failed to fetch': '取得に失敗しました',
+    'Failed to fetch Noun activity history': 'Nounアクティビティ履歴の取得に失敗しました',
+    'Failed to fetch Noun info': 'Noun情報の取得に失敗しました',
+    For: '対象：',
+    Forums: 'フォーラム',
+    Function: '関数',
+    'Function (Optional)': '関数（任意）',
+    'Generate Nouns': '名詞を生成',
+    Glasses: 'ガラス',
+    Governance: 'Governance',
+    'Governance ‘Slow Start’': 'ガバナンス 「スロースタート」',
+    Head: '頭',
+    'Held by': '主催者：',
+    'Help mint the next Noun': '次の名詞を作るのを手伝ってください',
+    'In addition to the precautions taken by Compound Governance, Nounders have given themselves a special veto right to ensure that no malicious proposals can be passed while the Noun supply is low. This veto right will only be used if an obviously harmful governance proposal has been passed, and is intended as a last resort.':
+      '複合政府によって取られた予防措置に加えて、 Nounの供給量が少ない間に悪意のある提案を渡すことができないことを確実にするためにNounersは彼ら自身に特別な拒否権を与えました。 この拒否権は明らかに有害なガバナンスの提案が渡された場合にのみ使用され、最後の手段として意図されています。',
+    'Insufficient bid amount 🤏': '入札額が不足しています🤏',
+    Language: 'Language',
+    'Learn more below, or start creating Nouns off-chain using the {playgroundLink}.': [
+      '詳細は以下を参照してください。または、 ',
+      ['playgroundLink'],
+      ' を使用してオフチェーン名詞の作成を開始してください。',
+    ],
+    'Loading...': '読み込み中...',
+    Next: '次へ',
+    'No arguments required': '引数は必要ありません',
+    'No explicit rules exist for attribute scarcity; all Nouns are equally rare.':
+      '属性希少性のための明示的なルールは存在しません。すべての名詞も同様に稀です。',
+    'No proposals found': '提案が見つかりませんでした',
+    None: 'なし',
+    Noun: 'Noun',
+    'Noun Seeder Contract': 'Noun Seedder 契約',
+    'Noun Traits': '名声の特徴',
+    'Noun {0}': ['Noun ', ['0']],
+    "Nounder distributions don't interfere with the cadence of 24 hour auctions. Nouns are sent directly to the Nounder's Multisig, and auctions continue on schedule with the next available Noun ID.":
+      '24時間オークションのリズムに影響を与えることはありません。 NounsはNounderのMultisigに直接送信され、オークションは次の利用可能なNoun IDでスケジュール通りに継続されます。',
+    "Nounder's Reward": 'Nunder recompensa',
+    'Nounders receive rewards in the form of Nouns (10% of supply for first 5 years).':
+      'Nounersの形で報酬を受け取る(最初の5年間の供給の10%)。',
+    'Nounders will proveably revoke this veto right when they deem it safe to do so. This decision will be based on a healthy Noun distribution and a community that is engaged in the governance process.':
+      '彼らがそうするためにそれが安全であると判断したときNounders は証明できる権利この拒否権を取り消す。 この決定は、健全な名詞分配とガバナンスプロセスに従事しているコミュニティに基づいて行われます。',
+    "Nounders' Reward": "Nounders' Reward",
+    Nouns: 'Nouns',
+    'Nouns Auction House': '名詞オークションハウス',
+    'Nouns DAO': '名詞DAO',
+    'Nouns DAO uses a fork of {compoundGovLink}.': [
+      '名詞DAOは ',
+      ['compoundGovLink'],
+      'のフォークを使用しています。',
+    ],
+    'Nouns DAO utilizes a fork of {compoundGovLink} and is the main governing body of the Nouns ecosystem. The Nouns DAO treasury receives 100% of ETH proceeds from daily Noun auctions. Each Noun is an irrevocable member of Nouns DAO and entitled to one vote in all governance matters. Noun votes are non-transferable (if you sell your Noun the vote goes with it) but delegatable, which means you can assign your vote to someone else as long as you own your Noun.':
+      [
+        'Nouns DAOは ',
+        ['compoundGovLink'],
+        ' のフォークを利用しており、Nounsエコシステムの主要な統治機関です。 名詞DAOの財務省は、ETHの100%を毎日の名詞オークションから受け取ります。 各名詞は、取消せないDAOのメンバーであり、すべてのガバナンスの問題において1つの投票を受ける権利があります。 名詞票は譲渡できません(あなたが名詞を販売する場合、投票はそれに伴います)が、委任できます。 つまり、自分の名詞を所有している限り、自分の投票を他の誰かに割り当てることができます。',
+      ],
+    'Nouns Protocol': '名詞プロトコル',
+    'Nouns are an experimental attempt to improve the formation of on-chain avatar communities. While projects such as {cryptopunksLink} have attempted to bootstrap digital community and identity, Nouns attempt to bootstrap identity, community, governance, and a treasury that can be used by the community':
+      [
+        'Nounsは、オンチェーンアバターコミュニティの形成を改善するための実験的な試みです。 ',
+        ['cryptopunksLink'],
+        ' のようなプロジェクトは、デジタルコミュニティとアイデンティティのブートストラップを試みています。 Nouns は、コミュニティ、ガバナンス、コミュニティで使用できる財務省のアイデンティティをブートストラップしようとします。',
+      ],
+    "Nouns are generated randomly based Ethereum block hashes. There are no 'if' statements or other rules governing Noun trait scarcity, which makes all Nouns equally rare. As of this writing, Nouns are made up of:":
+      "名詞はランダムにベースのEthereumブロックハッシュを生成します。 すべての名詞を等しく稀にする名詞特性の乏しさを支配する'もし' 声明または他の規則がない。 この執筆時点では、名詞は以下で構成されています。",
+    'Nouns are stored directly on Ethereum and do not utilize pointers to other networks such as IPFS. This is possible because Noun parts are compressed and stored on-chain using a custom run-length encoding (RLE), which is a form of lossless compression.':
+      '名詞はEthereumに直接保存され、IPFSなどの他のネットワークにはポインタを使用しません。 これは、Noun部品は、ロスレス圧縮の一形態であるカスタム実行長エンコーディング(RLE)を使用して、チェーン上で圧縮および保存されるために可能です。',
+    'Nouns artwork is in the {publicDomainLink}.': [
+      '名詞のアートワークは ',
+      ['publicDomainLink'],
+      ' にあります。',
+    ],
+    'Nouns govern <0>Nouns DAO</0>. Nouns can vote on proposals or delegate their vote to a third party. A minimum of <1>{nounThresholdCopy}</1> is required to submit proposals.':
+      [
+        'Nounsは<0>Nouns DAO</0>を支配します。Nounsは提案に投票したり、投票を第三者に委任することができます。 提案を提出するには、最低<1>',
+        ['nounThresholdCopy'],
+        '</1>が必要です。',
+      ],
+    'Nouns govern <0>Nouns DAO</0>. Nouns can vote on proposals or delegate their vote to a third party. A minimum of <1>{nounsRequired} {0}</1> is required to submit proposals.':
+      [
+        'Nouns govern <0>Nouns DAO</0>. Nouns can vote on proposals or delegate their vote to a third party. A minimum of <1>',
+        ['nounsRequired'],
+        ' ',
+        ['0'],
+        '</1> is required to submit proposals.',
+      ],
+    'Nuon {0}': ['Nuon ', ['0']],
+    'ONE NOUN,': '今すぐに',
+    'On-Chain Artwork': 'チェーンアートワーク',
+    'One Noun is equal to one vote.': '名詞は1票に等しい。',
+    'One Noun is trustlessly auctioned every 24 hours, forever.':
+      '1つの名詞は、24時間毎に永遠にオークションされます。',
+    'Only 32x32 PNG images are accepted': '32x32 PNG画像のみ受け付けています',
+    'Only Nons you owned or were delegated to you before {0} are eligible to vote.': [
+      ['0'],
+      ' 以前にあなたが所有または委任されたNonsのみが投票対象となります。',
+    ],
+    Pending: '保留中',
+    'Place bid': 'Place bid',
+    Playground: 'Playground',
+    'Please place a bid higher than or equal to the minimum bid amount of {0} ETH': [
+      '最低入札額の ',
+      ['0'],
+      ' ETH以上の入札額を設定してください',
+    ],
+    'Please try again.': 'もう一度やり直してください。',
+    'Preview:': 'プレビュー',
+    Proposal: '提案',
+    'Proposal Created!': '提案を作成しました！',
+    'Proposal Executed!': '提案が実行されました！',
+    'Proposal Queued!': '提案が待機中です！',
+    'Proposal {0}': ['提案 ', ['0']],
+    Proposals: '提案',
+    'Proposals submitted by community members will appear here.':
+      'コミュニティメンバーが提出した提案はここに表示されます。',
+    'Proposed Transactions': '提案済み取引',
+    Proposer: '提案',
+    Queue: 'キュー',
+    Queued: 'キューに入りました',
+    Quorum: 'Quorum',
+    'Reason (Optional)': '理由（オプション）',
+    'Select Language': 'Select Language',
+    Settle: '決済する',
+    'Settle Auction': '競売を決済する',
+    'Settle manually': '手動で決済する',
+    'Settled auction successfully!': '正常に決済されたオークション!',
+    'Settlement of one auction kicks off the next.':
+      '1つのオークションの決済が次のオークションから始まります。',
+    'Show all {0} events': ['すべての ', ['0'], ' イベントを表示'],
+    'Show fewer': '少なく表示する',
+    'Sign out': 'サインアウト',
+    Snapshot: 'Snapshot',
+    Starts: '開始',
+    'Submit Proposal': '提案を送信',
+    'Submit Vote': '投票を送信',
+    'Submit vote': '投票を送信',
+    Succeeded: '成功しました',
+    Success: '成功',
+    Summary: 'Summary',
+    Switch: '切り替え',
+    'Switch wallet': 'ウォレットを切り替える',
+    'Taken at block': 'ブロックで撮影されました',
+    'Thank you for voting.': '投票ありがとうございます。',
+    'The Noun Seeder contract is used to determine Noun traits during the minting process. The seeder contract can be replaced to allow for future trait generation algorithm upgrades. Additionally, it can be locked by the Nouns DAO to prevent any future updates. Currently, Noun traits are determined using pseudo-random number generation:':
+      'Noun Seeder契約は、鋳造プロセス中にNoun特性を決定するために使用されます。 シードコントラクトを置き換えて、将来の特性生成アルゴリズムのアップグレードを可能にすることができます。 さらに、将来の更新を防ぐために、Nouns DAOによってロックされることができます。現在、Nounの形質は擬似乱数生成を使用して決定されています。',
+    'The Nounders': 'なし者',
+    'The Nounders reward is intended as compensation for our pre and post-launch contributions to the project, and to help us participate meaningfully in governance as the project matures. Since there are 10 Nounders, after 5 years each Nounder could receive up to 1% of the Noun supply.':
+      'Nounders報酬は、プロジェクトへの当社の打ち上げ前と打ち上げ後の貢献に対する報酬として意図されています。 プロジェクトが成熟するにつれてガバナンスに参加するのを助けてくれます 10のNoundersがあるので、5年後、NounerはNoun供給の1%まで受け取ることができます。',
+    'The Nouns Auction Contract will act as a self-sufficient Noun generation and distribution mechanism, auctioning one Noun every 24 hours, forever. 100% of auction proceeds (ETH) are automatically deposited in the Nouns DAO treasury, where they are governed by Noun owners.':
+      'Nouns Auction Contractは、自給自足のNoun生成と流通メカニズムとして機能し、24時間ごとに1つのNounを永遠にオークションします。 オークション収益の100%(ETH)は、Nouns DAOの財務書に自動的に寄託され、Nounの所有者によって管理されます。',
+    'The compressed parts are efficiently converted into a single base64 encoded SVG image on-chain. To accomplish this, each part is decoded into an intermediate format before being converted into a series of SVG rects using batched, on-chain string concatenation. Once the entire SVG has been generated, it is base64 encoded.':
+      '圧縮された部品は効率的に単一の base64 エンコードされた SVG 画像チェーンに変換されます。 これを達成するために、各部品は中間フォーマットにデコードされ、バッチ処理されたオンチェーン文字列連結を使用して一連の SVG rects に変換されます。 SVG 全体が生成されると、base64 エンコードされます。',
+    "The playground was built using the {nounsProtocolLink}. Noun's traits are determined by the Noun Seed. The seed was generated using {nounsAssetsLink} and rendered using the {nounsSDKLink}.":
+      [
+        'The playground was built using the ',
+        ['nounsProtocolLink'],
+        ". Noun's traits are determined by the Noun Seed. The seed was generated using ",
+        ['nounsAssetsLink'],
+        ' and rendered using the ',
+        ['nounsSDKLink'],
+        '.',
+      ],
+    'The treasury is controlled exclusively by Nouns via governance.':
+      '財務省は、ガバナンスを通じて名詞によって独占的に管理されています。',
+    'There was an error voting for your account.': 'アカウントの投票中にエラーが発生しました。',
+    'This Noun has no activity, since it was just created. Check back soon!':
+      'この名詞はまだ作成されていません。すぐに確認してください！',
+    'This treasury exists for <0>Nouns DAO</0> participants to allocate resources for the long-term growth and prosperity of the Nouns project.':
+      'この財務省は、名詞プロジェクトの長期的な成長と繁栄のためにリソースを割り当てるために<0>名詞DAO</0>参加者のために存在します。',
+    Threshold: 'しきい値',
+    'Time left': '残り時間',
+    'Tip:': 'コツ：',
+    'Trait generation is not truly random. Traits can be predicted when minting a Noun on the pending block.':
+      '形質の生成は本当にランダムではありません。形質は、保留中のブロックに名詞を作るときに予測することができます。',
+    'Transaction Failed': 'トランザクション失敗',
+    'Transaction Successful!': '取引に成功しました！',
+    Treasury: 'Treasury',
+    Twitter: 'Twitter',
+    Undetermined: '未決定',
+    Upload: 'アップロード',
+    'Upload Custom Trait': 'カスタム形質をアップロード',
+    'User Already Voted': 'ユーザーはすでに投票済みです',
+    Value: '値',
+    'Value in ETH (Optional)': 'ETH値（オプション）',
+    Vetoed: 'Vetoed',
+    'View all bids': 'すべての入札額を表示',
+    'Vote for the next Noun ⌐◧-◧': '次のNoun <unk> <unk> -<unk> に投票する',
+    'Vote on Prop {0}': ['プロップ ', ['0'], 'に投票'],
+    'Voted aginst': '投票されたアギンスト',
+    'Voted for': '投票対象：',
+    'WTF?': 'WTF?',
+    'Waiting for': '待機中',
+    'What now?': '今は何ですか？',
+    'While settlement is most heavily incentivized for the winning bidder, it can be triggered by anyone, allowing the system to trustlessly auction Nouns as long as Ethereum is operational and there are interested bidders.':
+      '決済は、勝利入札者のために最も多くのインセンティブを与えられていますが、それは誰によって引き起こされることができます。 Ethereumが動作していて、興味のある入札者がいる限り、システムがNounsを信頼なくオークションすることを可能にします。',
+    Winner: '入賞者',
+    'Winning bid': '入札を獲得中',
+    You: 'あなたです',
+    'You <0>Abstained</0> from this proposal': 'この提案からあなた<0>棄権</0>しました',
+    'You already have an active or pending proposal': 'すでに有効または保留中の提案があります',
+    'You can experiment with off-chain Noun generation at the {playgroundLink}.': [
+      ['playgroundLink'],
+      'でオフチェーンのNoun生成を試すことができます。',
+    ],
+    'You can settle manually in 1 minute': '1分で手動で決済できます',
+    'You can settle manually in {0} minutes': '0分で手動で決済できます',
+    "You don't have enough votes to submit a proposal":
+      '提案を提出するのに十分な投票権がありません',
+    'You have no Votes.': '投票がありません。',
+    'You have no votes.': '投票権がありません。',
+    'You must have {0} votes to submit a proposal': ['提案を提出するには ', ['0'], ' 票が必要です'],
+    'You voted <0>Against</0>this proposal': '<0>反対</0>この提案に投票しました',
+    'You voted <0>For</0>this proposal': '<0>For</0>この提案に投票しました',
+    "You've generated {0} years worth of Nouns": [['0'], ' 年分の名詞を生成しました'],
+    "You've successfully voted on on prop {0}": ['prop ', ['0'], ' に投票しました。'],
+    'accessories (137)': 'アクセサリー (137)',
+    at: 'に',
+    'backgrounds (2)': '背景 (2)',
+    'bodies (30)': 'body(30)',
+    'glasses (21)': 'メガネ（21）',
+    'heads (234)': '頭 (234)',
+    'or more': '他',
+    'public domain': 'パブリック ドメイン',
+    '{0} votes': [['0'], ' 投票'],
+    '{0}<0>h</0>': [['0'], '<0>h</0>キー'],
+    '{moveStateButtonAction} Proposal ⌐◧-◧': [['moveStateButtonAction'], ' 提案<unk> <unk>'],
+  },
+};
diff --git a/packages/nouns-webapp/src/locales/ja-JP.po b/packages/nouns-webapp/src/locales/ja-JP.po
new file mode 100644
index 00000000..8a7b95ed
--- /dev/null
+++ b/packages/nouns-webapp/src/locales/ja-JP.po
@@ -0,0 +1,968 @@
+msgid ""
+msgstr ""
+"POT-Creation-Date: 2022-04-20 17:49-0700\n"
+"MIME-Version: 1.0\n"
+"Content-Type: text/plain; charset=UTF-8\n"
+"Content-Transfer-Encoding: 8bit\n"
+"X-Generator: @lingui/cli\n"
+"Language: ja\n"
+"Plural-Forms: nplurals=1; plural=0;\n"
+"X-Crowdin-Project: nouns-test\n"
+"X-Crowdin-Project-ID: 512166\n"
+"X-Crowdin-Language: ja\n"
+"X-Crowdin-File: messages.po\n"
+"X-Crowdin-File-ID: 6\n"
+"Project-Id-Version: nouns-test\n"
+"Language-Team: Japanese\n"
+"PO-Revision-Date: 2022-04-26 05:57\n"
+"Report-Msgid-Bugs-To: \n"
+"Last-Translator: \n"
+
+#: src/components/Documentation/index.tsx
+msgid "'Nounders' are the group of ten builders that initiated Nouns. Here are the Nounders:"
+msgstr "\"ナウンダーズ\"とはナウンズの創業に携わった十人の創業者のことであり、以下の人物で構成されています："
+
+#: src/components/Documentation/index.tsx
+msgid "100% of Noun auction proceeds are trustlessly sent to the treasury."
+msgstr "Nounオークションの売上は、第三者の介入無しで 100％トレジャリーに送られる仕組みになっています。"
+
+#: src/pages/Nounders/index.tsx
+msgid "3.5 artists, 6.5 technologists"
+msgstr "3.5アーティスト、6.5技術者"
+
+#: src/pages/NotFound/index.tsx
+msgid "404: This is not the person, place, or thing you're looking for..."
+msgstr "404: お探しの人、場所、物は見つかりませんでした。"
+
+#: src/components/AuctionTimer/index.tsx
+msgid "<0>{flooredMinutes}<1>m</1></0>"
+msgstr "<0>{flooredMinutes}<1>m</1></0>"
+
+#: src/components/AuctionTimer/index.tsx
+msgid "<0>{flooredSeconds}<1>s</1></0>"
+msgstr "<0>{flooredSeconds}<1>s</1></0>"
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Absent for"
+msgstr "不在："
+
+#: src/components/VoteCard/index.tsx
+msgid "Abstain"
+msgstr "放棄する"
+
+#: src/components/VoteModal/index.tsx
+msgid "Abstain from voting on Prop {0}"
+msgstr "Prop {0} への投票を中止する"
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Abstained on"
+msgstr "廃止日"
+
+#: src/pages/Playground/index.tsx
+msgid "Accessory"
+msgstr "アクセサリー"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Active"
+msgstr "アクティブ"
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "Activity"
+msgstr "アクティビティ"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+msgid "Add Transaction"
+msgstr "取引を追加"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Add a Proposal Transaction"
+msgstr "提案取引を追加"
+
+#: src/pages/CreateProposal/index.tsx
+msgid "Add one or more transactions and describe your proposal for the community. The proposal cannot modified after submission, so please verify all information before submitting. The voting period will begin after 2 1/3 days and last for 3 days."
+msgstr "1つ以上の取引を追加し、あなたの提案をコミュニティに記述してください。 提出後に提案を変更することはできませんので、提出する前にすべての情報を確認してください。 投票期間は2/3日後に開始され、3日間続く予定です。"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Address"
+msgstr "住所"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Address (Callee or Recipient)"
+msgstr "住所（カリーまたは受信者）"
+
+#: src/components/VoteCard/index.tsx
+msgid "Against"
+msgstr "に対して"
+
+#: src/pages/Nounders/index.tsx
+msgid "All Noun auction proceeds are sent to the Nouns DAO. For this reason, we, the project's founders (‘Nounders’) have chosen to compensate ourselves with Nouns. Every 10th noun for the first 5 years of the project will be sent to our multisig (5/10), where it will be vested and distributed to individual Nounders."
+msgstr "Nounオークションの収益はすべてNouns DAOに送られます。そのため、私たちプロジェクトの創設者(Nounders) はNounsを補償することを選択しました。 プロジェクトの最初の5年間の10回目の名詞は、マルチシグ(5/10) に送信されます。 それは個々のNoundersに既得され、配布されます。"
+
+#: src/components/Documentation/index.tsx
+msgid "All Nouns are members of Nouns DAO."
+msgstr "名詞はすべてDAO名詞のメンバーです。"
+
+#: src/pages/CreateProposal/index.tsx
+msgid "All Proposals"
+msgstr "すべての提案"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Arguments"
+msgstr "引数"
+
+#: src/components/Documentation/index.tsx
+msgid "Artwork is generative and stored directly on-chain (not IPFS)."
+msgstr "アートワークは生成され、直接チェーン上に保存されます(IPFSではありません)。"
+
+#: src/components/AuctionTimer/index.tsx
+#: src/components/AuctionTimer/index.tsx
+msgid "Auction ended"
+msgstr "オークションが終了しました"
+
+#: src/components/AuctionTimer/index.tsx
+msgid "Auction ends in"
+msgstr "オークション終了まで"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Back"
+msgstr "戻る"
+
+#: src/pages/Playground/index.tsx
+msgid "Background"
+msgstr "背景"
+
+#: src/components/Documentation/index.tsx
+msgid "Because 100% of Noun auction proceeds are sent to Nouns DAO, Nounders have chosen to compensate themselves with Nouns. Every 10th Noun for the first 5 years of the project (Noun ids #0, #10, #20, #30 and so on) will be automatically sent to the Nounder's multisig to be vested and shared among the founding members of the project."
+msgstr "Nounオークションの収益の100%がNouns DAOに送られるため、NoundersはNounsで自分自身を補償することを選択しました。 プロジェクトの最初の5年間の10番目の名詞(Noun ids#0, #10, #20) #30などが自動的にNounderのマルチシグに送信され、プロジェクトの創設メンバー間で既得権と共有されます。"
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+msgid "Bid"
+msgstr "Bid"
+
+#: src/components/NounInfoCard/index.tsx
+msgid "Bid history"
+msgstr "入札履歴"
+
+#: src/components/Bid/index.tsx
+msgid "Bid was placed successfully!"
+msgstr "入札が正常に配置されました！"
+
+#: src/components/NounInfoCard/index.tsx
+msgid "Bids"
+msgstr "入札額"
+
+#: src/components/BidHistoryModal/index.tsx
+msgid "Bids for"
+msgstr "入札額"
+
+#: src/components/BidHistoryModal/index.tsx
+msgid "Bids will appear here"
+msgstr "入札額はここに表示されます"
+
+#: src/pages/Playground/index.tsx
+msgid "Body"
+msgstr "本文"
+
+#: src/components/NounInfoRowBirthday/index.tsx
+msgid "Born"
+msgstr "生まれ"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Canceled"
+msgstr "キャンセルしました"
+
+#: src/components/VoteModal/index.tsx
+msgid "Cast 1 vote against Prop {0}"
+msgstr "Prop {0} に対して1票を投じてください"
+
+#: src/components/VoteModal/index.tsx
+msgid "Cast 1 vote for Prop {0}"
+msgstr "Prop {0} に 1 票を投入する"
+
+#: src/components/VoteModal/index.tsx
+msgid "Cast {0} votes against Prop {1}"
+msgstr "Prop {0} に {1} 票を投入する"
+
+#: src/components/VoteModal/index.tsx
+msgid "Cast {0} votes for Prop {1}"
+msgstr "Prop {0} に {1} 票を投入する"
+
+#: src/components/WalletConnectModal/index.tsx
+msgid "Clear WalletConnect Data"
+msgstr "WalletConnect データをクリア"
+
+#: src/components/Documentation/index.tsx
+msgid "Compound Governance"
+msgstr "複合ガバナンス"
+
+#: src/components/NavWallet/WalletConnectButton/index.tsx
+msgid "Connect"
+msgstr "接続する"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "Connect a wallet to vote."
+msgstr "投票するウォレットを接続します。"
+
+#: src/components/Proposals/index.tsx
+msgid "Connect wallet to make a proposal."
+msgstr "ウォレットに接続して提案してください。"
+
+#: src/components/WalletConnectModal/index.tsx
+msgid "Connect your wallet"
+msgstr "ウォレットに接続"
+
+#: src/components/CreateProposalButton/index.tsx
+#: src/pages/CreateProposal/index.tsx
+msgid "Create Proposal"
+msgstr "提案を作成"
+
+#: src/components/Documentation/index.tsx
+msgid "Cryptopunks"
+msgstr "クリプトパンクス"
+
+#: src/components/CurrentBid/index.tsx
+msgid "Current bid"
+msgstr "現在の入札額"
+
+#: src/components/NavBar/index.tsx
+msgid "DAO"
+msgstr "DAO"
+
+#: src/components/Documentation/index.tsx
+msgid "Daily Auctions"
+msgstr "デイリーオークション数"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Defeated"
+msgstr "破られた"
+
+#: src/components/ProposalContent/index.tsx
+msgid "Description"
+msgstr "説明"
+
+#: src/components/NavWallet/index.tsx
+msgid "Disconnect"
+msgstr "接続を解除"
+
+#: src/components/Footer/index.tsx
+msgid "Discord"
+msgstr "Discord"
+
+#: src/components/NavBar/index.tsx
+msgid "Discourse"
+msgstr "Discourse"
+
+#: src/components/NavBar/index.tsx
+msgid "Docs"
+msgstr "ドキュメント"
+
+#: src/components/Banner/index.tsx
+msgid "EVERY DAY,"
+msgstr "毎日"
+
+#: src/components/Documentation/index.tsx
+msgid "Each time an auction is settled, the settlement transaction will also cause a new Noun to be minted and a new 24 hour auction to begin."
+msgstr "オークションが決済されるたびに 決済取引により、新しい名詞が鋳造され、24時間オークションが開始されます。"
+
+#: src/pages/Vote/index.tsx
+msgid "Ended"
+msgstr "終了"
+
+#: src/pages/Vote/index.tsx
+msgid "Ends"
+msgstr "終了"
+
+#: src/components/AuctionTimer/index.tsx
+msgid "Ends on"
+msgstr "終了日時"
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/VoteModal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/Vote/index.tsx
+msgid "Error"
+msgstr "エラー"
+
+#: src/components/NounInfoRowBirthday/index.tsx
+msgid "Error fetching Noun birthday"
+msgstr "Nounの誕生日を取得できませんでした"
+
+#: src/components/Footer/index.tsx
+#: src/components/NounInfoCard/index.tsx
+msgid "Etherscan"
+msgstr "Etherscan"
+
+#: src/pages/Vote/index.tsx
+msgid "Execute"
+msgstr "実行"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Executed"
+msgstr "遂行済み"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Expired"
+msgstr "期限切れ"
+
+#: src/pages/Playground/index.tsx
+msgid "Explore"
+msgstr "探索"
+
+#: src/components/Banner/index.tsx
+msgid "FOREVER."
+msgstr "忘れないで。"
+
+#: src/pages/Vote/index.tsx
+msgid "Failed to fetch"
+msgstr "取得に失敗しました"
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "Failed to fetch Noun activity history"
+msgstr "Nounアクティビティ履歴の取得に失敗しました"
+
+#: src/components/NounInfoRowHolder/index.tsx
+msgid "Failed to fetch Noun info"
+msgstr "Noun情報の取得に失敗しました"
+
+#: src/components/VoteCard/index.tsx
+msgid "For"
+msgstr "対象："
+
+#: src/components/Footer/index.tsx
+msgid "Forums"
+msgstr "フォーラム"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Function"
+msgstr "関数"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Function (Optional)"
+msgstr "関数（任意）"
+
+#: src/pages/Playground/index.tsx
+msgid "Generate Nouns"
+msgstr "名詞を生成"
+
+#: src/pages/Playground/index.tsx
+msgid "Glasses"
+msgstr "ガラス"
+
+#: src/pages/Governance/index.tsx
+msgid "Governance"
+msgstr "Governance"
+
+#: src/components/Documentation/index.tsx
+msgid "Governance ‘Slow Start’"
+msgstr "ガバナンス 「スロースタート」"
+
+#: src/pages/Playground/index.tsx
+msgid "Head"
+msgstr "頭"
+
+#: src/components/NounInfoRowHolder/index.tsx
+msgid "Held by"
+msgstr "主催者："
+
+#: src/components/AuctionActivity/index.tsx
+msgid "Help mint the next Noun"
+msgstr "次の名詞を作るのを手伝ってください"
+
+#: src/components/Documentation/index.tsx
+msgid "In addition to the precautions taken by Compound Governance, Nounders have given themselves a special veto right to ensure that no malicious proposals can be passed while the Noun supply is low. This veto right will only be used if an obviously harmful governance proposal has been passed, and is intended as a last resort."
+msgstr "複合政府によって取られた予防措置に加えて、 Nounの供給量が少ない間に悪意のある提案を渡すことができないことを確実にするためにNounersは彼ら自身に特別な拒否権を与えました。 この拒否権は明らかに有害なガバナンスの提案が渡された場合にのみ使用され、最後の手段として意図されています。"
+
+#: src/components/Bid/index.tsx
+msgid "Insufficient bid amount 🤏"
+msgstr "入札額が不足しています🤏"
+
+#: src/components/NavLocaleSwitcher/index.tsx
+msgid "Language"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Learn more below, or start creating Nouns off-chain using the {playgroundLink}."
+msgstr "詳細は以下を参照してください。または、 {playgroundLink} を使用してオフチェーン名詞の作成を開始してください。"
+
+#: src/components/NounInfoRowHolder/index.tsx
+msgid "Loading..."
+msgstr "読み込み中..."
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Next"
+msgstr "次へ"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "No arguments required"
+msgstr "引数は必要ありません"
+
+#: src/components/Documentation/index.tsx
+msgid "No explicit rules exist for attribute scarcity; all Nouns are equally rare."
+msgstr "属性希少性のための明示的なルールは存在しません。すべての名詞も同様に稀です。"
+
+#: src/components/Proposals/index.tsx
+msgid "No proposals found"
+msgstr "提案が見つかりませんでした"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+#: src/components/ProposalTransactionFormModal/index.tsx
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "None"
+msgstr "なし"
+
+#: src/components/BidHistoryModal/index.tsx
+#: src/pages/Governance/index.tsx
+msgid "Noun"
+msgstr "Noun"
+
+#: src/components/Documentation/index.tsx
+msgid "Noun Seeder Contract"
+msgstr "Noun Seedder 契約"
+
+#: src/components/Documentation/index.tsx
+msgid "Noun Traits"
+msgstr "名声の特徴"
+
+#: src/components/AuctionActivityNounTitle/index.tsx
+msgid "Noun {0}"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Nounder distributions don't interfere with the cadence of 24 hour auctions. Nouns are sent directly to the Nounder's Multisig, and auctions continue on schedule with the next available Noun ID."
+msgstr "24時間オークションのリズムに影響を与えることはありません。 NounsはNounderのMultisigに直接送信され、オークションは次の利用可能なNoun IDでスケジュール通りに継続されます。"
+
+#: src/components/Documentation/index.tsx
+msgid "Nounder's Reward"
+msgstr "Nunder recompensa"
+
+#: src/components/Documentation/index.tsx
+msgid "Nounders receive rewards in the form of Nouns (10% of supply for first 5 years)."
+msgstr "Nounersの形で報酬を受け取る(最初の5年間の供給の10%)。"
+
+#: src/components/Documentation/index.tsx
+msgid "Nounders will proveably revoke this veto right when they deem it safe to do so. This decision will be based on a healthy Noun distribution and a community that is engaged in the governance process."
+msgstr "彼らがそうするためにそれが安全であると判断したときNounders は証明できる権利この拒否権を取り消す。 この決定は、健全な名詞分配とガバナンスプロセスに従事しているコミュニティに基づいて行われます。"
+
+#: src/pages/Nounders/index.tsx
+msgid "Nounders' Reward"
+msgstr "Nounders' Reward"
+
+#: src/pages/Governance/index.tsx
+msgid "Nouns"
+msgstr "Nouns"
+
+#: src/components/NounInfoRowHolder/index.tsx
+msgid "Nouns Auction House"
+msgstr "名詞オークションハウス"
+
+#: src/components/Documentation/index.tsx
+#: src/pages/Governance/index.tsx
+msgid "Nouns DAO"
+msgstr "名詞DAO"
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns DAO uses a fork of {compoundGovLink}."
+msgstr "名詞DAOは {compoundGovLink}のフォークを使用しています。"
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns DAO utilizes a fork of {compoundGovLink} and is the main governing body of the Nouns ecosystem. The Nouns DAO treasury receives 100% of ETH proceeds from daily Noun auctions. Each Noun is an irrevocable member of Nouns DAO and entitled to one vote in all governance matters. Noun votes are non-transferable (if you sell your Noun the vote goes with it) but delegatable, which means you can assign your vote to someone else as long as you own your Noun."
+msgstr "Nouns DAOは {compoundGovLink} のフォークを利用しており、Nounsエコシステムの主要な統治機関です。 名詞DAOの財務省は、ETHの100%を毎日の名詞オークションから受け取ります。 各名詞は、取消せないDAOのメンバーであり、すべてのガバナンスの問題において1つの投票を受ける権利があります。 名詞票は譲渡できません(あなたが名詞を販売する場合、投票はそれに伴います)が、委任できます。 つまり、自分の名詞を所有している限り、自分の投票を他の誰かに割り当てることができます。"
+
+#: src/pages/Playground/index.tsx
+msgid "Nouns Protocol"
+msgstr "名詞プロトコル"
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns are an experimental attempt to improve the formation of on-chain avatar communities. While projects such as {cryptopunksLink} have attempted to bootstrap digital community and identity, Nouns attempt to bootstrap identity, community, governance, and a treasury that can be used by the community"
+msgstr "Nounsは、オンチェーンアバターコミュニティの形成を改善するための実験的な試みです。 {cryptopunksLink} のようなプロジェクトは、デジタルコミュニティとアイデンティティのブートストラップを試みています。 Nouns は、コミュニティ、ガバナンス、コミュニティで使用できる財務省のアイデンティティをブートストラップしようとします。"
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns are generated randomly based Ethereum block hashes. There are no 'if' statements or other rules governing Noun trait scarcity, which makes all Nouns equally rare. As of this writing, Nouns are made up of:"
+msgstr "名詞はランダムにベースのEthereumブロックハッシュを生成します。 すべての名詞を等しく稀にする名詞特性の乏しさを支配する'もし' 声明または他の規則がない。 この執筆時点では、名詞は以下で構成されています。"
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns are stored directly on Ethereum and do not utilize pointers to other networks such as IPFS. This is possible because Noun parts are compressed and stored on-chain using a custom run-length encoding (RLE), which is a form of lossless compression."
+msgstr "名詞はEthereumに直接保存され、IPFSなどの他のネットワークにはポインタを使用しません。 これは、Noun部品は、ロスレス圧縮の一形態であるカスタム実行長エンコーディング(RLE)を使用して、チェーン上で圧縮および保存されるために可能です。"
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns artwork is in the {publicDomainLink}."
+msgstr "名詞のアートワークは {publicDomainLink} にあります。"
+
+#: src/pages/Governance/index.tsx
+#~ msgid "Nouns govern <0>Nouns DAO</0>. Nouns can vote on proposals or delegate their vote to a third party. A minimum of <1>{nounThresholdCopy}</1> is required to submit proposals."
+#~ msgstr "Nounsは<0>Nouns DAO</0>を支配します。Nounsは提案に投票したり、投票を第三者に委任することができます。 提案を提出するには、最低<1>{nounThresholdCopy}</1>が必要です。"
+
+#: src/pages/Governance/index.tsx
+msgid "Nouns govern <0>Nouns DAO</0>. Nouns can vote on proposals or delegate their vote to a third party. A minimum of <1>{nounsRequired} {0}</1> is required to submit proposals."
+msgstr ""
+
+#: src/components/AuctionActivityNounTitle/index.tsx
+#~ msgid "Nuon {0}"
+#~ msgstr "Nuon {0}"
+
+#: src/components/Banner/index.tsx
+msgid "ONE NOUN,"
+msgstr "今すぐに"
+
+#: src/components/Documentation/index.tsx
+msgid "On-Chain Artwork"
+msgstr "チェーンアートワーク"
+
+#: src/components/Documentation/index.tsx
+msgid "One Noun is equal to one vote."
+msgstr "名詞は1票に等しい。"
+
+#: src/components/Documentation/index.tsx
+msgid "One Noun is trustlessly auctioned every 24 hours, forever."
+msgstr "1つの名詞は、24時間毎に永遠にオークションされます。"
+
+#: src/pages/Playground/index.tsx
+msgid "Only 32x32 PNG images are accepted"
+msgstr "32x32 PNG画像のみ受け付けています"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "Only Nons you owned or were delegated to you before {0} are eligible to vote."
+msgstr "{0} 以前にあなたが所有または委任されたNonsのみが投票対象となります。"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Pending"
+msgstr "保留中"
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+msgid "Place bid"
+msgstr "Place bid"
+
+#: src/components/Documentation/index.tsx
+#: src/components/NavBar/index.tsx
+#: src/pages/Playground/index.tsx
+msgid "Playground"
+msgstr "Playground"
+
+#: src/components/Bid/index.tsx
+msgid "Please place a bid higher than or equal to the minimum bid amount of {0} ETH"
+msgstr "最低入札額の {0} ETH以上の入札額を設定してください"
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/VoteModal/index.tsx
+#: src/components/VoteModal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/Vote/index.tsx
+#: src/pages/Vote/index.tsx
+msgid "Please try again."
+msgstr "もう一度やり直してください。"
+
+#: src/components/ProposalEditor/index.tsx
+msgid "Preview:"
+msgstr "プレビュー"
+
+#: src/components/ProposalEditor/index.tsx
+msgid "Proposal"
+msgstr "提案"
+
+#: src/pages/CreateProposal/index.tsx
+msgid "Proposal Created!"
+msgstr "提案を作成しました！"
+
+#: src/pages/Vote/index.tsx
+msgid "Proposal Executed!"
+msgstr "提案が実行されました！"
+
+#: src/pages/Vote/index.tsx
+msgid "Proposal Queued!"
+msgstr "提案が待機中です！"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "Proposal {0}"
+msgstr "提案 {0}"
+
+#: src/components/Proposals/index.tsx
+msgid "Proposals"
+msgstr "提案"
+
+#: src/components/Proposals/index.tsx
+msgid "Proposals submitted by community members will appear here."
+msgstr "コミュニティメンバーが提出した提案はここに表示されます。"
+
+#: src/components/ProposalContent/index.tsx
+msgid "Proposed Transactions"
+msgstr "提案済み取引"
+
+#: src/components/ProposalContent/index.tsx
+msgid "Proposer"
+msgstr "提案"
+
+#: src/pages/Vote/index.tsx
+msgid "Queue"
+msgstr "キュー"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Queued"
+msgstr "キューに入りました"
+
+#: src/pages/Vote/index.tsx
+msgid "Quorum"
+msgstr "Quorum"
+
+#: src/components/VoteModal/index.tsx
+msgid "Reason (Optional)"
+msgstr "理由（オプション）"
+
+#: src/components/LanguageSelectionModal/index.tsx
+msgid "Select Language"
+msgstr ""
+
+#: src/components/Bid/index.tsx
+msgid "Settle"
+msgstr "決済する"
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+msgid "Settle Auction"
+msgstr "競売を決済する"
+
+#: src/components/SettleManuallyBtn/index.tsx
+msgid "Settle manually"
+msgstr "手動で決済する"
+
+#: src/components/Bid/index.tsx
+msgid "Settled auction successfully!"
+msgstr "正常に決済されたオークション!"
+
+#: src/components/Documentation/index.tsx
+msgid "Settlement of one auction kicks off the next."
+msgstr "1つのオークションの決済が次のオークションから始まります。"
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "Show all {0} events"
+msgstr "すべての {0} イベントを表示"
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "Show fewer"
+msgstr "少なく表示する"
+
+#: src/components/NavWallet/index.tsx
+msgid "Sign out"
+msgstr "サインアウト"
+
+#: src/pages/Vote/index.tsx
+msgid "Snapshot"
+msgstr "Snapshot"
+
+#: src/pages/Vote/index.tsx
+msgid "Starts"
+msgstr "開始"
+
+#: src/components/Proposals/index.tsx
+#: src/components/Proposals/index.tsx
+msgid "Submit Proposal"
+msgstr "提案を送信"
+
+#: src/components/VoteModal/index.tsx
+msgid "Submit Vote"
+msgstr "投票を送信"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "Submit vote"
+msgstr "投票を送信"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Succeeded"
+msgstr "成功しました"
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/Vote/index.tsx
+msgid "Success"
+msgstr "成功"
+
+#: src/components/Documentation/index.tsx
+msgid "Summary"
+msgstr "Summary"
+
+#: src/components/NavWallet/index.tsx
+msgid "Switch"
+msgstr "切り替え"
+
+#: src/components/NavWallet/index.tsx
+msgid "Switch wallet"
+msgstr "ウォレットを切り替える"
+
+#: src/pages/Vote/index.tsx
+msgid "Taken at block"
+msgstr "ブロックで撮影されました"
+
+#: src/components/VoteModal/index.tsx
+msgid "Thank you for voting."
+msgstr "投票ありがとうございます。"
+
+#: src/components/Documentation/index.tsx
+msgid "The Noun Seeder contract is used to determine Noun traits during the minting process. The seeder contract can be replaced to allow for future trait generation algorithm upgrades. Additionally, it can be locked by the Nouns DAO to prevent any future updates. Currently, Noun traits are determined using pseudo-random number generation:"
+msgstr "Noun Seeder契約は、鋳造プロセス中にNoun特性を決定するために使用されます。 シードコントラクトを置き換えて、将来の特性生成アルゴリズムのアップグレードを可能にすることができます。 さらに、将来の更新を防ぐために、Nouns DAOによってロックされることができます。現在、Nounの形質は擬似乱数生成を使用して決定されています。"
+
+#: src/pages/Nounders/index.tsx
+msgid "The Nounders"
+msgstr "なし者"
+
+#: src/pages/Nounders/index.tsx
+msgid "The Nounders reward is intended as compensation for our pre and post-launch contributions to the project, and to help us participate meaningfully in governance as the project matures. Since there are 10 Nounders, after 5 years each Nounder could receive up to 1% of the Noun supply."
+msgstr "Nounders報酬は、プロジェクトへの当社の打ち上げ前と打ち上げ後の貢献に対する報酬として意図されています。 プロジェクトが成熟するにつれてガバナンスに参加するのを助けてくれます 10のNoundersがあるので、5年後、NounerはNoun供給の1%まで受け取ることができます。"
+
+#: src/components/Documentation/index.tsx
+msgid "The Nouns Auction Contract will act as a self-sufficient Noun generation and distribution mechanism, auctioning one Noun every 24 hours, forever. 100% of auction proceeds (ETH) are automatically deposited in the Nouns DAO treasury, where they are governed by Noun owners."
+msgstr "Nouns Auction Contractは、自給自足のNoun生成と流通メカニズムとして機能し、24時間ごとに1つのNounを永遠にオークションします。 オークション収益の100%(ETH)は、Nouns DAOの財務書に自動的に寄託され、Nounの所有者によって管理されます。"
+
+#: src/components/Documentation/index.tsx
+msgid "The compressed parts are efficiently converted into a single base64 encoded SVG image on-chain. To accomplish this, each part is decoded into an intermediate format before being converted into a series of SVG rects using batched, on-chain string concatenation. Once the entire SVG has been generated, it is base64 encoded."
+msgstr "圧縮された部品は効率的に単一の base64 エンコードされた SVG 画像チェーンに変換されます。 これを達成するために、各部品は中間フォーマットにデコードされ、バッチ処理されたオンチェーン文字列連結を使用して一連の SVG rects に変換されます。 SVG 全体が生成されると、base64 エンコードされます。"
+
+#: src/pages/Playground/index.tsx
+msgid "The playground was built using the {nounsProtocolLink}. Noun's traits are determined by the Noun Seed. The seed was generated using {nounsAssetsLink} and rendered using the {nounsSDKLink}."
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "The treasury is controlled exclusively by Nouns via governance."
+msgstr "財務省は、ガバナンスを通じて名詞によって独占的に管理されています。"
+
+#: src/components/VoteModal/index.tsx
+msgid "There was an error voting for your account."
+msgstr "アカウントの投票中にエラーが発生しました。"
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "This Noun has no activity, since it was just created. Check back soon!"
+msgstr "この名詞はまだ作成されていません。すぐに確認してください！"
+
+#: src/pages/Governance/index.tsx
+msgid "This treasury exists for <0>Nouns DAO</0> participants to allocate resources for the long-term growth and prosperity of the Nouns project."
+msgstr "この財務省は、名詞プロジェクトの長期的な成長と繁栄のためにリソースを割り当てるために<0>名詞DAO</0>参加者のために存在します。"
+
+#: src/pages/Vote/index.tsx
+msgid "Threshold"
+msgstr "しきい値"
+
+#: src/components/AuctionTimer/index.tsx
+msgid "Time left"
+msgstr "残り時間"
+
+#: src/pages/CreateProposal/index.tsx
+msgid "Tip:"
+msgstr "コツ："
+
+#: src/components/Documentation/index.tsx
+msgid "Trait generation is not truly random. Traits can be predicted when minting a Noun on the pending block."
+msgstr "形質の生成は本当にランダムではありません。形質は、保留中のブロックに名詞を作るときに予測することができます。"
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/VoteModal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/Vote/index.tsx
+msgid "Transaction Failed"
+msgstr "トランザクション失敗"
+
+#: src/pages/Vote/index.tsx
+msgid "Transaction Successful!"
+msgstr "取引に成功しました！"
+
+#: src/components/NavBarTreasury/index.tsx
+#: src/pages/Governance/index.tsx
+msgid "Treasury"
+msgstr "Treasury"
+
+#: src/components/Footer/index.tsx
+msgid "Twitter"
+msgstr "Twitter"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Undetermined"
+msgstr "未決定"
+
+#: src/pages/Playground/index.tsx
+msgid "Upload"
+msgstr "アップロード"
+
+#: src/pages/Playground/index.tsx
+msgid "Upload Custom Trait"
+msgstr "カスタム形質をアップロード"
+
+#: src/components/VoteModal/index.tsx
+msgid "User Already Voted"
+msgstr "ユーザーはすでに投票済みです"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Value"
+msgstr "値"
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Value in ETH (Optional)"
+msgstr "ETH値（オプション）"
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Vetoed"
+msgstr "Vetoed"
+
+#: src/components/BidHistoryBtn/index.tsx
+msgid "View all bids"
+msgstr "すべての入札額を表示"
+
+#: src/components/Bid/index.tsx
+msgid "Vote for the next Noun ⌐◧-◧"
+msgstr "次のNoun <unk> <unk> -<unk> に投票する"
+
+#: src/components/VoteModal/index.tsx
+msgid "Vote on Prop {0}"
+msgstr "プロップ {0}に投票"
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Voted aginst"
+msgstr "投票されたアギンスト"
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Voted for"
+msgstr "投票対象："
+
+#: src/components/Documentation/index.tsx
+msgid "WTF?"
+msgstr "WTF?"
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Waiting for"
+msgstr "待機中"
+
+#: src/components/Winner/index.tsx
+#: src/components/Winner/index.tsx
+msgid "What now?"
+msgstr "今は何ですか？"
+
+#: src/components/Documentation/index.tsx
+msgid "While settlement is most heavily incentivized for the winning bidder, it can be triggered by anyone, allowing the system to trustlessly auction Nouns as long as Ethereum is operational and there are interested bidders."
+msgstr "決済は、勝利入札者のために最も多くのインセンティブを与えられていますが、それは誰によって引き起こされることができます。 Ethereumが動作していて、興味のある入札者がいる限り、システムがNounsを信頼なくオークションすることを可能にします。"
+
+#: src/components/Winner/index.tsx
+msgid "Winner"
+msgstr "入賞者"
+
+#: src/components/CurrentBid/index.tsx
+msgid "Winning bid"
+msgstr "入札を獲得中"
+
+#: src/components/Winner/index.tsx
+msgid "You"
+msgstr "あなたです"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "You <0>Abstained</0> from this proposal"
+msgstr "この提案からあなた<0>棄権</0>しました"
+
+#: src/components/CreateProposalButton/index.tsx
+msgid "You already have an active or pending proposal"
+msgstr "すでに有効または保留中の提案があります"
+
+#: src/components/Documentation/index.tsx
+msgid "You can experiment with off-chain Noun generation at the {playgroundLink}."
+msgstr "{playgroundLink}でオフチェーンのNoun生成を試すことができます。"
+
+#: src/components/SettleManuallyBtn/index.tsx
+msgid "You can settle manually in 1 minute"
+msgstr "1分で手動で決済できます"
+
+#: src/components/SettleManuallyBtn/index.tsx
+msgid "You can settle manually in {0} minutes"
+msgstr "0分で手動で決済できます"
+
+#: src/components/CreateProposalButton/index.tsx
+msgid "You don't have enough votes to submit a proposal"
+msgstr "提案を提出するのに十分な投票権がありません"
+
+#: src/components/Proposals/index.tsx
+msgid "You have no Votes."
+msgstr "投票がありません。"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "You have no votes."
+msgstr "投票権がありません。"
+
+#: src/components/CreateProposalButton/index.tsx
+msgid "You must have {0} votes to submit a proposal"
+msgstr "提案を提出するには {0} 票が必要です"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "You voted <0>Against</0>this proposal"
+msgstr "<0>反対</0>この提案に投票しました"
+
+#: src/components/ProposalHeader/index.tsx
+msgid "You voted <0>For</0>this proposal"
+msgstr "<0>For</0>この提案に投票しました"
+
+#: src/pages/Playground/index.tsx
+msgid "You've generated {0} years worth of Nouns"
+msgstr "{0} 年分の名詞を生成しました"
+
+#: src/components/VoteModal/index.tsx
+msgid "You've successfully voted on on prop {0}"
+msgstr "prop {0} に投票しました。"
+
+#: src/components/Documentation/index.tsx
+msgid "accessories (137)"
+msgstr "アクセサリー (137)"
+
+#: src/components/AuctionTimer/index.tsx
+msgid "at"
+msgstr "に"
+
+#: src/components/Documentation/index.tsx
+msgid "backgrounds (2)"
+msgstr "背景 (2)"
+
+#: src/components/Documentation/index.tsx
+msgid "bodies (30)"
+msgstr "body(30)"
+
+#: src/components/Documentation/index.tsx
+msgid "glasses (21)"
+msgstr "メガネ（21）"
+
+#: src/components/Documentation/index.tsx
+msgid "heads (234)"
+msgstr "頭 (234)"
+
+#: src/components/Bid/index.tsx
+msgid "or more"
+msgstr "他"
+
+#: src/components/Documentation/index.tsx
+msgid "public domain"
+msgstr "パブリック ドメイン"
+
+#: src/pages/Vote/index.tsx
+msgid "{0} votes"
+msgstr "{0} 投票"
+
+#: src/components/AuctionTimer/index.tsx
+msgid "{0}<0>h</0>"
+msgstr "{0}<0>h</0>キー"
+
+#: src/pages/Vote/index.tsx
+msgid "{moveStateButtonAction} Proposal ⌐◧-◧"
+msgstr "{moveStateButtonAction} 提案<unk> <unk>"
diff --git a/packages/nouns-webapp/src/locales/pseudo.js b/packages/nouns-webapp/src/locales/pseudo.js
new file mode 100644
index 00000000..314bd28e
--- /dev/null
+++ b/packages/nouns-webapp/src/locales/pseudo.js
@@ -0,0 +1,314 @@
+/*eslint-disable*/ module.exports = {
+  messages: {
+    "'Nounders' are the group of ten builders that initiated Nouns. Here are the Nounders:":
+      "'Ńōũńďēŕś' àŕē ţĥē ĝŕōũƥ ōƒ ţēń ƀũĩĺďēŕś ţĥàţ ĩńĩţĩàţēď Ńōũńś. Ĥēŕē àŕē ţĥē Ńōũńďēŕś:",
+    '100% of Noun auction proceeds are trustlessly sent to the treasury.':
+      '100% ōƒ Ńōũń àũćţĩōń ƥŕōćēēďś àŕē ţŕũśţĺēśśĺŷ śēńţ ţō ţĥē ţŕēàśũŕŷ.',
+    '3.5 artists, 6.5 technologists': '3.5 àŕţĩśţś, 6.5 ţēćĥńōĺōĝĩśţś',
+    "404: This is not the person, place, or thing you're looking for...":
+      "404: Ţĥĩś ĩś ńōţ ţĥē ƥēŕśōń, ƥĺàćē, ōŕ ţĥĩńĝ ŷōũ'ŕē ĺōōķĩńĝ ƒōŕ...",
+    '<0>{flooredMinutes}<1>m</1></0>': ['<0>', ['flooredMinutes'], '<1>m</1></0>'],
+    '<0>{flooredSeconds}<1>s</1></0>': ['<0>', ['flooredSeconds'], '<1>ś</1></0>'],
+    'Absent for': 'Àƀśēńţ ƒōŕ',
+    Abstain: 'Àƀśţàĩń',
+    'Abstain from voting on Prop {0}': ['Àƀśţàĩń ƒŕōm vōţĩńĝ ōń Ƥŕōƥ ', ['0']],
+    'Abstained on': 'Àƀśţàĩńēď ōń',
+    Accessory: 'Àććēśśōŕŷ',
+    Active: 'Àćţĩvē',
+    Activity: 'Àćţĩvĩţŷ',
+    'Add Transaction': 'Àďď Ţŕàńśàćţĩōń',
+    'Add a Proposal Transaction': 'Àďď à Ƥŕōƥōśàĺ Ţŕàńśàćţĩōń',
+    'Add one or more transactions and describe your proposal for the community. The proposal cannot modified after submission, so please verify all information before submitting. The voting period will begin after 2 1/3 days and last for 3 days.':
+      'Àďď ōńē ōŕ mōŕē ţŕàńśàćţĩōńś àńď ďēśćŕĩƀē ŷōũŕ ƥŕōƥōśàĺ ƒōŕ ţĥē ćōmmũńĩţŷ. Ţĥē ƥŕōƥōśàĺ ćàńńōţ mōďĩƒĩēď àƒţēŕ śũƀmĩśśĩōń, śō ƥĺēàśē vēŕĩƒŷ àĺĺ ĩńƒōŕmàţĩōń ƀēƒōŕē śũƀmĩţţĩńĝ. Ţĥē vōţĩńĝ ƥēŕĩōď ŵĩĺĺ ƀēĝĩń àƒţēŕ 2 1/3 ďàŷś àńď ĺàśţ ƒōŕ 3 ďàŷś.',
+    Address: 'Àďďŕēśś',
+    'Address (Callee or Recipient)': 'Àďďŕēśś (Ćàĺĺēē ōŕ Ŕēćĩƥĩēńţ)',
+    Against: 'Àĝàĩńśţ',
+    "All Noun auction proceeds are sent to the Nouns DAO. For this reason, we, the project's founders (‘Nounders’) have chosen to compensate ourselves with Nouns. Every 10th noun for the first 5 years of the project will be sent to our multisig (5/10), where it will be vested and distributed to individual Nounders.":
+      "Àĺĺ Ńōũń àũćţĩōń ƥŕōćēēďś àŕē śēńţ ţō ţĥē Ńōũńś ĎÀŌ. Ƒōŕ ţĥĩś ŕēàśōń, ŵē, ţĥē ƥŕōĴēćţ'ś ƒōũńďēŕś (‘Ńōũńďēŕś’) ĥàvē ćĥōśēń ţō ćōmƥēńśàţē ōũŕśēĺvēś ŵĩţĥ Ńōũńś. Ēvēŕŷ 10ţĥ ńōũń ƒōŕ ţĥē ƒĩŕśţ 5 ŷēàŕś ōƒ ţĥē ƥŕōĴēćţ ŵĩĺĺ ƀē śēńţ ţō ōũŕ mũĺţĩśĩĝ (5/10), ŵĥēŕē ĩţ ŵĩĺĺ ƀē vēśţēď àńď ďĩśţŕĩƀũţēď ţō ĩńďĩvĩďũàĺ Ńōũńďēŕś.",
+    'All Nouns are members of Nouns DAO.': 'Àĺĺ Ńōũńś àŕē mēmƀēŕś ōƒ Ńōũńś ĎÀŌ.',
+    'All Proposals': 'Àĺĺ Ƥŕōƥōśàĺś',
+    Arguments: 'Àŕĝũmēńţś',
+    'Artwork is generative and stored directly on-chain (not IPFS).':
+      'Àŕţŵōŕķ ĩś ĝēńēŕàţĩvē àńď śţōŕēď ďĩŕēćţĺŷ ōń-ćĥàĩń (ńōţ ĨƤƑŚ).',
+    'Auction ended': 'Àũćţĩōń ēńďēď',
+    'Auction ends in': 'Àũćţĩōń ēńďś ĩń',
+    Back: 'ßàćķ',
+    Background: 'ßàćķĝŕōũńď',
+    "Because 100% of Noun auction proceeds are sent to Nouns DAO, Nounders have chosen to compensate themselves with Nouns. Every 10th Noun for the first 5 years of the project (Noun ids #0, #10, #20, #30 and so on) will be automatically sent to the Nounder's multisig to be vested and shared among the founding members of the project.":
+      "ßēćàũśē 100% ōƒ Ńōũń àũćţĩōń ƥŕōćēēďś àŕē śēńţ ţō Ńōũńś ĎÀŌ, Ńōũńďēŕś ĥàvē ćĥōśēń ţō ćōmƥēńśàţē ţĥēmśēĺvēś ŵĩţĥ Ńōũńś. Ēvēŕŷ 10ţĥ Ńōũń ƒōŕ ţĥē ƒĩŕśţ 5 ŷēàŕś ōƒ ţĥē ƥŕōĴēćţ (Ńōũń ĩďś #0, #10, #20, #30 àńď śō ōń) ŵĩĺĺ ƀē àũţōmàţĩćàĺĺŷ śēńţ ţō ţĥē Ńōũńďēŕ'ś mũĺţĩśĩĝ ţō ƀē vēśţēď àńď śĥàŕēď àmōńĝ ţĥē ƒōũńďĩńĝ mēmƀēŕś ōƒ ţĥē ƥŕōĴēćţ.",
+    Bid: 'ßĩď',
+    'Bid history': 'ßĩď ĥĩśţōŕŷ',
+    'Bid was placed successfully!': 'ßĩď ŵàś ƥĺàćēď śũććēśśƒũĺĺŷ!',
+    Bids: 'ßĩďś',
+    'Bids for': 'ßĩďś ƒōŕ',
+    'Bids will appear here': 'ßĩďś ŵĩĺĺ àƥƥēàŕ ĥēŕē',
+    Body: 'ßōďŷ',
+    Born: 'ßōŕń',
+    Canceled: 'Ćàńćēĺēď',
+    'Cast 1 vote against Prop {0}': ['Ćàśţ 1 vōţē àĝàĩńśţ Ƥŕōƥ ', ['0']],
+    'Cast 1 vote for Prop {0}': ['Ćàśţ 1 vōţē ƒōŕ Ƥŕōƥ ', ['0']],
+    'Cast {0} votes against Prop {1}': ['Ćàśţ ', ['0'], ' vōţēś àĝàĩńśţ Ƥŕōƥ ', ['1']],
+    'Cast {0} votes for Prop {1}': ['Ćàśţ ', ['0'], ' vōţēś ƒōŕ Ƥŕōƥ ', ['1']],
+    'Clear WalletConnect Data': 'Ćĺēàŕ ŴàĺĺēţĆōńńēćţ Ďàţà',
+    'Compound Governance': 'Ćōmƥōũńď Ĝōvēŕńàńćē',
+    Connect: 'Ćōńńēćţ',
+    'Connect a wallet to vote.': 'Ćōńńēćţ à ŵàĺĺēţ ţō vōţē.',
+    'Connect wallet to make a proposal.': 'Ćōńńēćţ ŵàĺĺēţ ţō màķē à ƥŕōƥōśàĺ.',
+    'Connect your wallet': 'Ćōńńēćţ ŷōũŕ ŵàĺĺēţ',
+    'Create Proposal': 'Ćŕēàţē Ƥŕōƥōśàĺ',
+    Cryptopunks: 'Ćŕŷƥţōƥũńķś',
+    'Current bid': 'Ćũŕŕēńţ ƀĩď',
+    DAO: 'ĎÀŌ',
+    'Daily Auctions': 'Ďàĩĺŷ Àũćţĩōńś',
+    Defeated: 'Ďēƒēàţēď',
+    Description: 'Ďēśćŕĩƥţĩōń',
+    Disconnect: 'Ďĩśćōńńēćţ',
+    Discord: 'Ďĩśćōŕď',
+    Discourse: 'Ďĩśćōũŕśē',
+    Docs: 'Ďōćś',
+    'EVERY DAY,': 'ĒVĒŔŶ ĎÀŶ,',
+    'Each time an auction is settled, the settlement transaction will also cause a new Noun to be minted and a new 24 hour auction to begin.':
+      'Ēàćĥ ţĩmē àń àũćţĩōń ĩś śēţţĺēď, ţĥē śēţţĺēmēńţ ţŕàńśàćţĩōń ŵĩĺĺ àĺśō ćàũśē à ńēŵ Ńōũń ţō ƀē mĩńţēď àńď à ńēŵ 24 ĥōũŕ àũćţĩōń ţō ƀēĝĩń.',
+    Ended: 'Ēńďēď',
+    Ends: 'Ēńďś',
+    'Ends on': 'Ēńďś ōń',
+    Error: 'Ēŕŕōŕ',
+    'Error fetching Noun birthday': 'Ēŕŕōŕ ƒēţćĥĩńĝ Ńōũń ƀĩŕţĥďàŷ',
+    Etherscan: 'Ēţĥēŕśćàń',
+    Execute: 'Ēxēćũţē',
+    Executed: 'Ēxēćũţēď',
+    Expired: 'Ēxƥĩŕēď',
+    Explore: 'Ēxƥĺōŕē',
+    'FOREVER.': 'ƑŌŔĒVĒŔ.',
+    'Failed to fetch': 'Ƒàĩĺēď ţō ƒēţćĥ',
+    'Failed to fetch Noun activity history': 'Ƒàĩĺēď ţō ƒēţćĥ Ńōũń àćţĩvĩţŷ ĥĩśţōŕŷ',
+    'Failed to fetch Noun info': 'Ƒàĩĺēď ţō ƒēţćĥ Ńōũń ĩńƒō',
+    For: 'Ƒōŕ',
+    Forums: 'Ƒōŕũmś',
+    Function: 'Ƒũńćţĩōń',
+    'Function (Optional)': 'Ƒũńćţĩōń (Ōƥţĩōńàĺ)',
+    'Generate Nouns': 'Ĝēńēŕàţē Ńōũńś',
+    Glasses: 'Ĝĺàśśēś',
+    Governance: 'Ĝōvēŕńàńćē',
+    'Governance ‘Slow Start’': 'Ĝōvēŕńàńćē ‘Śĺōŵ Śţàŕţ’',
+    Head: 'Ĥēàď',
+    'Held by': 'Ĥēĺď ƀŷ',
+    'Help mint the next Noun': 'Ĥēĺƥ mĩńţ ţĥē ńēxţ Ńōũń',
+    'In addition to the precautions taken by Compound Governance, Nounders have given themselves a special veto right to ensure that no malicious proposals can be passed while the Noun supply is low. This veto right will only be used if an obviously harmful governance proposal has been passed, and is intended as a last resort.':
+      'Ĩń àďďĩţĩōń ţō ţĥē ƥŕēćàũţĩōńś ţàķēń ƀŷ Ćōmƥōũńď Ĝōvēŕńàńćē, Ńōũńďēŕś ĥàvē ĝĩvēń ţĥēmśēĺvēś à śƥēćĩàĺ vēţō ŕĩĝĥţ ţō ēńśũŕē ţĥàţ ńō màĺĩćĩōũś ƥŕōƥōśàĺś ćàń ƀē ƥàśśēď ŵĥĩĺē ţĥē Ńōũń śũƥƥĺŷ ĩś ĺōŵ. Ţĥĩś vēţō ŕĩĝĥţ ŵĩĺĺ ōńĺŷ ƀē ũśēď ĩƒ àń ōƀvĩōũśĺŷ ĥàŕmƒũĺ ĝōvēŕńàńćē ƥŕōƥōśàĺ ĥàś ƀēēń ƥàśśēď, àńď ĩś ĩńţēńďēď àś à ĺàśţ ŕēśōŕţ.',
+    'Insufficient bid amount 🤏': 'Ĩńśũƒƒĩćĩēńţ ƀĩď àmōũńţ 🤏',
+    Language: 'Ĺàńĝũàĝē',
+    'Learn more below, or start creating Nouns off-chain using the {playgroundLink}.': [
+      'Ĺēàŕń mōŕē ƀēĺōŵ, ōŕ śţàŕţ ćŕēàţĩńĝ Ńōũńś ōƒƒ-ćĥàĩń ũśĩńĝ ţĥē ',
+      ['playgroundLink'],
+      '.',
+    ],
+    'Loading...': 'Ĺōàďĩńĝ...',
+    Next: 'Ńēxţ',
+    'No arguments required': 'Ńō àŕĝũmēńţś ŕēǫũĩŕēď',
+    'No explicit rules exist for attribute scarcity; all Nouns are equally rare.':
+      'Ńō ēxƥĺĩćĩţ ŕũĺēś ēxĩśţ ƒōŕ àţţŕĩƀũţē śćàŕćĩţŷ; àĺĺ Ńōũńś àŕē ēǫũàĺĺŷ ŕàŕē.',
+    'No proposals found': 'Ńō ƥŕōƥōśàĺś ƒōũńď',
+    None: 'Ńōńē',
+    Noun: 'Ńōũń',
+    'Noun Seeder Contract': 'Ńōũń Śēēďēŕ Ćōńţŕàćţ',
+    'Noun Traits': 'Ńōũń Ţŕàĩţś',
+    'Noun {0}': ['Ńōũń ', ['0']],
+    "Nounder distributions don't interfere with the cadence of 24 hour auctions. Nouns are sent directly to the Nounder's Multisig, and auctions continue on schedule with the next available Noun ID.":
+      "Ńōũńďēŕ ďĩśţŕĩƀũţĩōńś ďōń'ţ ĩńţēŕƒēŕē ŵĩţĥ ţĥē ćàďēńćē ōƒ 24 ĥōũŕ àũćţĩōńś. Ńōũńś àŕē śēńţ ďĩŕēćţĺŷ ţō ţĥē Ńōũńďēŕ'ś Mũĺţĩśĩĝ, àńď àũćţĩōńś ćōńţĩńũē ōń śćĥēďũĺē ŵĩţĥ ţĥē ńēxţ àvàĩĺàƀĺē Ńōũń ĨĎ.",
+    "Nounder's Reward": "Ńōũńďēŕ'ś Ŕēŵàŕď",
+    'Nounders receive rewards in the form of Nouns (10% of supply for first 5 years).':
+      'Ńōũńďēŕś ŕēćēĩvē ŕēŵàŕďś ĩń ţĥē ƒōŕm ōƒ Ńōũńś (10% ōƒ śũƥƥĺŷ ƒōŕ ƒĩŕśţ 5 ŷēàŕś).',
+    'Nounders will proveably revoke this veto right when they deem it safe to do so. This decision will be based on a healthy Noun distribution and a community that is engaged in the governance process.':
+      'Ńōũńďēŕś ŵĩĺĺ ƥŕōvēàƀĺŷ ŕēvōķē ţĥĩś vēţō ŕĩĝĥţ ŵĥēń ţĥēŷ ďēēm ĩţ śàƒē ţō ďō śō. Ţĥĩś ďēćĩśĩōń ŵĩĺĺ ƀē ƀàśēď ōń à ĥēàĺţĥŷ Ńōũń ďĩśţŕĩƀũţĩōń àńď à ćōmmũńĩţŷ ţĥàţ ĩś ēńĝàĝēď ĩń ţĥē ĝōvēŕńàńćē ƥŕōćēśś.',
+    "Nounders' Reward": "Ńōũńďēŕś' Ŕēŵàŕď",
+    Nouns: 'Ńōũńś',
+    'Nouns Auction House': 'Ńōũńś Àũćţĩōń Ĥōũśē',
+    'Nouns DAO': 'Ńōũńś ĎÀŌ',
+    'Nouns DAO uses a fork of {compoundGovLink}.': [
+      'Ńōũńś ĎÀŌ ũśēś à ƒōŕķ ōƒ ',
+      ['compoundGovLink'],
+      '.',
+    ],
+    'Nouns DAO utilizes a fork of {compoundGovLink} and is the main governing body of the Nouns ecosystem. The Nouns DAO treasury receives 100% of ETH proceeds from daily Noun auctions. Each Noun is an irrevocable member of Nouns DAO and entitled to one vote in all governance matters. Noun votes are non-transferable (if you sell your Noun the vote goes with it) but delegatable, which means you can assign your vote to someone else as long as you own your Noun.':
+      [
+        'Ńōũńś ĎÀŌ ũţĩĺĩźēś à ƒōŕķ ōƒ ',
+        ['compoundGovLink'],
+        ' àńď ĩś ţĥē màĩń ĝōvēŕńĩńĝ ƀōďŷ ōƒ ţĥē Ńōũńś ēćōśŷśţēm. Ţĥē Ńōũńś ĎÀŌ ţŕēàśũŕŷ ŕēćēĩvēś 100% ōƒ ĒŢĤ ƥŕōćēēďś ƒŕōm ďàĩĺŷ Ńōũń àũćţĩōńś. Ēàćĥ Ńōũń ĩś àń ĩŕŕēvōćàƀĺē mēmƀēŕ ōƒ Ńōũńś ĎÀŌ àńď ēńţĩţĺēď ţō ōńē vōţē ĩń àĺĺ ĝōvēŕńàńćē màţţēŕś. Ńōũń vōţēś àŕē ńōń-ţŕàńśƒēŕàƀĺē (ĩƒ ŷōũ śēĺĺ ŷōũŕ Ńōũń ţĥē vōţē ĝōēś ŵĩţĥ ĩţ) ƀũţ ďēĺēĝàţàƀĺē, ŵĥĩćĥ mēàńś ŷōũ ćàń àśśĩĝń ŷōũŕ vōţē ţō śōmēōńē ēĺśē àś ĺōńĝ àś ŷōũ ōŵń ŷōũŕ Ńōũń.',
+      ],
+    'Nouns Protocol': 'Ńōũńś Ƥŕōţōćōĺ',
+    'Nouns are an experimental attempt to improve the formation of on-chain avatar communities. While projects such as {cryptopunksLink} have attempted to bootstrap digital community and identity, Nouns attempt to bootstrap identity, community, governance, and a treasury that can be used by the community':
+      [
+        'Ńōũńś àŕē àń ēxƥēŕĩmēńţàĺ àţţēmƥţ ţō ĩmƥŕōvē ţĥē ƒōŕmàţĩōń ōƒ ōń-ćĥàĩń àvàţàŕ ćōmmũńĩţĩēś. Ŵĥĩĺē ƥŕōĴēćţś śũćĥ àś ',
+        ['cryptopunksLink'],
+        ' ĥàvē àţţēmƥţēď ţō ƀōōţśţŕàƥ ďĩĝĩţàĺ ćōmmũńĩţŷ àńď ĩďēńţĩţŷ, Ńōũńś àţţēmƥţ ţō ƀōōţśţŕàƥ ĩďēńţĩţŷ, ćōmmũńĩţŷ, ĝōvēŕńàńćē, àńď à ţŕēàśũŕŷ ţĥàţ ćàń ƀē ũśēď ƀŷ ţĥē ćōmmũńĩţŷ',
+      ],
+    "Nouns are generated randomly based Ethereum block hashes. There are no 'if' statements or other rules governing Noun trait scarcity, which makes all Nouns equally rare. As of this writing, Nouns are made up of:":
+      "Ńōũńś àŕē ĝēńēŕàţēď ŕàńďōmĺŷ ƀàśēď Ēţĥēŕēũm ƀĺōćķ ĥàśĥēś. Ţĥēŕē àŕē ńō 'ĩƒ' śţàţēmēńţś ōŕ ōţĥēŕ ŕũĺēś ĝōvēŕńĩńĝ Ńōũń ţŕàĩţ śćàŕćĩţŷ, ŵĥĩćĥ màķēś àĺĺ Ńōũńś ēǫũàĺĺŷ ŕàŕē. Àś ōƒ ţĥĩś ŵŕĩţĩńĝ, Ńōũńś àŕē màďē ũƥ ōƒ:",
+    'Nouns are stored directly on Ethereum and do not utilize pointers to other networks such as IPFS. This is possible because Noun parts are compressed and stored on-chain using a custom run-length encoding (RLE), which is a form of lossless compression.':
+      'Ńōũńś àŕē śţōŕēď ďĩŕēćţĺŷ ōń Ēţĥēŕēũm àńď ďō ńōţ ũţĩĺĩźē ƥōĩńţēŕś ţō ōţĥēŕ ńēţŵōŕķś śũćĥ àś ĨƤƑŚ. Ţĥĩś ĩś ƥōśśĩƀĺē ƀēćàũśē Ńōũń ƥàŕţś àŕē ćōmƥŕēśśēď àńď śţōŕēď ōń-ćĥàĩń ũśĩńĝ à ćũśţōm ŕũń-ĺēńĝţĥ ēńćōďĩńĝ (ŔĹĒ), ŵĥĩćĥ ĩś à ƒōŕm ōƒ ĺōśśĺēśś ćōmƥŕēśśĩōń.',
+    'Nouns artwork is in the {publicDomainLink}.': [
+      'Ńōũńś àŕţŵōŕķ ĩś ĩń ţĥē ',
+      ['publicDomainLink'],
+      '.',
+    ],
+    'Nouns govern <0>Nouns DAO</0>. Nouns can vote on proposals or delegate their vote to a third party. A minimum of <1>{nounsRequired} {0}</1> is required to submit proposals.':
+      [
+        'Ńōũńś ĝōvēŕń <0>Ńōũńś ĎÀŌ</0>. Ńōũńś ćàń vōţē ōń ƥŕōƥōśàĺś ōŕ ďēĺēĝàţē ţĥēĩŕ vōţē ţō à ţĥĩŕď ƥàŕţŷ. À mĩńĩmũm ōƒ <1>',
+        ['ńōũńśŔēǫũĩŕēď'],
+        ' ',
+        ['0'],
+        '</1> ĩś ŕēǫũĩŕēď ţō śũƀmĩţ ƥŕōƥōśàĺś.',
+      ],
+    'ONE NOUN,': 'ŌŃĒ ŃŌŨŃ,',
+    'On-Chain Artwork': 'Ōń-Ćĥàĩń Àŕţŵōŕķ',
+    'One Noun is equal to one vote.': 'Ōńē Ńōũń ĩś ēǫũàĺ ţō ōńē vōţē.',
+    'One Noun is trustlessly auctioned every 24 hours, forever.':
+      'Ōńē Ńōũń ĩś ţŕũśţĺēśśĺŷ àũćţĩōńēď ēvēŕŷ 24 ĥōũŕś, ƒōŕēvēŕ.',
+    'Only 32x32 PNG images are accepted': 'Ōńĺŷ 32x32 ƤŃĜ ĩmàĝēś àŕē àććēƥţēď',
+    'Only Nons you owned or were delegated to you before {0} are eligible to vote.': [
+      'Ōńĺŷ Ńōńś ŷōũ ōŵńēď ōŕ ŵēŕē ďēĺēĝàţēď ţō ŷōũ ƀēƒōŕē ',
+      ['0'],
+      ' àŕē ēĺĩĝĩƀĺē ţō vōţē.',
+    ],
+    Pending: 'Ƥēńďĩńĝ',
+    'Place bid': 'Ƥĺàćē ƀĩď',
+    Playground: 'Ƥĺàŷĝŕōũńď',
+    'Please place a bid higher than or equal to the minimum bid amount of {0} ETH': [
+      'Ƥĺēàśē ƥĺàćē à ƀĩď ĥĩĝĥēŕ ţĥàń ōŕ ēǫũàĺ ţō ţĥē mĩńĩmũm ƀĩď àmōũńţ ōƒ ',
+      ['0'],
+      ' ĒŢĤ',
+    ],
+    'Please try again.': 'Ƥĺēàśē ţŕŷ àĝàĩń.',
+    'Preview:': 'Ƥŕēvĩēŵ:',
+    Proposal: 'Ƥŕōƥōśàĺ',
+    'Proposal Created!': 'Ƥŕōƥōśàĺ Ćŕēàţēď!',
+    'Proposal Executed!': 'Ƥŕōƥōśàĺ Ēxēćũţēď!',
+    'Proposal Queued!': 'Ƥŕōƥōśàĺ Ǫũēũēď!',
+    'Proposal {0}': ['Ƥŕōƥōśàĺ ', ['0']],
+    Proposals: 'Ƥŕōƥōśàĺś',
+    'Proposals submitted by community members will appear here.':
+      'Ƥŕōƥōśàĺś śũƀmĩţţēď ƀŷ ćōmmũńĩţŷ mēmƀēŕś ŵĩĺĺ àƥƥēàŕ ĥēŕē.',
+    'Proposed Transactions': 'Ƥŕōƥōśēď Ţŕàńśàćţĩōńś',
+    Proposer: 'Ƥŕōƥōśēŕ',
+    Queue: 'Ǫũēũē',
+    Queued: 'Ǫũēũēď',
+    Quorum: 'Ǫũōŕũm',
+    'Reason (Optional)': 'Ŕēàśōń (Ōƥţĩōńàĺ)',
+    'Select Language': 'Śēĺēćţ Ĺàńĝũàĝē',
+    Settle: 'Śēţţĺē',
+    'Settle Auction': 'Śēţţĺē Àũćţĩōń',
+    'Settle manually': 'Śēţţĺē màńũàĺĺŷ',
+    'Settled auction successfully!': 'Śēţţĺēď àũćţĩōń śũććēśśƒũĺĺŷ!',
+    'Settlement of one auction kicks off the next.':
+      'Śēţţĺēmēńţ ōƒ ōńē àũćţĩōń ķĩćķś ōƒƒ ţĥē ńēxţ.',
+    'Show all {0} events': ['Śĥōŵ àĺĺ ', ['0'], ' ēvēńţś'],
+    'Show fewer': 'Śĥōŵ ƒēŵēŕ',
+    'Sign out': 'Śĩĝń ōũţ',
+    Snapshot: 'Śńàƥśĥōţ',
+    Starts: 'Śţàŕţś',
+    'Submit Proposal': 'Śũƀmĩţ Ƥŕōƥōśàĺ',
+    'Submit Vote': 'Śũƀmĩţ Vōţē',
+    'Submit vote': 'Śũƀmĩţ vōţē',
+    Succeeded: 'Śũććēēďēď',
+    Success: 'Śũććēśś',
+    Summary: 'Śũmmàŕŷ',
+    Switch: 'Śŵĩţćĥ',
+    'Switch wallet': 'Śŵĩţćĥ ŵàĺĺēţ',
+    'Taken at block': 'Ţàķēń àţ ƀĺōćķ',
+    'Thank you for voting.': 'Ţĥàńķ ŷōũ ƒōŕ vōţĩńĝ.',
+    'The Noun Seeder contract is used to determine Noun traits during the minting process. The seeder contract can be replaced to allow for future trait generation algorithm upgrades. Additionally, it can be locked by the Nouns DAO to prevent any future updates. Currently, Noun traits are determined using pseudo-random number generation:':
+      'Ţĥē Ńōũń Śēēďēŕ ćōńţŕàćţ ĩś ũśēď ţō ďēţēŕmĩńē Ńōũń ţŕàĩţś ďũŕĩńĝ ţĥē mĩńţĩńĝ ƥŕōćēśś. Ţĥē śēēďēŕ ćōńţŕàćţ ćàń ƀē ŕēƥĺàćēď ţō àĺĺōŵ ƒōŕ ƒũţũŕē ţŕàĩţ ĝēńēŕàţĩōń àĺĝōŕĩţĥm ũƥĝŕàďēś. Àďďĩţĩōńàĺĺŷ, ĩţ ćàń ƀē ĺōćķēď ƀŷ ţĥē Ńōũńś ĎÀŌ ţō ƥŕēvēńţ àńŷ ƒũţũŕē ũƥďàţēś. Ćũŕŕēńţĺŷ, Ńōũń ţŕàĩţś àŕē ďēţēŕmĩńēď ũśĩńĝ ƥśēũďō-ŕàńďōm ńũmƀēŕ ĝēńēŕàţĩōń:',
+    'The Nounders': 'Ţĥē Ńōũńďēŕś',
+    'The Nounders reward is intended as compensation for our pre and post-launch contributions to the project, and to help us participate meaningfully in governance as the project matures. Since there are 10 Nounders, after 5 years each Nounder could receive up to 1% of the Noun supply.':
+      'Ţĥē Ńōũńďēŕś ŕēŵàŕď ĩś ĩńţēńďēď àś ćōmƥēńśàţĩōń ƒōŕ ōũŕ ƥŕē àńď ƥōśţ-ĺàũńćĥ ćōńţŕĩƀũţĩōńś ţō ţĥē ƥŕōĴēćţ, àńď ţō ĥēĺƥ ũś ƥàŕţĩćĩƥàţē mēàńĩńĝƒũĺĺŷ ĩń ĝōvēŕńàńćē àś ţĥē ƥŕōĴēćţ màţũŕēś. Śĩńćē ţĥēŕē àŕē 10 Ńōũńďēŕś, àƒţēŕ 5 ŷēàŕś ēàćĥ Ńōũńďēŕ ćōũĺď ŕēćēĩvē ũƥ ţō 1% ōƒ ţĥē Ńōũń śũƥƥĺŷ.',
+    'The Nouns Auction Contract will act as a self-sufficient Noun generation and distribution mechanism, auctioning one Noun every 24 hours, forever. 100% of auction proceeds (ETH) are automatically deposited in the Nouns DAO treasury, where they are governed by Noun owners.':
+      'Ţĥē Ńōũńś Àũćţĩōń Ćōńţŕàćţ ŵĩĺĺ àćţ àś à śēĺƒ-śũƒƒĩćĩēńţ Ńōũń ĝēńēŕàţĩōń àńď ďĩśţŕĩƀũţĩōń mēćĥàńĩśm, àũćţĩōńĩńĝ ōńē Ńōũń ēvēŕŷ 24 ĥōũŕś, ƒōŕēvēŕ. 100% ōƒ àũćţĩōń ƥŕōćēēďś (ĒŢĤ) àŕē àũţōmàţĩćàĺĺŷ ďēƥōśĩţēď ĩń ţĥē Ńōũńś ĎÀŌ ţŕēàśũŕŷ, ŵĥēŕē ţĥēŷ àŕē ĝōvēŕńēď ƀŷ Ńōũń ōŵńēŕś.',
+    'The compressed parts are efficiently converted into a single base64 encoded SVG image on-chain. To accomplish this, each part is decoded into an intermediate format before being converted into a series of SVG rects using batched, on-chain string concatenation. Once the entire SVG has been generated, it is base64 encoded.':
+      'Ţĥē ćōmƥŕēśśēď ƥàŕţś àŕē ēƒƒĩćĩēńţĺŷ ćōńvēŕţēď ĩńţō à śĩńĝĺē ƀàśē64 ēńćōďēď ŚVĜ ĩmàĝē ōń-ćĥàĩń. Ţō àććōmƥĺĩśĥ ţĥĩś, ēàćĥ ƥàŕţ ĩś ďēćōďēď ĩńţō àń ĩńţēŕmēďĩàţē ƒōŕmàţ ƀēƒōŕē ƀēĩńĝ ćōńvēŕţēď ĩńţō à śēŕĩēś ōƒ ŚVĜ ŕēćţś ũśĩńĝ ƀàţćĥēď, ōń-ćĥàĩń śţŕĩńĝ ćōńćàţēńàţĩōń. Ōńćē ţĥē ēńţĩŕē ŚVĜ ĥàś ƀēēń ĝēńēŕàţēď, ĩţ ĩś ƀàśē64 ēńćōďēď.',
+    "The playground was built using the {nounsProtocolLink}. Noun's traits are determined by the Noun Seed. The seed was generated using {nounsAssetsLink} and rendered using the {nounsSDKLink}.":
+      [
+        'Ţĥē ƥĺàŷĝŕōũńď ŵàś ƀũĩĺţ ũśĩńĝ ţĥē ',
+        ['nounsProtocolLink'],
+        ". Ńōũń'ś ţŕàĩţś àŕē ďēţēŕmĩńēď ƀŷ ţĥē Ńōũń Śēēď. Ţĥē śēēď ŵàś ĝēńēŕàţēď ũśĩńĝ ",
+        ['nounsAssetsLink'],
+        ' àńď ŕēńďēŕēď ũśĩńĝ ţĥē ',
+        ['nounsSDKLink'],
+        '.',
+      ],
+    'The treasury is controlled exclusively by Nouns via governance.':
+      'Ţĥē ţŕēàśũŕŷ ĩś ćōńţŕōĺĺēď ēxćĺũśĩvēĺŷ ƀŷ Ńōũńś vĩà ĝōvēŕńàńćē.',
+    'There was an error voting for your account.': 'Ţĥēŕē ŵàś àń ēŕŕōŕ vōţĩńĝ ƒōŕ ŷōũŕ àććōũńţ.',
+    'This Noun has no activity, since it was just created. Check back soon!':
+      'Ţĥĩś Ńōũń ĥàś ńō àćţĩvĩţŷ, śĩńćē ĩţ ŵàś Ĵũśţ ćŕēàţēď. Ćĥēćķ ƀàćķ śōōń!',
+    'This treasury exists for <0>Nouns DAO</0> participants to allocate resources for the long-term growth and prosperity of the Nouns project.':
+      'Ţĥĩś ţŕēàśũŕŷ ēxĩśţś ƒōŕ <0>Ńōũńś ĎÀŌ</0> ƥàŕţĩćĩƥàńţś ţō àĺĺōćàţē ŕēśōũŕćēś ƒōŕ ţĥē ĺōńĝ-ţēŕm ĝŕōŵţĥ àńď ƥŕōśƥēŕĩţŷ ōƒ ţĥē Ńōũńś ƥŕōĴēćţ.',
+    Threshold: 'Ţĥŕēśĥōĺď',
+    'Time left': 'Ţĩmē ĺēƒţ',
+    'Tip:': 'Ţĩƥ:',
+    'Trait generation is not truly random. Traits can be predicted when minting a Noun on the pending block.':
+      'Ţŕàĩţ ĝēńēŕàţĩōń ĩś ńōţ ţŕũĺŷ ŕàńďōm. Ţŕàĩţś ćàń ƀē ƥŕēďĩćţēď ŵĥēń mĩńţĩńĝ à Ńōũń ōń ţĥē ƥēńďĩńĝ ƀĺōćķ.',
+    'Transaction Failed': 'Ţŕàńśàćţĩōń Ƒàĩĺēď',
+    'Transaction Successful!': 'Ţŕàńśàćţĩōń Śũććēśśƒũĺ!',
+    Treasury: 'Ţŕēàśũŕŷ',
+    Twitter: 'Ţŵĩţţēŕ',
+    Undetermined: 'Ũńďēţēŕmĩńēď',
+    Upload: 'Ũƥĺōàď',
+    'Upload Custom Trait': 'Ũƥĺōàď Ćũśţōm Ţŕàĩţ',
+    'User Already Voted': 'Ũśēŕ Àĺŕēàďŷ Vōţēď',
+    Value: 'Vàĺũē',
+    'Value in ETH (Optional)': 'Vàĺũē ĩń ĒŢĤ (Ōƥţĩōńàĺ)',
+    Vetoed: 'Vēţōēď',
+    'View all bids': 'Vĩēŵ àĺĺ ƀĩďś',
+    'Vote for the next Noun ⌐◧-◧': 'Vōţē ƒōŕ ţĥē ńēxţ Ńōũń ⌐◧-◧',
+    'Vote on Prop {0}': ['Vōţē ōń Ƥŕōƥ ', ['0']],
+    'Voted aginst': 'Vōţēď àĝĩńśţ',
+    'Voted for': 'Vōţēď ƒōŕ',
+    'WTF?': 'ŴŢƑ?',
+    'Waiting for': 'Ŵàĩţĩńĝ ƒōŕ',
+    'What now?': 'Ŵĥàţ ńōŵ?',
+    'While settlement is most heavily incentivized for the winning bidder, it can be triggered by anyone, allowing the system to trustlessly auction Nouns as long as Ethereum is operational and there are interested bidders.':
+      'Ŵĥĩĺē śēţţĺēmēńţ ĩś mōśţ ĥēàvĩĺŷ ĩńćēńţĩvĩźēď ƒōŕ ţĥē ŵĩńńĩńĝ ƀĩďďēŕ, ĩţ ćàń ƀē ţŕĩĝĝēŕēď ƀŷ àńŷōńē, àĺĺōŵĩńĝ ţĥē śŷśţēm ţō ţŕũśţĺēśśĺŷ àũćţĩōń Ńōũńś àś ĺōńĝ àś Ēţĥēŕēũm ĩś ōƥēŕàţĩōńàĺ àńď ţĥēŕē àŕē ĩńţēŕēśţēď ƀĩďďēŕś.',
+    Winner: 'Ŵĩńńēŕ',
+    'Winning bid': 'Ŵĩńńĩńĝ ƀĩď',
+    You: 'Ŷōũ',
+    'You <0>Abstained</0> from this proposal': 'Ŷōũ <0>Àƀśţàĩńēď</0> ƒŕōm ţĥĩś ƥŕōƥōśàĺ',
+    'You already have an active or pending proposal':
+      'Ŷōũ àĺŕēàďŷ ĥàvē àń àćţĩvē ōŕ ƥēńďĩńĝ ƥŕōƥōśàĺ',
+    'You can experiment with off-chain Noun generation at the {playgroundLink}.': [
+      'Ŷōũ ćàń ēxƥēŕĩmēńţ ŵĩţĥ ōƒƒ-ćĥàĩń Ńōũń ĝēńēŕàţĩōń àţ ţĥē ',
+      ['playgroundLink'],
+      '.',
+    ],
+    'You can settle manually in 1 minute': 'Ŷōũ ćàń śēţţĺē màńũàĺĺŷ ĩń 1 mĩńũţē',
+    'You can settle manually in {0} minutes': ['Ŷōũ ćàń śēţţĺē màńũàĺĺŷ ĩń ', ['0'], ' mĩńũţēś'],
+    "You don't have enough votes to submit a proposal":
+      "Ŷōũ ďōń'ţ ĥàvē ēńōũĝĥ vōţēś ţō śũƀmĩţ à ƥŕōƥōśàĺ",
+    'You have no Votes.': 'Ŷōũ ĥàvē ńō Vōţēś.',
+    'You have no votes.': 'Ŷōũ ĥàvē ńō vōţēś.',
+    'You must have {0} votes to submit a proposal': [
+      'Ŷōũ mũśţ ĥàvē ',
+      ['0'],
+      ' vōţēś ţō śũƀmĩţ à ƥŕōƥōśàĺ',
+    ],
+    'You voted <0>Against</0>this proposal': 'Ŷōũ vōţēď <0>Àĝàĩńśţ</0>ţĥĩś ƥŕōƥōśàĺ',
+    'You voted <0>For</0>this proposal': 'Ŷōũ vōţēď <0>Ƒōŕ</0>ţĥĩś ƥŕōƥōśàĺ',
+    "You've generated {0} years worth of Nouns": [
+      "Ŷōũ'vē ĝēńēŕàţēď ",
+      ['0'],
+      ' ŷēàŕś ŵōŕţĥ ōƒ Ńōũńś',
+    ],
+    "You've successfully voted on on prop {0}": ["Ŷōũ'vē śũććēśśƒũĺĺŷ vōţēď ōń ōń ƥŕōƥ ", ['0']],
+    'accessories (137)': 'àććēśśōŕĩēś (137)',
+    at: 'àţ',
+    'backgrounds (2)': 'ƀàćķĝŕōũńďś (2)',
+    'bodies (30)': 'ƀōďĩēś (30)',
+    'glasses (21)': 'ĝĺàśśēś (21)',
+    'heads (234)': 'ĥēàďś (234)',
+    'or more': 'ōŕ mōŕē',
+    'public domain': 'ƥũƀĺĩć ďōmàĩń',
+    '{0} votes': [['0'], ' vōţēś'],
+    '{0}<0>h</0>': [['0'], '<0>ĥ</0>'],
+    '{moveStateButtonAction} Proposal ⌐◧-◧': [['moveStateButtonAction'], ' Ƥŕōƥōśàĺ ⌐◧-◧'],
+  },
+};
diff --git a/packages/nouns-webapp/src/locales/pseudo.po b/packages/nouns-webapp/src/locales/pseudo.po
new file mode 100644
index 00000000..797cd633
--- /dev/null
+++ b/packages/nouns-webapp/src/locales/pseudo.po
@@ -0,0 +1,955 @@
+msgid ""
+msgstr ""
+"POT-Creation-Date: 2022-04-26 20:07-0700\n"
+"MIME-Version: 1.0\n"
+"Content-Type: text/plain; charset=utf-8\n"
+"Content-Transfer-Encoding: 8bit\n"
+"X-Generator: @lingui/cli\n"
+"Language: pseudo\n"
+"Project-Id-Version: \n"
+"Report-Msgid-Bugs-To: \n"
+"PO-Revision-Date: \n"
+"Last-Translator: \n"
+"Language-Team: \n"
+"Plural-Forms: \n"
+
+#: src/components/Documentation/index.tsx
+msgid "'Nounders' are the group of ten builders that initiated Nouns. Here are the Nounders:"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "100% of Noun auction proceeds are trustlessly sent to the treasury."
+msgstr ""
+
+#: src/pages/Nounders/index.tsx
+msgid "3.5 artists, 6.5 technologists"
+msgstr ""
+
+#: src/pages/NotFound/index.tsx
+msgid "404: This is not the person, place, or thing you're looking for..."
+msgstr ""
+
+#: src/components/AuctionTimer/index.tsx
+msgid "<0>{flooredMinutes}<1>m</1></0>"
+msgstr ""
+
+#: src/components/AuctionTimer/index.tsx
+msgid "<0>{flooredSeconds}<1>s</1></0>"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Absent for"
+msgstr ""
+
+#: src/components/VoteCard/index.tsx
+msgid "Abstain"
+msgstr ""
+
+#: src/components/VoteModal/index.tsx
+msgid "Abstain from voting on Prop {0}"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Abstained on"
+msgstr ""
+
+#: src/pages/Playground/index.tsx
+msgid "Accessory"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Active"
+msgstr ""
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "Activity"
+msgstr ""
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+msgid "Add Transaction"
+msgstr ""
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Add a Proposal Transaction"
+msgstr ""
+
+#: src/pages/CreateProposal/index.tsx
+msgid "Add one or more transactions and describe your proposal for the community. The proposal cannot modified after submission, so please verify all information before submitting. The voting period will begin after 2 1/3 days and last for 3 days."
+msgstr ""
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Address"
+msgstr ""
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Address (Callee or Recipient)"
+msgstr ""
+
+#: src/components/VoteCard/index.tsx
+msgid "Against"
+msgstr ""
+
+#: src/pages/Nounders/index.tsx
+msgid "All Noun auction proceeds are sent to the Nouns DAO. For this reason, we, the project's founders (‘Nounders’) have chosen to compensate ourselves with Nouns. Every 10th noun for the first 5 years of the project will be sent to our multisig (5/10), where it will be vested and distributed to individual Nounders."
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "All Nouns are members of Nouns DAO."
+msgstr ""
+
+#: src/pages/CreateProposal/index.tsx
+msgid "All Proposals"
+msgstr ""
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Arguments"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Artwork is generative and stored directly on-chain (not IPFS)."
+msgstr ""
+
+#: src/components/AuctionTimer/index.tsx
+#: src/components/AuctionTimer/index.tsx
+msgid "Auction ended"
+msgstr ""
+
+#: src/components/AuctionTimer/index.tsx
+msgid "Auction ends in"
+msgstr ""
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Back"
+msgstr ""
+
+#: src/pages/Playground/index.tsx
+msgid "Background"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Because 100% of Noun auction proceeds are sent to Nouns DAO, Nounders have chosen to compensate themselves with Nouns. Every 10th Noun for the first 5 years of the project (Noun ids #0, #10, #20, #30 and so on) will be automatically sent to the Nounder's multisig to be vested and shared among the founding members of the project."
+msgstr ""
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+msgid "Bid"
+msgstr ""
+
+#: src/components/NounInfoCard/index.tsx
+msgid "Bid history"
+msgstr ""
+
+#: src/components/Bid/index.tsx
+msgid "Bid was placed successfully!"
+msgstr ""
+
+#: src/components/NounInfoCard/index.tsx
+msgid "Bids"
+msgstr ""
+
+#: src/components/BidHistoryModal/index.tsx
+msgid "Bids for"
+msgstr ""
+
+#: src/components/BidHistoryModal/index.tsx
+msgid "Bids will appear here"
+msgstr ""
+
+#: src/pages/Playground/index.tsx
+msgid "Body"
+msgstr ""
+
+#: src/components/NounInfoRowBirthday/index.tsx
+msgid "Born"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Canceled"
+msgstr ""
+
+#: src/components/VoteModal/index.tsx
+msgid "Cast 1 vote against Prop {0}"
+msgstr ""
+
+#: src/components/VoteModal/index.tsx
+msgid "Cast 1 vote for Prop {0}"
+msgstr ""
+
+#: src/components/VoteModal/index.tsx
+msgid "Cast {0} votes against Prop {1}"
+msgstr ""
+
+#: src/components/VoteModal/index.tsx
+msgid "Cast {0} votes for Prop {1}"
+msgstr ""
+
+#: src/components/WalletConnectModal/index.tsx
+msgid "Clear WalletConnect Data"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Compound Governance"
+msgstr ""
+
+#: src/components/NavWallet/WalletConnectButton/index.tsx
+msgid "Connect"
+msgstr ""
+
+#: src/components/ProposalHeader/index.tsx
+msgid "Connect a wallet to vote."
+msgstr ""
+
+#: src/components/Proposals/index.tsx
+msgid "Connect wallet to make a proposal."
+msgstr ""
+
+#: src/components/WalletConnectModal/index.tsx
+msgid "Connect your wallet"
+msgstr ""
+
+#: src/components/CreateProposalButton/index.tsx
+#: src/pages/CreateProposal/index.tsx
+msgid "Create Proposal"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Cryptopunks"
+msgstr ""
+
+#: src/components/CurrentBid/index.tsx
+msgid "Current bid"
+msgstr ""
+
+#: src/components/NavBar/index.tsx
+msgid "DAO"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Daily Auctions"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Defeated"
+msgstr ""
+
+#: src/components/ProposalContent/index.tsx
+msgid "Description"
+msgstr ""
+
+#: src/components/NavWallet/index.tsx
+msgid "Disconnect"
+msgstr ""
+
+#: src/components/Footer/index.tsx
+msgid "Discord"
+msgstr ""
+
+#: src/components/NavBar/index.tsx
+msgid "Discourse"
+msgstr ""
+
+#: src/components/NavBar/index.tsx
+msgid "Docs"
+msgstr ""
+
+#: src/components/Banner/index.tsx
+msgid "EVERY DAY,"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Each time an auction is settled, the settlement transaction will also cause a new Noun to be minted and a new 24 hour auction to begin."
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "Ended"
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "Ends"
+msgstr ""
+
+#: src/components/AuctionTimer/index.tsx
+msgid "Ends on"
+msgstr ""
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/VoteModal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/Vote/index.tsx
+msgid "Error"
+msgstr ""
+
+#: src/components/NounInfoRowBirthday/index.tsx
+msgid "Error fetching Noun birthday"
+msgstr ""
+
+#: src/components/Footer/index.tsx
+#: src/components/NounInfoCard/index.tsx
+msgid "Etherscan"
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "Execute"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Executed"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Expired"
+msgstr ""
+
+#: src/pages/Playground/index.tsx
+msgid "Explore"
+msgstr ""
+
+#: src/components/Banner/index.tsx
+msgid "FOREVER."
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "Failed to fetch"
+msgstr ""
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "Failed to fetch Noun activity history"
+msgstr ""
+
+#: src/components/NounInfoRowHolder/index.tsx
+msgid "Failed to fetch Noun info"
+msgstr ""
+
+#: src/components/VoteCard/index.tsx
+msgid "For"
+msgstr ""
+
+#: src/components/Footer/index.tsx
+msgid "Forums"
+msgstr ""
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Function"
+msgstr ""
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Function (Optional)"
+msgstr ""
+
+#: src/pages/Playground/index.tsx
+msgid "Generate Nouns"
+msgstr ""
+
+#: src/pages/Playground/index.tsx
+msgid "Glasses"
+msgstr ""
+
+#: src/pages/Governance/index.tsx
+msgid "Governance"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Governance ‘Slow Start’"
+msgstr ""
+
+#: src/pages/Playground/index.tsx
+msgid "Head"
+msgstr ""
+
+#: src/components/NounInfoRowHolder/index.tsx
+msgid "Held by"
+msgstr ""
+
+#: src/components/AuctionActivity/index.tsx
+msgid "Help mint the next Noun"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "In addition to the precautions taken by Compound Governance, Nounders have given themselves a special veto right to ensure that no malicious proposals can be passed while the Noun supply is low. This veto right will only be used if an obviously harmful governance proposal has been passed, and is intended as a last resort."
+msgstr ""
+
+#: src/components/Bid/index.tsx
+msgid "Insufficient bid amount 🤏"
+msgstr ""
+
+#: src/components/NavLocaleSwitcher/index.tsx
+msgid "Language"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Learn more below, or start creating Nouns off-chain using the {playgroundLink}."
+msgstr ""
+
+#: src/components/NounInfoRowHolder/index.tsx
+msgid "Loading..."
+msgstr ""
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Next"
+msgstr ""
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "No arguments required"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "No explicit rules exist for attribute scarcity; all Nouns are equally rare."
+msgstr ""
+
+#: src/components/Proposals/index.tsx
+msgid "No proposals found"
+msgstr ""
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+#: src/components/ProposalTransactionFormModal/index.tsx
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "None"
+msgstr ""
+
+#: src/components/BidHistoryModal/index.tsx
+#: src/pages/Governance/index.tsx
+msgid "Noun"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Noun Seeder Contract"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Noun Traits"
+msgstr ""
+
+#: src/components/AuctionActivityNounTitle/index.tsx
+msgid "Noun {0}"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Nounder distributions don't interfere with the cadence of 24 hour auctions. Nouns are sent directly to the Nounder's Multisig, and auctions continue on schedule with the next available Noun ID."
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Nounder's Reward"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Nounders receive rewards in the form of Nouns (10% of supply for first 5 years)."
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Nounders will proveably revoke this veto right when they deem it safe to do so. This decision will be based on a healthy Noun distribution and a community that is engaged in the governance process."
+msgstr ""
+
+#: src/pages/Nounders/index.tsx
+msgid "Nounders' Reward"
+msgstr ""
+
+#: src/pages/Governance/index.tsx
+msgid "Nouns"
+msgstr ""
+
+#: src/components/NounInfoRowHolder/index.tsx
+msgid "Nouns Auction House"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+#: src/pages/Governance/index.tsx
+msgid "Nouns DAO"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns DAO uses a fork of {compoundGovLink}."
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns DAO utilizes a fork of {compoundGovLink} and is the main governing body of the Nouns ecosystem. The Nouns DAO treasury receives 100% of ETH proceeds from daily Noun auctions. Each Noun is an irrevocable member of Nouns DAO and entitled to one vote in all governance matters. Noun votes are non-transferable (if you sell your Noun the vote goes with it) but delegatable, which means you can assign your vote to someone else as long as you own your Noun."
+msgstr ""
+
+#: src/pages/Playground/index.tsx
+msgid "Nouns Protocol"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns are an experimental attempt to improve the formation of on-chain avatar communities. While projects such as {cryptopunksLink} have attempted to bootstrap digital community and identity, Nouns attempt to bootstrap identity, community, governance, and a treasury that can be used by the community"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns are generated randomly based Ethereum block hashes. There are no 'if' statements or other rules governing Noun trait scarcity, which makes all Nouns equally rare. As of this writing, Nouns are made up of:"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns are stored directly on Ethereum and do not utilize pointers to other networks such as IPFS. This is possible because Noun parts are compressed and stored on-chain using a custom run-length encoding (RLE), which is a form of lossless compression."
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Nouns artwork is in the {publicDomainLink}."
+msgstr ""
+
+#: src/pages/Governance/index.tsx
+msgid "Nouns govern <0>Nouns DAO</0>. Nouns can vote on proposals or delegate their vote to a third party. A minimum of <1>{nounsRequired} {0}</1> is required to submit proposals."
+msgstr ""
+
+#: src/components/Banner/index.tsx
+msgid "ONE NOUN,"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "On-Chain Artwork"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "One Noun is equal to one vote."
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "One Noun is trustlessly auctioned every 24 hours, forever."
+msgstr ""
+
+#: src/pages/Playground/index.tsx
+msgid "Only 32x32 PNG images are accepted"
+msgstr ""
+
+#: src/components/ProposalHeader/index.tsx
+msgid "Only Nons you owned or were delegated to you before {0} are eligible to vote."
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Pending"
+msgstr ""
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+msgid "Place bid"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+#: src/components/NavBar/index.tsx
+#: src/pages/Playground/index.tsx
+msgid "Playground"
+msgstr ""
+
+#: src/components/Bid/index.tsx
+msgid "Please place a bid higher than or equal to the minimum bid amount of {0} ETH"
+msgstr ""
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/VoteModal/index.tsx
+#: src/components/VoteModal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/Vote/index.tsx
+#: src/pages/Vote/index.tsx
+msgid "Please try again."
+msgstr ""
+
+#: src/components/ProposalEditor/index.tsx
+msgid "Preview:"
+msgstr ""
+
+#: src/components/ProposalEditor/index.tsx
+msgid "Proposal"
+msgstr ""
+
+#: src/pages/CreateProposal/index.tsx
+msgid "Proposal Created!"
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "Proposal Executed!"
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "Proposal Queued!"
+msgstr ""
+
+#: src/components/ProposalHeader/index.tsx
+msgid "Proposal {0}"
+msgstr ""
+
+#: src/components/Proposals/index.tsx
+msgid "Proposals"
+msgstr ""
+
+#: src/components/Proposals/index.tsx
+msgid "Proposals submitted by community members will appear here."
+msgstr ""
+
+#: src/components/ProposalContent/index.tsx
+msgid "Proposed Transactions"
+msgstr ""
+
+#: src/components/ProposalContent/index.tsx
+msgid "Proposer"
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "Queue"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Queued"
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "Quorum"
+msgstr ""
+
+#: src/components/VoteModal/index.tsx
+msgid "Reason (Optional)"
+msgstr ""
+
+#: src/components/LanguageSelectionModal/index.tsx
+msgid "Select Language"
+msgstr ""
+
+#: src/components/Bid/index.tsx
+msgid "Settle"
+msgstr ""
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+msgid "Settle Auction"
+msgstr ""
+
+#: src/components/SettleManuallyBtn/index.tsx
+msgid "Settle manually"
+msgstr ""
+
+#: src/components/Bid/index.tsx
+msgid "Settled auction successfully!"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Settlement of one auction kicks off the next."
+msgstr ""
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "Show all {0} events"
+msgstr ""
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "Show fewer"
+msgstr ""
+
+#: src/components/NavWallet/index.tsx
+msgid "Sign out"
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "Snapshot"
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "Starts"
+msgstr ""
+
+#: src/components/Proposals/index.tsx
+#: src/components/Proposals/index.tsx
+msgid "Submit Proposal"
+msgstr ""
+
+#: src/components/VoteModal/index.tsx
+msgid "Submit Vote"
+msgstr ""
+
+#: src/components/ProposalHeader/index.tsx
+msgid "Submit vote"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Succeeded"
+msgstr ""
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/Vote/index.tsx
+msgid "Success"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Summary"
+msgstr ""
+
+#: src/components/NavWallet/index.tsx
+msgid "Switch"
+msgstr ""
+
+#: src/components/NavWallet/index.tsx
+msgid "Switch wallet"
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "Taken at block"
+msgstr ""
+
+#: src/components/VoteModal/index.tsx
+msgid "Thank you for voting."
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "The Noun Seeder contract is used to determine Noun traits during the minting process. The seeder contract can be replaced to allow for future trait generation algorithm upgrades. Additionally, it can be locked by the Nouns DAO to prevent any future updates. Currently, Noun traits are determined using pseudo-random number generation:"
+msgstr ""
+
+#: src/pages/Nounders/index.tsx
+msgid "The Nounders"
+msgstr ""
+
+#: src/pages/Nounders/index.tsx
+msgid "The Nounders reward is intended as compensation for our pre and post-launch contributions to the project, and to help us participate meaningfully in governance as the project matures. Since there are 10 Nounders, after 5 years each Nounder could receive up to 1% of the Noun supply."
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "The Nouns Auction Contract will act as a self-sufficient Noun generation and distribution mechanism, auctioning one Noun every 24 hours, forever. 100% of auction proceeds (ETH) are automatically deposited in the Nouns DAO treasury, where they are governed by Noun owners."
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "The compressed parts are efficiently converted into a single base64 encoded SVG image on-chain. To accomplish this, each part is decoded into an intermediate format before being converted into a series of SVG rects using batched, on-chain string concatenation. Once the entire SVG has been generated, it is base64 encoded."
+msgstr ""
+
+#: src/pages/Playground/index.tsx
+msgid "The playground was built using the {nounsProtocolLink}. Noun's traits are determined by the Noun Seed. The seed was generated using {nounsAssetsLink} and rendered using the {nounsSDKLink}."
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "The treasury is controlled exclusively by Nouns via governance."
+msgstr ""
+
+#: src/components/VoteModal/index.tsx
+msgid "There was an error voting for your account."
+msgstr ""
+
+#: src/components/ProfileActivityFeed/index.tsx
+msgid "This Noun has no activity, since it was just created. Check back soon!"
+msgstr ""
+
+#: src/pages/Governance/index.tsx
+msgid "This treasury exists for <0>Nouns DAO</0> participants to allocate resources for the long-term growth and prosperity of the Nouns project."
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "Threshold"
+msgstr ""
+
+#: src/components/AuctionTimer/index.tsx
+msgid "Time left"
+msgstr ""
+
+#: src/pages/CreateProposal/index.tsx
+msgid "Tip:"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "Trait generation is not truly random. Traits can be predicted when minting a Noun on the pending block."
+msgstr ""
+
+#: src/components/Bid/index.tsx
+#: src/components/Bid/index.tsx
+#: src/components/VoteModal/index.tsx
+#: src/pages/CreateProposal/index.tsx
+#: src/pages/Vote/index.tsx
+msgid "Transaction Failed"
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "Transaction Successful!"
+msgstr ""
+
+#: src/components/NavBarTreasury/index.tsx
+#: src/pages/Governance/index.tsx
+msgid "Treasury"
+msgstr ""
+
+#: src/components/Footer/index.tsx
+msgid "Twitter"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Undetermined"
+msgstr ""
+
+#: src/pages/Playground/index.tsx
+msgid "Upload"
+msgstr ""
+
+#: src/pages/Playground/index.tsx
+msgid "Upload Custom Trait"
+msgstr ""
+
+#: src/components/VoteModal/index.tsx
+msgid "User Already Voted"
+msgstr ""
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Value"
+msgstr ""
+
+#: src/components/ProposalTransactionFormModal/index.tsx
+msgid "Value in ETH (Optional)"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+#: src/components/ProposalStatus/index.tsx
+msgid "Vetoed"
+msgstr ""
+
+#: src/components/BidHistoryBtn/index.tsx
+msgid "View all bids"
+msgstr ""
+
+#: src/components/Bid/index.tsx
+msgid "Vote for the next Noun ⌐◧-◧"
+msgstr ""
+
+#: src/components/VoteModal/index.tsx
+msgid "Vote on Prop {0}"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Voted aginst"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Voted for"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "WTF?"
+msgstr ""
+
+#: src/components/NounProfileVoteRow/index.tsx
+msgid "Waiting for"
+msgstr ""
+
+#: src/components/Winner/index.tsx
+#: src/components/Winner/index.tsx
+msgid "What now?"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "While settlement is most heavily incentivized for the winning bidder, it can be triggered by anyone, allowing the system to trustlessly auction Nouns as long as Ethereum is operational and there are interested bidders."
+msgstr ""
+
+#: src/components/Winner/index.tsx
+msgid "Winner"
+msgstr ""
+
+#: src/components/CurrentBid/index.tsx
+msgid "Winning bid"
+msgstr ""
+
+#: src/components/Winner/index.tsx
+msgid "You"
+msgstr ""
+
+#: src/components/ProposalHeader/index.tsx
+msgid "You <0>Abstained</0> from this proposal"
+msgstr ""
+
+#: src/components/CreateProposalButton/index.tsx
+msgid "You already have an active or pending proposal"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "You can experiment with off-chain Noun generation at the {playgroundLink}."
+msgstr ""
+
+#: src/components/SettleManuallyBtn/index.tsx
+msgid "You can settle manually in 1 minute"
+msgstr ""
+
+#: src/components/SettleManuallyBtn/index.tsx
+msgid "You can settle manually in {0} minutes"
+msgstr ""
+
+#: src/components/CreateProposalButton/index.tsx
+msgid "You don't have enough votes to submit a proposal"
+msgstr ""
+
+#: src/components/Proposals/index.tsx
+msgid "You have no Votes."
+msgstr ""
+
+#: src/components/ProposalHeader/index.tsx
+msgid "You have no votes."
+msgstr ""
+
+#: src/components/CreateProposalButton/index.tsx
+msgid "You must have {0} votes to submit a proposal"
+msgstr ""
+
+#: src/components/ProposalHeader/index.tsx
+msgid "You voted <0>Against</0>this proposal"
+msgstr ""
+
+#: src/components/ProposalHeader/index.tsx
+msgid "You voted <0>For</0>this proposal"
+msgstr ""
+
+#: src/pages/Playground/index.tsx
+msgid "You've generated {0} years worth of Nouns"
+msgstr ""
+
+#: src/components/VoteModal/index.tsx
+msgid "You've successfully voted on on prop {0}"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "accessories (137)"
+msgstr ""
+
+#: src/components/AuctionTimer/index.tsx
+msgid "at"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "backgrounds (2)"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "bodies (30)"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "glasses (21)"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "heads (234)"
+msgstr ""
+
+#: src/components/Bid/index.tsx
+msgid "or more"
+msgstr ""
+
+#: src/components/Documentation/index.tsx
+msgid "public domain"
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "{0} votes"
+msgstr ""
+
+#: src/components/AuctionTimer/index.tsx
+msgid "{0}<0>h</0>"
+msgstr ""
+
+#: src/pages/Vote/index.tsx
+msgid "{moveStateButtonAction} Proposal ⌐◧-◧"
+msgstr ""
diff --git a/packages/nouns-webapp/src/pages/CreateProposal/index.tsx b/packages/nouns-webapp/src/pages/CreateProposal/index.tsx
index 88554650..b97900e4 100644
--- a/packages/nouns-webapp/src/pages/CreateProposal/index.tsx
+++ b/packages/nouns-webapp/src/pages/CreateProposal/index.tsx
@@ -20,6 +20,7 @@ import ProposalTransactionFormModal from '../../components/ProposalTransactionFo
 import { withStepProgress } from 'react-stepz';
 import { useCallback, useEffect, useMemo, useState } from 'react';
 import { useAppDispatch } from '../../hooks';
+import { Trans } from '@lingui/macro';
 
 const CreateProposalPage = () => {
   const { account } = useEthers();
@@ -106,24 +107,24 @@ const CreateProposalPage = () => {
         break;
       case 'Success':
         setModal({
-          title: 'Success',
-          message: 'Proposal Created!',
+          title: <Trans>Success</Trans>,
+          message: <Trans>Proposal Created!</Trans>,
           show: true,
         });
         setProposePending(false);
         break;
       case 'Fail':
         setModal({
-          title: 'Transaction Failed',
-          message: proposeState?.errorMessage || 'Please try again.',
+          title: <Trans>Transaction Failed</Trans>,
+          message: proposeState?.errorMessage || <Trans>Please try again.</Trans>,
           show: true,
         });
         setProposePending(false);
         break;
       case 'Exception':
         setModal({
-          title: 'Error',
-          message: proposeState?.errorMessage || 'Please try again.',
+          title: <Trans>Error</Trans>,
+          message: proposeState?.errorMessage || <Trans>Please try again.</Trans>,
           show: true,
         });
         setProposePending(false);
@@ -139,14 +140,24 @@ const CreateProposalPage = () => {
         onProposalTransactionAdded={handleAddProposalAction}
       />
       <Col lg={{ span: 8, offset: 2 }}>
-        <Link to="/vote">← All Proposals</Link>
+        <Link to="/vote">
+          ← <Trans>All Proposals</Trans>
+        </Link>
       </Col>
       <Col lg={{ span: 8, offset: 2 }} className={classes.createProposalForm}>
-        <h3 className={classes.heading}>Create Proposal</h3>
+        <h3 className={classes.heading}>
+          <Trans>Create Proposal</Trans>
+        </h3>
         <Alert variant="secondary" className={classes.voterIneligibleAlert}>
-          <b>Tip</b>: Add one or more transactions and describe your proposal for the community. The
-          proposal cannot modified after submission, so please verify all information before
-          submitting. The voting period will begin after 2 1/3 days and last for 3 days.
+          <b>
+            <Trans>Tip:</Trans>
+          </b>
+          :
+          <Trans>
+            Add one or more transactions and describe your proposal for the community. The proposal
+            cannot modified after submission, so please verify all information before submitting.
+            The voting period will begin after 2 1/3 days and last for 3 days.
+          </Trans>
         </Alert>
         <div className="d-grid">
           <Button
@@ -154,7 +165,7 @@ const CreateProposalPage = () => {
             variant="dark"
             onClick={() => setShowTransactionFormModal(true)}
           >
-            Add Transaction
+            <Trans>Add Transaction</Trans>
           </Button>
         </div>
         <ProposalTransactions
diff --git a/packages/nouns-webapp/src/pages/Governance/index.tsx b/packages/nouns-webapp/src/pages/Governance/index.tsx
index 7cd2f98a..7b7a5ea8 100644
--- a/packages/nouns-webapp/src/pages/Governance/index.tsx
+++ b/packages/nouns-webapp/src/pages/Governance/index.tsx
@@ -6,58 +6,75 @@ import classes from './Governance.module.css';
 import { utils } from 'ethers/lib/ethers';
 import clsx from 'clsx';
 import { useTreasuryBalance, useTreasuryUSDValue } from '../../hooks/useTreasuryBalance';
+import { Trans } from '@lingui/macro';
+import { i18n } from '@lingui/core';
 
 const GovernancePage = () => {
   const { data: proposals } = useAllProposals();
   const threshold = useProposalThreshold();
   const nounsRequired = threshold !== undefined ? threshold + 1 : '...';
-  const nounThresholdCopy = `${nounsRequired} ${threshold === 0 ? 'Noun' : 'Nouns'}`;
 
   const treasuryBalance = useTreasuryBalance();
   const treasuryBalanceUSD = useTreasuryUSDValue();
 
+  // Note: We have to extract this copy out of the <span> otherwise the Lingui macro gets confused
+  const nounSingular = <Trans>Noun</Trans>;
+  const nounPlural = <Trans>Nouns</Trans>;
+
   return (
     <Section fullWidth={false} className={classes.section}>
       <Col lg={10} className={classes.wrapper}>
         <Row className={classes.headerRow}>
-          <span>Governance</span>
-          <h1>Nouns DAO</h1>
+          <span>
+            <Trans>Governance</Trans>
+          </span>
+          <h1>
+            <Trans>Nouns DAO</Trans>
+          </h1>
         </Row>
         <p className={classes.subheading}>
-          Nouns govern <span className={classes.boldText}>Nouns DAO</span>. Nouns can vote on
-          proposals or delegate their vote to a third party. A minimum of{' '}
-          <span className={classes.boldText}>{nounThresholdCopy}</span> is required to submit
-          proposals.
+          <Trans>
+            Nouns govern <span className={classes.boldText}>Nouns DAO</span>. Nouns can vote on
+            proposals or delegate their vote to a third party. A minimum of{' '}
+            <span className={classes.boldText}>
+              {nounsRequired} {threshold === 0 ? nounSingular : nounPlural}
+            </span>{' '}
+            is required to submit proposals.
+          </Trans>
         </p>
 
         <Row className={classes.treasuryInfoCard}>
           <Col lg={8} className={classes.treasuryAmtWrapper}>
             <Row className={classes.headerRow}>
-              <span>Treasury</span>
+              <span>
+                <Trans>Treasury</Trans>
+              </span>
             </Row>
             <Row>
               <Col className={clsx(classes.ethTreasuryAmt)} lg={3}>
                 <h1 className={classes.ethSymbol}>Ξ</h1>
                 <h1>
                   {treasuryBalance &&
-                    Number(Number(utils.formatEther(treasuryBalance)).toFixed(0)).toLocaleString(
-                      'en-US',
-                    )}
+                    i18n.number(Number(Number(utils.formatEther(treasuryBalance)).toFixed(0)))}
                 </h1>
               </Col>
               <Col className={classes.usdTreasuryAmt}>
                 <h1 className={classes.usdBalance}>
-                  ${' '}
                   {treasuryBalanceUSD &&
-                    Number(treasuryBalanceUSD.toFixed(0)).toLocaleString('en-US')}
+                    i18n.number(Number(treasuryBalanceUSD.toFixed(0)), {
+                      style: 'currency',
+                      currency: 'USD',
+                    })}
                 </h1>
               </Col>
             </Row>
           </Col>
           <Col className={classes.treasuryInfoText}>
-            This treasury exists for <span className={classes.boldText}>Nouns DAO</span>{' '}
-            participants to allocate resources for the long-term growth and prosperity of the Nouns
-            project.
+            <Trans>
+              This treasury exists for <span className={classes.boldText}>Nouns DAO</span>{' '}
+              participants to allocate resources for the long-term growth and prosperity of the
+              Nouns project.
+            </Trans>
           </Col>
         </Row>
         <Proposals proposals={proposals} />
diff --git a/packages/nouns-webapp/src/pages/NotFound/index.tsx b/packages/nouns-webapp/src/pages/NotFound/index.tsx
index ff0e9e66..ee515280 100644
--- a/packages/nouns-webapp/src/pages/NotFound/index.tsx
+++ b/packages/nouns-webapp/src/pages/NotFound/index.tsx
@@ -2,6 +2,7 @@ import { Col, Image } from 'react-bootstrap';
 import Section from '../../layout/Section';
 import classes from './NotFound.module.css';
 import _404img from '../../assets/404noun.png';
+import { Trans } from '@lingui/macro';
 
 const NotFoundPage = () => {
   return (
@@ -11,7 +12,7 @@ const NotFoundPage = () => {
       </Col>
       <Col lg={8}>
         <h1 className={classes.heading}>
-          404: This is not the person, place, or thing you're looking for...
+          <Trans>404: This is not the person, place, or thing you're looking for...</Trans>
         </h1>
       </Col>
     </Section>
diff --git a/packages/nouns-webapp/src/pages/Nounders/index.tsx b/packages/nouns-webapp/src/pages/Nounders/index.tsx
index 04015513..539b9c74 100644
--- a/packages/nouns-webapp/src/pages/Nounders/index.tsx
+++ b/packages/nouns-webapp/src/pages/Nounders/index.tsx
@@ -12,6 +12,7 @@ import pfpSolimander from '../../assets/nounder-pfps/solimander.png';
 import pfpGremplin from '../../assets/nounder-pfps/gremplin.png';
 import pfpTimpers from '../../assets/nounder-pfps/timpers.png';
 import pfpVapeape from '../../assets/nounder-pfps/vapeape.png';
+import { Trans } from '@lingui/macro';
 
 const bios = [
   {
@@ -129,24 +130,34 @@ const NoundersPage = () => {
   return (
     <Section fullWidth={true} className={classes.noundersPage}>
       <Col lg={{ span: 6, offset: 3 }}>
-        <h2 style={{ marginBottom: '2rem' }}>The Nounders</h2>
-        <h3 style={{ marginBottom: '2rem' }}>3.5 artists, 6.5 technologists</h3>
+        <h2 style={{ marginBottom: '2rem' }}>
+          <Trans>The Nounders</Trans>
+        </h2>
+        <h3 style={{ marginBottom: '2rem' }}>
+          <Trans>3.5 artists, 6.5 technologists</Trans>
+        </h3>
         <Row style={{ marginBottom: '0rem' }}>
           <BioCards min={0} max={5} />
           <BioCards min={5} max={10} />
         </Row>
-        <h3>Nounders' Reward</h3>
+        <h3>
+          <Trans>Nounders' Reward</Trans>
+        </h3>
         <p style={{ textAlign: 'justify' }}>
-          All Noun auction proceeds are sent to the Nouns DAO. For this reason, we, the project's
-          founders (‘Nounders’) have chosen to compensate ourselves with Nouns. Every 10th noun for
-          the first 5 years of the project will be sent to our multisig (5/10), where it will be
-          vested and distributed to individual Nounders.
+          <Trans>
+            All Noun auction proceeds are sent to the Nouns DAO. For this reason, we, the project's
+            founders (‘Nounders’) have chosen to compensate ourselves with Nouns. Every 10th noun
+            for the first 5 years of the project will be sent to our multisig (5/10), where it will
+            be vested and distributed to individual Nounders.
+          </Trans>
         </p>
         <p style={{ textAlign: 'justify' }}>
-          The Nounders reward is intended as compensation for our pre and post-launch contributions
-          to the project, and to help us participate meaningfully in governance as the project
-          matures. Since there are 10 Nounders, after 5 years each Nounder could receive up to 1% of
-          the Noun supply.
+          <Trans>
+            The Nounders reward is intended as compensation for our pre and post-launch
+            contributions to the project, and to help us participate meaningfully in governance as
+            the project matures. Since there are 10 Nounders, after 5 years each Nounder could
+            receive up to 1% of the Noun supply.
+          </Trans>
         </p>
       </Col>
     </Section>
diff --git a/packages/nouns-webapp/src/pages/Playground/index.tsx b/packages/nouns-webapp/src/pages/Playground/index.tsx
index 03a135a7..d70afc7b 100644
--- a/packages/nouns-webapp/src/pages/Playground/index.tsx
+++ b/packages/nouns-webapp/src/pages/Playground/index.tsx
@@ -10,7 +10,7 @@ import {
   Popover,
 } from 'react-bootstrap';
 import classes from './Playground.module.css';
-import React, { ChangeEvent, useEffect, useRef, useState } from 'react';
+import React, { ChangeEvent, ReactNode, useEffect, useRef, useState } from 'react';
 import Link from '../../components/Link';
 import { ImageData, getNounData, getRandomNounSeed } from '@nouns/assets';
 import { buildSVG, EncodedImage, PNGCollectionEncoder } from '@nouns/sdk';
@@ -18,6 +18,8 @@ import InfoIcon from '../../assets/icons/Info.svg';
 import Noun from '../../components/Noun';
 import NounModal from './NounModal';
 import { PNG } from 'pngjs';
+import { Trans } from '@lingui/macro';
+import { i18n } from '@lingui/core';
 
 interface Trait {
   title: string;
@@ -32,7 +34,7 @@ interface PendingCustomTrait {
 
 const nounsProtocolLink = (
   <Link
-    text="Nouns Protocol"
+    text={<Trans>Nouns Protocol</Trans>}
     url="https://www.notion.so/Noun-Protocol-32e4f0bf74fe433e927e2ea35e52a507"
     leavesPage={true}
   />
@@ -70,6 +72,18 @@ const parseTraitName = (partName: string): string =>
 
 const capitalizeFirstLetter = (s: string): string => s.charAt(0).toUpperCase() + s.slice(1);
 
+const traitKeyToLocalizedTraitKeyFirstLetterCapitalized = (s: string): ReactNode => {
+  const traitMap = new Map([
+    ['background', <Trans>Background</Trans>],
+    ['body', <Trans>Body</Trans>],
+    ['accessory', <Trans>Accessory</Trans>],
+    ['head', <Trans>Head</Trans>],
+    ['glasses', <Trans>Glasses</Trans>],
+  ]);
+
+  return traitMap.get(s);
+};
+
 const Playground: React.FC = () => {
   const [nounSvgs, setNounSvgs] = useState<string[]>();
   const [traits, setTraits] = useState<Trait[]>();
@@ -248,12 +262,18 @@ const Playground: React.FC = () => {
       <Container fluid="lg">
         <Row>
           <Col lg={10} className={classes.headerRow}>
-            <span>Explore</span>
-            <h1>Playground</h1>
+            <span>
+              <Trans>Explore</Trans>
+            </span>
+            <h1>
+              <Trans>Playground</Trans>
+            </h1>
             <p>
-              The playground was built using the {nounsProtocolLink}. Noun's traits are determined
-              by the Noun Seed. The seed was generated using {nounsAssetsLink} and rendered using
-              the {nounsSDKLink}.
+              <Trans>
+                The playground was built using the {nounsProtocolLink}. Noun's traits are determined
+                by the Noun Seed. The seed was generated using {nounsAssetsLink} and rendered using
+                the {nounsSDKLink}.
+              </Trans>
             </p>
           </Col>
         </Row>
@@ -266,7 +286,7 @@ const Playground: React.FC = () => {
                 }}
                 className={classes.primaryBtn}
               >
-                Generate Nouns
+                <Trans>Generate Nouns</Trans>
               </Button>
             </Col>
             <Row>
@@ -277,7 +297,7 @@ const Playground: React.FC = () => {
                       <Form className={classes.traitForm}>
                         <FloatingLabel
                           controlId="floatingSelect"
-                          label={capitalizeFirstLetter(trait.title)}
+                          label={traitKeyToLocalizedTraitKeyFirstLetterCapitalized(trait.title)}
                           key={index}
                           className={classes.floatingLabel}
                         >
@@ -303,13 +323,15 @@ const Playground: React.FC = () => {
                 })}
             </Row>
             <label style={{ margin: '1rem 0 .25rem 0' }} htmlFor="custom-trait-upload">
-              Upload Custom Trait
+              <Trans>Upload Custom Trait</Trans>
               <OverlayTrigger
                 trigger="hover"
                 placement="top"
                 overlay={
                   <Popover>
-                    <div style={{ padding: '0.25rem' }}>Only 32x32 PNG images are accepted</div>
+                    <div style={{ padding: '0.25rem' }}>
+                      <Trans>Only 32x32 PNG images are accepted</Trans>
+                    </div>
                   </Popover>
                 }
               >
@@ -346,13 +368,16 @@ const Playground: React.FC = () => {
                   </Form.Select>
                 </FloatingLabel>
                 <Button onClick={() => uploadCustomTrait()} className={classes.primaryBtn}>
-                  Upload
+                  <Trans>Upload</Trans>
                 </Button>
               </>
             )}
             <p className={classes.nounYearsFooter}>
-              You've generated {nounSvgs ? (nounSvgs.length / 365).toFixed(2) : '0'} years worth of
-              Nouns
+              <Trans>
+                You've generated{' '}
+                {i18n.number(parseInt(nounSvgs ? (nounSvgs.length / 365).toFixed(2) : '0'))} years
+                worth of Nouns
+              </Trans>
             </p>
           </Col>
           <Col lg={9}>
diff --git a/packages/nouns-webapp/src/pages/Vote/index.tsx b/packages/nouns-webapp/src/pages/Vote/index.tsx
index 3d487e10..4737d4ba 100644
--- a/packages/nouns-webapp/src/pages/Vote/index.tsx
+++ b/packages/nouns-webapp/src/pages/Vote/index.tsx
@@ -30,6 +30,9 @@ import {
   Delegates,
 } from '../../wrappers/subgraph';
 import { getNounVotes } from '../../utils/getNounsVotes';
+import { Trans } from '@lingui/macro';
+import { i18n } from '@lingui/core';
+import { ReactNode } from 'react-markdown/lib/react-markdown';
 
 dayjs.extend(utc);
 dayjs.extend(timezone);
@@ -99,12 +102,12 @@ const VotePage = ({
 
   const startOrEndTimeCopy = () => {
     if (startDate?.isBefore(now) && endDate?.isAfter(now)) {
-      return 'Ends';
+      return <Trans>Ends</Trans>;
     }
     if (endDate?.isBefore(now)) {
-      return 'Ended';
+      return <Trans>Ended</Trans>;
     }
-    return 'Starts';
+    return <Trans>Starts</Trans>;
   };
 
   const startOrEndTimeTime = () => {
@@ -114,7 +117,7 @@ const VotePage = ({
     return endDate;
   };
 
-  const moveStateButtonAction = hasSucceeded ? 'Queue' : 'Execute';
+  const moveStateButtonAction = hasSucceeded ? <Trans>Queue</Trans> : <Trans>Execute</Trans>;
   const moveStateAction = (() => {
     if (hasSucceeded) {
       return () => queueProposal(proposal?.id);
@@ -125,9 +128,9 @@ const VotePage = ({
   const onTransactionStateChange = useCallback(
     (
       tx: TransactionStatus,
-      successMessage?: string,
+      successMessage?: ReactNode,
       setPending?: (isPending: boolean) => void,
-      getErrorMessage?: (error?: string) => string | undefined,
+      getErrorMessage?: (error?: string) => ReactNode | undefined,
       onFinalState?: () => void,
     ) => {
       switch (tx.status) {
@@ -139,8 +142,8 @@ const VotePage = ({
           break;
         case 'Success':
           setModal({
-            title: 'Success',
-            message: successMessage || 'Transaction Successful!',
+            title: <Trans>Success</Trans>,
+            message: successMessage || <Trans>Transaction Successful!</Trans>,
             show: true,
           });
           setPending?.(false);
@@ -148,8 +151,8 @@ const VotePage = ({
           break;
         case 'Fail':
           setModal({
-            title: 'Transaction Failed',
-            message: tx?.errorMessage || 'Please try again.',
+            title: <Trans>Transaction Failed</Trans>,
+            message: tx?.errorMessage || <Trans>Please try again.</Trans>,
             show: true,
           });
           setPending?.(false);
@@ -157,8 +160,8 @@ const VotePage = ({
           break;
         case 'Exception':
           setModal({
-            title: 'Error',
-            message: getErrorMessage?.(tx?.errorMessage) || 'Please try again.',
+            title: <Trans>Error</Trans>,
+            message: getErrorMessage?.(tx?.errorMessage) || <Trans>Please try again.</Trans>,
             show: true,
           });
           setPending?.(false);
@@ -170,12 +173,22 @@ const VotePage = ({
   );
 
   useEffect(
-    () => onTransactionStateChange(queueProposalState, 'Proposal Queued!', setQueuePending),
+    () =>
+      onTransactionStateChange(
+        queueProposalState,
+        <Trans>Proposal Queued!</Trans>,
+        setQueuePending,
+      ),
     [queueProposalState, onTransactionStateChange, setModal],
   );
 
   useEffect(
-    () => onTransactionStateChange(executeProposalState, 'Proposal Executed!', setExecutePending),
+    () =>
+      onTransactionStateChange(
+        executeProposalState,
+        <Trans>Proposal Executed!</Trans>,
+        setExecutePending,
+      ),
     [executeProposalState, onTransactionStateChange, setModal],
   );
 
@@ -226,7 +239,7 @@ const VotePage = ({
   }
 
   if (error) {
-    return <>Failed to fetch</>;
+    return <Trans>Failed to fetch</Trans>;
   }
 
   const isWalletConnected = !(activeAccount === undefined);
@@ -267,7 +280,7 @@ const VotePage = ({
                 {isQueuePending || isExecutePending ? (
                   <Spinner animation="border" />
                 ) : (
-                  `${moveStateButtonAction} Proposal ⌐◧-◧`
+                  <Trans>{moveStateButtonAction} Proposal ⌐◧-◧</Trans>
                 )}
               </Button>
             </Col>
@@ -301,11 +314,17 @@ const VotePage = ({
               <Card.Body className="p-2">
                 <Row className={classes.voteMetadataRow}>
                   <Col className={classes.voteMetadataRowTitle}>
-                    <h1>Threshold</h1>
+                    <h1>
+                      <Trans>Threshold</Trans>
+                    </h1>
                   </Col>
                   <Col className={classes.thresholdInfo}>
-                    <span>Quorum</span>
-                    <h3>{proposal.quorumVotes} votes</h3>
+                    <span>
+                      <Trans>Quorum</Trans>
+                    </span>
+                    <h3>
+                      <Trans>{i18n.number(proposal.quorumVotes)} votes</Trans>
+                    </h3>
                   </Col>
                 </Row>
               </Card.Body>
@@ -319,8 +338,18 @@ const VotePage = ({
                     <h1>{startOrEndTimeCopy()}</h1>
                   </Col>
                   <Col className={classes.voteMetadataTime}>
-                    <span>{startOrEndTimeTime() && startOrEndTimeTime()?.format('h:mm A z')}</span>
-                    <h3>{startOrEndTimeTime() && startOrEndTimeTime()?.format('MMM D, YYYY')}</h3>
+                    <span>
+                      {startOrEndTimeTime() &&
+                        i18n.date(new Date(startOrEndTimeTime()?.toISOString() || 0), {
+                          timeStyle: 'long',
+                        })}
+                    </span>
+                    <h3>
+                      {startOrEndTimeTime() &&
+                        i18n.date(new Date(startOrEndTimeTime()?.toISOString() || 0), {
+                          dateStyle: 'long',
+                        })}
+                    </h3>
                   </Col>
                 </Row>
               </Card.Body>
@@ -331,10 +360,14 @@ const VotePage = ({
               <Card.Body className="p-2">
                 <Row className={classes.voteMetadataRow}>
                   <Col className={classes.voteMetadataRowTitle}>
-                    <h1>Snapshot</h1>
+                    <h1>
+                      <Trans>Snapshot</Trans>
+                    </h1>
                   </Col>
                   <Col className={classes.snapshotBlock}>
-                    <span>Taken at block</span>
+                    <span>
+                      <Trans>Taken at block</Trans>
+                    </span>
                     <h3>{proposal.createdBlock}</h3>
                   </Col>
                 </Row>
diff --git a/packages/nouns-webapp/src/state/slices/application.ts b/packages/nouns-webapp/src/state/slices/application.ts
index c27908ee..8bbff2f8 100644
--- a/packages/nouns-webapp/src/state/slices/application.ts
+++ b/packages/nouns-webapp/src/state/slices/application.ts
@@ -1,10 +1,11 @@
 import { createSlice, PayloadAction } from '@reduxjs/toolkit';
+import { ReactNode } from 'react';
 import { grey } from '../../utils/nounBgColors';
 
 export interface AlertModal {
   show: boolean;
-  title?: string;
-  message?: string;
+  title?: ReactNode;
+  message?: ReactNode;
 }
 
 interface ApplicationState {
diff --git a/yarn.lock b/yarn.lock
index 177d0b7d..91ff637b 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -191,6 +191,15 @@
     semver "^6.3.0"
     source-map "^0.5.0"
 
+"@babel/generator@^7.11.6":
+  version "7.17.9"
+  resolved "https://registry.yarnpkg.com/@babel/generator/-/generator-7.17.9.tgz#f4af9fd38fa8de143c29fce3f71852406fc1e2fc"
+  integrity sha512-rAdDousTwxbIxbz5I7GEQ3lUip+xVCXooZNbsydCWs3xA7ZsYOv+CFRdzGxRX78BmQHu9B1Eso59AOZQOJDEdQ==
+  dependencies:
+    "@babel/types" "^7.17.0"
+    jsesc "^2.5.1"
+    source-map "^0.5.0"
+
 "@babel/generator@^7.12.1", "@babel/generator@^7.16.0":
   version "7.16.0"
   resolved "https://registry.yarnpkg.com/@babel/generator/-/generator-7.16.0.tgz#d40f3d1d5075e62d3500bccb67f3daa8a95265b2"
@@ -329,6 +338,11 @@
   resolved "https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz#5ac822ce97eec46741ab70a517971e443a70c5a9"
   integrity sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==
 
+"@babel/helper-plugin-utils@^7.16.7":
+  version "7.16.7"
+  resolved "https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.16.7.tgz#aa3a8ab4c3cceff8e65eb9e73d87dc4ff320b2f5"
+  integrity sha512-Qg3Nk7ZxpgMrsox6HreY1ZNKdBq7K72tDSliA6dCl5f007jR4ne8iD5UzuNnCJH2xBf2BEEVGr+/OL6Gdp7RxA==
+
 "@babel/helper-remap-async-to-generator@^7.16.0", "@babel/helper-remap-async-to-generator@^7.16.4":
   version "7.16.4"
   resolved "https://registry.yarnpkg.com/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.16.4.tgz#5d7902f61349ff6b963e07f06a389ce139fbfe6e"
@@ -374,6 +388,11 @@
   resolved "https://registry.yarnpkg.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.15.7.tgz#220df993bfe904a4a6b02ab4f3385a5ebf6e2389"
   integrity sha512-K4JvCtQqad9OY2+yTU8w+E82ywk/fe+ELNlt1G8z3bVGlZfn/hOcQQsUhGhW/N+tb3fxK800wLtKOE/aM0m72w==
 
+"@babel/helper-validator-identifier@^7.16.7":
+  version "7.16.7"
+  resolved "https://registry.yarnpkg.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.16.7.tgz#e8c602438c4a8195751243da9031d1607d247cad"
+  integrity sha512-hsEnFemeiW4D08A5gUAZxLBTXpZ39P+a+DGDsHw1yxqyQ/jzFEnxf5uTEGp+3bzAbNOxU1paTgYS4ECU/IgfDw==
+
 "@babel/helper-validator-option@^7.12.1", "@babel/helper-validator-option@^7.14.5":
   version "7.14.5"
   resolved "https://registry.yarnpkg.com/@babel/helper-validator-option/-/helper-validator-option-7.14.5.tgz#6e72a1fff18d5dfcb878e1e62f1a021c4b72d5a3"
@@ -412,6 +431,11 @@
   resolved "https://registry.yarnpkg.com/@babel/parser/-/parser-7.16.4.tgz#d5f92f57cf2c74ffe9b37981c0e72fee7311372e"
   integrity sha512-6V0qdPUaiVHH3RtZeLIsc+6pDhbYzHR8ogA8w+f+Wc77DuXto19g2QUwveINoS34Uw+W8/hQDGJCx+i4n7xcng==
 
+"@babel/parser@^7.11.5":
+  version "7.17.9"
+  resolved "https://registry.yarnpkg.com/@babel/parser/-/parser-7.17.9.tgz#9c94189a6062f0291418ca021077983058e171ef"
+  integrity sha512-vqUSBLP8dQHFPdPi9bc5GK9vRkYHJ49fsZdtoJ8EQ8ibpwk5rPKfvNIwChB0KVXcIjcepEBBd2VHC5r9Gy8ueg==
+
 "@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression@^7.16.2":
   version "7.16.2"
   resolved "https://registry.yarnpkg.com/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression/-/plugin-bugfix-safari-id-destructuring-collision-in-function-expression-7.16.2.tgz#2977fca9b212db153c195674e57cfab807733183"
@@ -668,6 +692,13 @@
   dependencies:
     "@babel/helper-plugin-utils" "^7.8.0"
 
+"@babel/plugin-syntax-jsx@^7.10.4":
+  version "7.16.7"
+  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.16.7.tgz#50b6571d13f764266a113d77c82b4a6508bbe665"
+  integrity sha512-Esxmk7YjA8QysKeT3VhTXvF6y77f/a91SIs4pWb4H2eWGQkCKFgQaG6hdoEVZtGsrAcb2K5BW66XsOErD4WU3Q==
+  dependencies:
+    "@babel/helper-plugin-utils" "^7.16.7"
+
 "@babel/plugin-syntax-jsx@^7.16.0":
   version "7.16.0"
   resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.16.0.tgz#f9624394317365a9a88c82358d3f8471154698f1"
@@ -1311,6 +1342,13 @@
   dependencies:
     regenerator-runtime "^0.13.4"
 
+"@babel/runtime@^7.11.2":
+  version "7.17.9"
+  resolved "https://registry.yarnpkg.com/@babel/runtime/-/runtime-7.17.9.tgz#d19fbf802d01a8cb6cf053a64e472d42c434ba72"
+  integrity sha512-lSiBBvodq29uShpWGNbgFdKYNiFDo5/HIYsaCEY9ff4sb10x9jizo2+pRrSyF4jKZCXqgzuqBOQKbUm90gQwJg==
+  dependencies:
+    regenerator-runtime "^0.13.4"
+
 "@babel/template@^7.10.4", "@babel/template@^7.16.0", "@babel/template@^7.3.3":
   version "7.16.0"
   resolved "https://registry.yarnpkg.com/@babel/template/-/template-7.16.0.tgz#d16a35ebf4cd74e202083356fab21dd89363ddd6"
@@ -1343,6 +1381,14 @@
     "@babel/helper-validator-identifier" "^7.15.7"
     to-fast-properties "^2.0.0"
 
+"@babel/types@^7.11.5", "@babel/types@^7.17.0":
+  version "7.17.0"
+  resolved "https://registry.yarnpkg.com/@babel/types/-/types-7.17.0.tgz#a826e368bccb6b3d84acd76acad5c0d87342390b"
+  integrity sha512-TmKSNO4D5rzhL5bjWFcVHHLETzfQ/AmbKpKPOSjlP0WoHZ6L911fgoOKY4Alp/emzG4cHJdyN49zpgkbXFEHHw==
+  dependencies:
+    "@babel/helper-validator-identifier" "^7.16.7"
+    to-fast-properties "^2.0.0"
+
 "@bcoe/v8-coverage@^0.2.3":
   version "0.2.3"
   resolved "https://registry.yarnpkg.com/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz#75a2e8b51cb758a7553d6804a5932d7aace75c39"
@@ -1405,6 +1451,16 @@
     combined-stream "^1.0.8"
     mime-types "^2.1.12"
 
+"@endemolshinegroup/cosmiconfig-typescript-loader@^3.0.2":
+  version "3.0.2"
+  resolved "https://registry.yarnpkg.com/@endemolshinegroup/cosmiconfig-typescript-loader/-/cosmiconfig-typescript-loader-3.0.2.tgz#eea4635828dde372838b0909693ebd9aafeec22d"
+  integrity sha512-QRVtqJuS1mcT56oHpVegkKBlgtWjXw/gHNWO3eL9oyB5Sc7HBoc2OLG/nYpVfT/Jejvo3NUrD0Udk7XgoyDKkA==
+  dependencies:
+    lodash.get "^4"
+    make-error "^1"
+    ts-node "^9"
+    tslib "^2"
+
 "@ensdomains/ens@^0.4.4":
   version "0.4.5"
   resolved "https://registry.yarnpkg.com/@ensdomains/ens/-/ens-0.4.5.tgz#e0aebc005afdc066447c6e22feb4eda89a5edbfc"
@@ -3126,6 +3182,96 @@
     npmlog "^4.1.2"
     write-file-atomic "^2.3.0"
 
+"@lingui/babel-plugin-extract-messages@^3.13.2":
+  version "3.13.2"
+  resolved "https://registry.yarnpkg.com/@lingui/babel-plugin-extract-messages/-/babel-plugin-extract-messages-3.13.2.tgz#8cee6191de69b51f32ab8edd2bcc041041d2c7b8"
+  integrity sha512-SyvwfrPqkyj9XM2CB/YK25o0Zi+B8ikoCENwqNSk7201n80YfOJoksc6lQ3X/QODqvy+iuOsiQrVT3qzKblOmg==
+  dependencies:
+    "@babel/generator" "^7.11.6"
+    "@babel/runtime" "^7.11.2"
+    "@lingui/conf" "^3.13.2"
+    mkdirp "^1.0.4"
+
+"@lingui/cli@^3.9.0":
+  version "3.13.2"
+  resolved "https://registry.yarnpkg.com/@lingui/cli/-/cli-3.13.2.tgz#35c231d227162de29d8e4f724011b5c8d78f9dae"
+  integrity sha512-wPYlsKI7hx1hyntc6enUVUdKVwBM8XW+DnwHslWWw4ShMNvh98gLgAOW1ajXtUym7x0WTjhR+/s436hdxfZ/Og==
+  dependencies:
+    "@babel/generator" "^7.11.6"
+    "@babel/parser" "^7.11.5"
+    "@babel/plugin-syntax-jsx" "^7.10.4"
+    "@babel/runtime" "^7.11.2"
+    "@babel/types" "^7.11.5"
+    "@lingui/babel-plugin-extract-messages" "^3.13.2"
+    "@lingui/conf" "^3.13.2"
+    babel-plugin-macros "^3.0.1"
+    bcp-47 "^1.0.7"
+    chalk "^4.1.0"
+    chokidar "3.5.1"
+    cli-table "0.3.6"
+    commander "^6.1.0"
+    date-fns "^2.16.1"
+    fs-extra "^9.0.1"
+    fuzzaldrin "^2.1.0"
+    glob "^7.1.4"
+    inquirer "^7.3.3"
+    make-plural "^6.2.2"
+    messageformat-parser "^4.1.3"
+    micromatch "4.0.2"
+    mkdirp "^1.0.4"
+    node-gettext "^3.0.0"
+    normalize-path "^3.0.0"
+    ora "^5.1.0"
+    papaparse "^5.3.0"
+    pkg-up "^3.1.0"
+    plurals-cldr "^1.0.4"
+    pofile "^1.1.0"
+    pseudolocale "^1.1.0"
+    ramda "^0.27.1"
+
+"@lingui/conf@^3.13.2":
+  version "3.13.2"
+  resolved "https://registry.yarnpkg.com/@lingui/conf/-/conf-3.13.2.tgz#02f246e45a936882edaf5bc3af809b3ab67dce43"
+  integrity sha512-JhiIBxnh2X4QmLP0/+dnTBc7xnZ6qk5MRsQtJqkEOWGFl09CTrha5uPVqjr5MgkmBOQ6Q8+cRYWG+qtJsuUH5A==
+  dependencies:
+    "@babel/runtime" "^7.11.2"
+    "@endemolshinegroup/cosmiconfig-typescript-loader" "^3.0.2"
+    chalk "^4.1.0"
+    cosmiconfig "^7.0.0"
+    jest-validate "^26.5.2"
+    lodash.get "^4.4.2"
+
+"@lingui/core@^3.13.2", "@lingui/core@^3.9.0":
+  version "3.13.2"
+  resolved "https://registry.yarnpkg.com/@lingui/core/-/core-3.13.2.tgz#1c8b264c7eb5d7fa11c59916542bf5fc8e1b9309"
+  integrity sha512-ic1uC+bS7hpfM4oVugHKel8UhlLAwykSv2TYw3oyeEQhvCS232nSzh+PFbP0BXK1hZ0UdHve7mODpgADuwHIQA==
+  dependencies:
+    "@babel/runtime" "^7.11.2"
+    make-plural "^6.2.2"
+    messageformat-parser "^4.1.3"
+
+"@lingui/detect-locale@^3.13.2":
+  version "3.13.3"
+  resolved "https://registry.yarnpkg.com/@lingui/detect-locale/-/detect-locale-3.13.3.tgz#5afe43b590066dd3d7801542c5945ae35af62ac3"
+  integrity sha512-GhJKjnpGh5N0Y96XJNjeGOEiVyO7b0Kwddv8cY5ORA0yS0+gCETAdlECeP0YrJBrzIVUeddpQTyaexAUDmeY+A==
+
+"@lingui/macro@^3.9.0":
+  version "3.13.2"
+  resolved "https://registry.yarnpkg.com/@lingui/macro/-/macro-3.13.2.tgz#d62c02cf3fb7391962163a22b33c66d79df2873b"
+  integrity sha512-0BdybZkBq8bl4NrT8txX7k8BodyJ/4uQbMIK0ucPJvQ/6Lhj824CodBq5KuMWpcXoMSxUWjQIkIGr1Fi1ckLGg==
+  dependencies:
+    "@babel/runtime" "^7.11.2"
+    "@lingui/conf" "^3.13.2"
+    ramda "^0.27.1"
+
+"@lingui/react@^3.9.0":
+  version "3.13.2"
+  resolved "https://registry.yarnpkg.com/@lingui/react/-/react-3.13.2.tgz#8114af8c1636cbbdaf8583386f455fad8707506a"
+  integrity sha512-JW7irld6Qe5rJUzbmIMXPRAt1J3Ois3sTsfpNb1YR1Mt2B5WdzDMrv4NbJiRr+OyWXzvmhXzytme5OqJQUfc8g==
+  dependencies:
+    "@babel/runtime" "^7.11.2"
+    "@lingui/core" "^3.13.2"
+
 "@metamask/detect-provider@^1.2.0":
   version "1.2.0"
   resolved "https://registry.yarnpkg.com/@metamask/detect-provider/-/detect-provider-1.2.0.tgz#3667a7531f2a682e3c3a43eaf3a1958bdb42a696"
@@ -6127,6 +6273,15 @@ babel-plugin-macros@2.8.0:
     cosmiconfig "^6.0.0"
     resolve "^1.12.0"
 
+babel-plugin-macros@^3.0.1:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/babel-plugin-macros/-/babel-plugin-macros-3.1.0.tgz#9ef6dc74deb934b4db344dc973ee851d148c50c1"
+  integrity sha512-Cg7TFGpIr01vOQNODXOOaGz2NpCU5gl8x1qJFbb6hbZxR7XrcE2vtbAsTAbJ7/xwJtUuJEw8K8Zr/AE0LHlesg==
+  dependencies:
+    "@babel/runtime" "^7.12.5"
+    cosmiconfig "^7.0.0"
+    resolve "^1.19.0"
+
 babel-plugin-named-asset-import@^0.3.7:
   version "0.3.7"
   resolved "https://registry.yarnpkg.com/babel-plugin-named-asset-import/-/babel-plugin-named-asset-import-0.3.7.tgz#156cd55d3f1228a5765774340937afc8398067dd"
@@ -6629,6 +6784,15 @@ batch@0.6.1:
   resolved "https://registry.yarnpkg.com/batch/-/batch-0.6.1.tgz#dc34314f4e679318093fc760272525f94bf25c16"
   integrity sha1-3DQxT05nkxgJP8dgJyUl+UvyXBY=
 
+bcp-47@^1.0.7:
+  version "1.0.8"
+  resolved "https://registry.yarnpkg.com/bcp-47/-/bcp-47-1.0.8.tgz#bf63ae4269faabe7c100deac0811121a48b6a561"
+  integrity sha512-Y9y1QNBBtYtv7hcmoX0tR+tUNSFZGZ6OL6vKPObq8BbOhkCoyayF6ogfLTgAli/KuAEbsYHYUNq2AQuY6IuLag==
+  dependencies:
+    is-alphabetical "^1.0.0"
+    is-alphanumerical "^1.0.0"
+    is-decimal "^1.0.0"
+
 bcrypt-pbkdf@^1.0.0:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz#a4301d389b6a43f9b67ff3ca11a3f6637e360e9e"
@@ -6747,7 +6911,7 @@ bl@^3.0.0:
   dependencies:
     readable-stream "^3.0.1"
 
-bl@^4.0.3:
+bl@^4.0.3, bl@^4.1.0:
   version "4.1.0"
   resolved "https://registry.yarnpkg.com/bl/-/bl-4.1.0.tgz#451535264182bec2fbbc83a62ab98cf11d9f7b3a"
   integrity sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==
@@ -7641,7 +7805,7 @@ cli-cursor@^3.1.0:
   dependencies:
     restore-cursor "^3.1.0"
 
-cli-spinners@^2.2.0:
+cli-spinners@^2.2.0, cli-spinners@^2.5.0:
   version "2.6.1"
   resolved "https://registry.yarnpkg.com/cli-spinners/-/cli-spinners-2.6.1.tgz#adc954ebe281c37a6319bfa401e6dd2488ffb70d"
   integrity sha512-x/5fWmGMnbKQAaNwN+UZlV79qBLM9JFnJuJ03gIi5whrob0xV0ofNVHy9DhwGdsMJQc2OKv0oGmLzvaqvAVv+g==
@@ -7656,11 +7820,23 @@ cli-table3@^0.5.0, cli-table3@~0.5.0:
   optionalDependencies:
     colors "^1.1.2"
 
+cli-table@0.3.6:
+  version "0.3.6"
+  resolved "https://registry.yarnpkg.com/cli-table/-/cli-table-0.3.6.tgz#e9d6aa859c7fe636981fd3787378c2a20bce92fc"
+  integrity sha512-ZkNZbnZjKERTY5NwC2SeMeLeifSPq/pubeRoTpdr3WchLlnZg6hEgvHkK5zL7KNFdd9PmHN8lxrENUwI3cE8vQ==
+  dependencies:
+    colors "1.0.3"
+
 cli-width@^2.0.0:
   version "2.2.1"
   resolved "https://registry.yarnpkg.com/cli-width/-/cli-width-2.2.1.tgz#b0433d0b4e9c847ef18868a4ef16fd5fc8271c48"
   integrity sha512-GRMWDxpOB6Dgk2E5Uo+3eEBvtOOlimMmpbFiKuLFnQzYDavtLFY3K5ona41jgN/WdRZtG7utuVSVTL4HbZHGkw==
 
+cli-width@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/cli-width/-/cli-width-3.0.0.tgz#a2f48437a2caa9a22436e794bf071ec9e61cedf6"
+  integrity sha512-FxqpkPPwu1HjuN93Omfm4h8uIanXofW0RxVEW3k5RKx+mJJYSthzNhp32Kzxxy3YAEZ/Dc/EWN1vZRY0+kOhbw==
+
 cliui@^3.2.0:
   version "3.2.0"
   resolved "https://registry.yarnpkg.com/cliui/-/cliui-3.2.0.tgz#120601537a916d29940f934da3b48d585a39213d"
@@ -7813,7 +7989,7 @@ color@^3.0.0, color@^3.1.3, color@^3.2.1:
     color-convert "^1.9.3"
     color-string "^1.6.0"
 
-colors@1.0.x:
+colors@1.0.3, colors@1.0.x:
   version "1.0.3"
   resolved "https://registry.yarnpkg.com/colors/-/colors-1.0.3.tgz#0433f44d809680fdeb60ed260f1b0c262e82a40b"
   integrity sha1-BDP0TYCWgP3rYO0mDxsMJi6CpAs=
@@ -7857,6 +8033,11 @@ command-line-args@^4.0.7:
     find-replace "^1.0.3"
     typical "^2.6.1"
 
+commander@*:
+  version "9.2.0"
+  resolved "https://registry.yarnpkg.com/commander/-/commander-9.2.0.tgz#6e21014b2ed90d8b7c9647230d8b7a94a4a419a9"
+  integrity sha512-e2i4wANQiSXgnrBlIatyHtP1odfUp0BbV5Y5nEGbxtIrStkEOAAzCUirvLBNXHLr7kwLvJl6V+4V3XV9x7Wd9w==
+
 commander@3.0.2:
   version "3.0.2"
   resolved "https://registry.yarnpkg.com/commander/-/commander-3.0.2.tgz#6837c3fb677ad9933d1cfba42dd14d5117d6b39e"
@@ -7872,6 +8053,11 @@ commander@^4.1.1:
   resolved "https://registry.yarnpkg.com/commander/-/commander-4.1.1.tgz#9fd602bd936294e9e9ef46a3f4d6964044b18068"
   integrity sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==
 
+commander@^6.1.0:
+  version "6.2.1"
+  resolved "https://registry.yarnpkg.com/commander/-/commander-6.2.1.tgz#0792eb682dfbc325999bb2b84fddddba110ac73c"
+  integrity sha512-U7VdrJFnJgo4xjrHpTzu0yrHPGImdsmD95ZlgYSEajAn2JKzDhDTPG9kBTefmObL2w/ngeZnilk+OV9CG3d7UA==
+
 common-tags@^1.8.0:
   version "1.8.2"
   resolved "https://registry.yarnpkg.com/common-tags/-/common-tags-1.8.2.tgz#94ebb3c076d26032745fd54face7f688ef5ac9c6"
@@ -8664,6 +8850,11 @@ data-urls@^2.0.0:
     whatwg-mimetype "^2.3.0"
     whatwg-url "^8.0.0"
 
+date-fns@^2.16.1:
+  version "2.28.0"
+  resolved "https://registry.yarnpkg.com/date-fns/-/date-fns-2.28.0.tgz#9570d656f5fc13143e50c975a3b6bbeb46cd08b2"
+  integrity sha512-8d35hViGYx/QH0icHYCeLmsLmMUheMmTyV9Fcm6gvNwdw31yXXH+O85sOBJ+OLnLQMKZowvpKb6FgMIQjcpvQw==
+
 dateformat@^3.0.0:
   version "3.0.3"
   resolved "https://registry.yarnpkg.com/dateformat/-/dateformat-3.0.3.tgz#a6e37499a4d9a9cf85ef5872044d62901c9889ae"
@@ -10803,6 +10994,13 @@ figures@^2.0.0:
   dependencies:
     escape-string-regexp "^1.0.5"
 
+figures@^3.0.0:
+  version "3.2.0"
+  resolved "https://registry.yarnpkg.com/figures/-/figures-3.2.0.tgz#625c18bd293c604dc4a8ddb2febf0c88341746af"
+  integrity sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==
+  dependencies:
+    escape-string-regexp "^1.0.5"
+
 file-entry-cache@^6.0.1:
   version "6.0.1"
   resolved "https://registry.yarnpkg.com/file-entry-cache/-/file-entry-cache-6.0.1.tgz#211b2dd9659cb0394b073e7323ac3c933d522027"
@@ -11227,6 +11425,11 @@ functional-red-black-tree@^1.0.1, functional-red-black-tree@~1.0.1:
   resolved "https://registry.yarnpkg.com/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz#1b0ab3bd553b2a0d6399d29c0e3ea0b252078327"
   integrity sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc=
 
+fuzzaldrin@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/fuzzaldrin/-/fuzzaldrin-2.1.0.tgz#90204c3e2fdaa6941bb28d16645d418063a90e9b"
+  integrity sha1-kCBMPi/appQbso0WZF1BgGOpDps=
+
 ganache-cli@^6.11.0:
   version "6.12.2"
   resolved "https://registry.yarnpkg.com/ganache-cli/-/ganache-cli-6.12.2.tgz#c0920f7db0d4ac062ffe2375cb004089806f627a"
@@ -12582,6 +12785,25 @@ inquirer@^6.2.0:
     strip-ansi "^5.1.0"
     through "^2.3.6"
 
+inquirer@^7.3.3:
+  version "7.3.3"
+  resolved "https://registry.yarnpkg.com/inquirer/-/inquirer-7.3.3.tgz#04d176b2af04afc157a83fd7c100e98ee0aad003"
+  integrity sha512-JG3eIAj5V9CwcGvuOmoo6LB9kbAYT8HXffUl6memuszlwDC/qvFAJw49XJ5NROSFNPxp3iQg1GqkFhaY/CR0IA==
+  dependencies:
+    ansi-escapes "^4.2.1"
+    chalk "^4.1.0"
+    cli-cursor "^3.1.0"
+    cli-width "^3.0.0"
+    external-editor "^3.0.3"
+    figures "^3.0.0"
+    lodash "^4.17.19"
+    mute-stream "0.0.8"
+    run-async "^2.4.0"
+    rxjs "^6.6.0"
+    string-width "^4.1.0"
+    strip-ansi "^6.0.0"
+    through "^2.3.6"
+
 internal-ip@^4.3.0:
   version "4.3.0"
   resolved "https://registry.yarnpkg.com/internal-ip/-/internal-ip-4.3.0.tgz#845452baad9d2ca3b69c635a137acb9a0dad0907"
@@ -12800,6 +13022,19 @@ is-accessor-descriptor@^1.0.0:
   dependencies:
     kind-of "^6.0.0"
 
+is-alphabetical@^1.0.0:
+  version "1.0.4"
+  resolved "https://registry.yarnpkg.com/is-alphabetical/-/is-alphabetical-1.0.4.tgz#9e7d6b94916be22153745d184c298cbf986a686d"
+  integrity sha512-DwzsA04LQ10FHTZuL0/grVDk4rFoVH1pjAToYwBrHSxcrBIGQuXrQMtD5U1b0U2XVgKZCTLLP8u2Qxqhy3l2Vg==
+
+is-alphanumerical@^1.0.0:
+  version "1.0.4"
+  resolved "https://registry.yarnpkg.com/is-alphanumerical/-/is-alphanumerical-1.0.4.tgz#7eb9a2431f855f6b1ef1a78e326df515696c4dbf"
+  integrity sha512-UzoZUr+XfVz3t3v4KyGEniVL9BDRoQtY7tOyrRybkVNjDFWyo1yhXNGrrBTQxp3ib9BLAWs7k2YKBQsFRkZG9A==
+  dependencies:
+    is-alphabetical "^1.0.0"
+    is-decimal "^1.0.0"
+
 is-arguments@^1.0.4:
   version "1.1.1"
   resolved "https://registry.yarnpkg.com/is-arguments/-/is-arguments-1.1.1.tgz#15b3f88fda01f2a97fec84ca761a560f123efa9b"
@@ -12893,6 +13128,13 @@ is-core-module@^2.0.0, is-core-module@^2.2.0, is-core-module@^2.5.0, is-core-mod
   dependencies:
     has "^1.0.3"
 
+is-core-module@^2.8.1:
+  version "2.9.0"
+  resolved "https://registry.yarnpkg.com/is-core-module/-/is-core-module-2.9.0.tgz#e1c34429cd51c6dd9e09e0799e396e27b19a9c69"
+  integrity sha512-+5FPy5PnwmO3lvfMb0AsoPaBG+5KHUI0wYFXOtYPnVVVspTFUuMZNfNaNVRt3FZadstu2c8x23vykRW/NBoU6A==
+  dependencies:
+    has "^1.0.3"
+
 is-data-descriptor@^0.1.4:
   version "0.1.4"
   resolved "https://registry.yarnpkg.com/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz#0b5ee648388e2c860282e793f1856fec3f301b56"
@@ -12914,6 +13156,11 @@ is-date-object@^1.0.1:
   dependencies:
     has-tostringtag "^1.0.0"
 
+is-decimal@^1.0.0:
+  version "1.0.4"
+  resolved "https://registry.yarnpkg.com/is-decimal/-/is-decimal-1.0.4.tgz#65a3a5958a1c5b63a706e1b333d7cd9f630d3fa5"
+  integrity sha512-RGdriMmQQvZ2aqaQq3awNA6dCGtKpiDFcOzrTWrDAT2MiWrKQVPmxLGHl7Y2nNu6led0kEyoX0enY0qXYsv9zw==
+
 is-descriptor@^0.1.0:
   version "0.1.6"
   resolved "https://registry.yarnpkg.com/is-descriptor/-/is-descriptor-0.1.6.tgz#366d8240dde487ca51823b1ab9f07a10a78251ca"
@@ -13273,6 +13520,11 @@ is-typedarray@1.0.0, is-typedarray@^1.0.0, is-typedarray@~1.0.0:
   resolved "https://registry.yarnpkg.com/is-typedarray/-/is-typedarray-1.0.0.tgz#e479c80858df0c1b11ddda6940f96011fcda4a9a"
   integrity sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=
 
+is-unicode-supported@^0.1.0:
+  version "0.1.0"
+  resolved "https://registry.yarnpkg.com/is-unicode-supported/-/is-unicode-supported-0.1.0.tgz#3f26c76a809593b52bfa2ecb5710ed2779b522a7"
+  integrity sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==
+
 is-url@^1.2.4:
   version "1.2.4"
   resolved "https://registry.yarnpkg.com/is-url/-/is-url-1.2.4.tgz#04a4df46d28c4cff3d73d01ff06abeb318a1aa52"
@@ -13858,7 +14110,7 @@ jest-util@^26.6.0, jest-util@^26.6.2:
     is-ci "^2.0.0"
     micromatch "^4.0.2"
 
-jest-validate@^26.6.2:
+jest-validate@^26.5.2, jest-validate@^26.6.2:
   version "26.6.2"
   resolved "https://registry.yarnpkg.com/jest-validate/-/jest-validate-26.6.2.tgz#23d380971587150467342911c3d7b4ac57ab20ec"
   integrity sha512-NEYZ9Aeyj0i5rQqbq+tpIOom0YS1u2MVu6+euBsvpgIme+FOfRmoC4R5p0JiAUpaFvFy24xgrpMknarR/93XjQ==
@@ -14804,7 +15056,7 @@ lodash.flatten@^4.4.0:
   resolved "https://registry.yarnpkg.com/lodash.flatten/-/lodash.flatten-4.4.0.tgz#f31c22225a9632d2bbf8e4addbef240aa765a61f"
   integrity sha1-8xwiIlqWMtK7+OSt2+8kCqdlph8=
 
-lodash.get@^4.4.2:
+lodash.get@^4, lodash.get@^4.4.2:
   version "4.4.2"
   resolved "https://registry.yarnpkg.com/lodash.get/-/lodash.get-4.4.2.tgz#2d177f652fa31e939b4438d5341499dfa3825e99"
   integrity sha1-LRd/ZS+jHpObRDjVNBSZ36OCXpk=
@@ -14968,6 +15220,14 @@ log-symbols@4.0.0:
   dependencies:
     chalk "^4.0.0"
 
+log-symbols@^4.1.0:
+  version "4.1.0"
+  resolved "https://registry.yarnpkg.com/log-symbols/-/log-symbols-4.1.0.tgz#3fbdbb95b4683ac9fc785111e792e558d4abd503"
+  integrity sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==
+  dependencies:
+    chalk "^4.1.0"
+    is-unicode-supported "^0.1.0"
+
 loglevel@^1.6.8:
   version "1.8.0"
   resolved "https://registry.yarnpkg.com/loglevel/-/loglevel-1.8.0.tgz#e7ec73a57e1e7b419cb6c6ac06bf050b67356114"
@@ -15109,7 +15369,7 @@ make-dir@^3.0.0, make-dir@^3.0.2:
   dependencies:
     semver "^6.0.0"
 
-make-error@^1.1.1:
+make-error@^1, make-error@^1.1.1:
   version "1.3.6"
   resolved "https://registry.yarnpkg.com/make-error/-/make-error-1.3.6.tgz#2eb2e37ea9b67c4891f684a1394799af484cf7a2"
   integrity sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==
@@ -15131,6 +15391,11 @@ make-fetch-happen@^5.0.0:
     socks-proxy-agent "^4.0.0"
     ssri "^6.0.0"
 
+make-plural@^6.2.2:
+  version "6.2.2"
+  resolved "https://registry.yarnpkg.com/make-plural/-/make-plural-6.2.2.tgz#beb5fd751355e72660eeb2218bb98eec92853c6c"
+  integrity sha512-8iTuFioatnTTmb/YJjywkVIHLjcwkFD9Ms0JpxjEm9Mo8eQYkh1z+55dwv4yc1jQ8ftVBxWQbihvZL1DfzGGWA==
+
 makeerror@1.0.12:
   version "1.0.12"
   resolved "https://registry.yarnpkg.com/makeerror/-/makeerror-1.0.12.tgz#3e5dd2079a82e812e983cc6610c4a2cb0eaa801a"
@@ -15432,6 +15697,11 @@ mersenne-twister@^1.1.0:
   resolved "https://registry.yarnpkg.com/mersenne-twister/-/mersenne-twister-1.1.0.tgz#f916618ee43d7179efcf641bec4531eb9670978a"
   integrity sha1-+RZhjuQ9cXnvz2Qb7EUx65Zwl4o=
 
+messageformat-parser@^4.1.3:
+  version "4.1.3"
+  resolved "https://registry.yarnpkg.com/messageformat-parser/-/messageformat-parser-4.1.3.tgz#b824787f57fcda7d50769f5b63e8d4fda68f5b9e"
+  integrity sha512-2fU3XDCanRqeOCkn7R5zW5VQHWf+T3hH65SzuqRvjatBK7r4uyFa5mEX+k6F9Bd04LVM5G4/BHBTUJsOdW7uyg==
+
 methods@~1.1.2:
   version "1.1.2"
   resolved "https://registry.yarnpkg.com/methods/-/methods-1.1.2.tgz#5529a4d67654134edcc5266656835b0f851afcee"
@@ -15637,6 +15907,14 @@ micromark@^3.0.0:
     micromark-util-types "^1.0.1"
     uvu "^0.5.0"
 
+micromatch@4.0.2:
+  version "4.0.2"
+  resolved "https://registry.yarnpkg.com/micromatch/-/micromatch-4.0.2.tgz#4fcb0999bf9fbc2fcbdd212f6d629b9a56c39259"
+  integrity sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==
+  dependencies:
+    braces "^3.0.1"
+    picomatch "^2.0.5"
+
 micromatch@^3.1.10, micromatch@^3.1.4:
   version "3.1.10"
   resolved "https://registry.yarnpkg.com/micromatch/-/micromatch-3.1.10.tgz#70859bc95c9840952f359a068a3fc49f9ecfac23"
@@ -16358,6 +16636,13 @@ node-forge@^0.10.0:
   resolved "https://registry.yarnpkg.com/node-forge/-/node-forge-0.10.0.tgz#32dea2afb3e9926f02ee5ce8794902691a676bf3"
   integrity sha512-PPmu8eEeG9saEUvI97fm4OYxXVB6bFvyNTyiUOBichBpFG8A1Ljw3bY62+5oOjDEMHRnd0Y7HQ+x7uzxOzC6JA==
 
+node-gettext@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/node-gettext/-/node-gettext-3.0.0.tgz#6b3a253309aa1e53164646c6c644fcddd0d45c58"
+  integrity sha512-/VRYibXmVoN6tnSAY2JWhNRhWYJ8Cd844jrZU/DwLVoI4vBI6ceYbd8i42sYZ9uOgDH3S7vslIKOWV/ZrT2YBA==
+  dependencies:
+    lodash.get "^4.4.2"
+
 node-gyp-build@^4.2.0, node-gyp-build@^4.3.0:
   version "4.3.0"
   resolved "https://registry.yarnpkg.com/node-gyp-build/-/node-gyp-build-4.3.0.tgz#9f256b03e5826150be39c764bf51e993946d71a3"
@@ -16956,6 +17241,21 @@ ora@^4.0.0:
     strip-ansi "^6.0.0"
     wcwidth "^1.0.1"
 
+ora@^5.1.0:
+  version "5.4.1"
+  resolved "https://registry.yarnpkg.com/ora/-/ora-5.4.1.tgz#1b2678426af4ac4a509008e5e4ac9e9959db9e18"
+  integrity sha512-5b6Y85tPxZZ7QytO+BQzysW31HJku27cRIlkbAXaNx+BdcVi+LlRFmVXzeF6a7JCwJpyw5c4b+YSVImQIrBpuQ==
+  dependencies:
+    bl "^4.1.0"
+    chalk "^4.1.0"
+    cli-cursor "^3.1.0"
+    cli-spinners "^2.5.0"
+    is-interactive "^1.0.0"
+    is-unicode-supported "^0.1.0"
+    log-symbols "^4.1.0"
+    strip-ansi "^6.0.0"
+    wcwidth "^1.0.1"
+
 original@^1.0.0:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/original/-/original-1.0.2.tgz#e442a61cffe1c5fd20a65f3261c26663b303f25f"
@@ -17176,6 +17476,11 @@ pako@~1.0.5:
   resolved "https://registry.yarnpkg.com/pako/-/pako-1.0.11.tgz#6c9599d340d54dfd3946380252a35705a6b992bf"
   integrity sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==
 
+papaparse@^5.3.0:
+  version "5.3.2"
+  resolved "https://registry.yarnpkg.com/papaparse/-/papaparse-5.3.2.tgz#d1abed498a0ee299f103130a6109720404fbd467"
+  integrity sha512-6dNZu0Ki+gyV0eBsFKJhYr+MdQYAzFUGlBMNj3GNrmHxmz1lfRa24CjFObPXtjcetlOv5Ad299MhIK0znp3afw==
+
 parallel-transform@^1.1.0:
   version "1.2.0"
   resolved "https://registry.yarnpkg.com/parallel-transform/-/parallel-transform-1.2.0.tgz#9049ca37d6cb2182c3b1d2c720be94d14a5814fc"
@@ -17383,7 +17688,7 @@ path-key@^3.0.0, path-key@^3.1.0:
   resolved "https://registry.yarnpkg.com/path-key/-/path-key-3.1.1.tgz#581f6ade658cbba65a0d3380de7753295054f375"
   integrity sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==
 
-path-parse@^1.0.6:
+path-parse@^1.0.6, path-parse@^1.0.7:
   version "1.0.7"
   resolved "https://registry.yarnpkg.com/path-parse/-/path-parse-1.0.7.tgz#fbc114b60ca42b30d9daf5858e4bd68bbedb6735"
   integrity sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==
@@ -17484,6 +17789,11 @@ picomatch@^2.0.4, picomatch@^2.2.1, picomatch@^2.2.2, picomatch@^2.2.3:
   resolved "https://registry.yarnpkg.com/picomatch/-/picomatch-2.3.0.tgz#f1f061de8f6a4bf022892e2d128234fb98302972"
   integrity sha512-lY1Q/PiJGC2zOv/z391WOTD+Z02bCgsFfvxoXXf6h7kv9o+WmsmzYqrAwY63sNgOxE4xEdq0WyUnXfKeBrSvYw==
 
+picomatch@^2.0.5:
+  version "2.3.1"
+  resolved "https://registry.yarnpkg.com/picomatch/-/picomatch-2.3.1.tgz#3ba3833733646d9d3e4995946c1365a67fb07a42"
+  integrity sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==
+
 pify@^2.0.0, pify@^2.3.0:
   version "2.3.0"
   resolved "https://registry.yarnpkg.com/pify/-/pify-2.3.0.tgz#ed141a6ac043a849ea588498e7dca8b15330e90c"
@@ -17551,7 +17861,7 @@ pkg-dir@^4.1.0, pkg-dir@^4.2.0:
   dependencies:
     find-up "^4.0.0"
 
-pkg-up@3.1.0:
+pkg-up@3.1.0, pkg-up@^3.1.0:
   version "3.1.0"
   resolved "https://registry.yarnpkg.com/pkg-up/-/pkg-up-3.1.0.tgz#100ec235cc150e4fd42519412596a28512a0def5"
   integrity sha512-nDywThFk1i4BQK4twPQ6TA4RT8bDY96yeuCVBWL3ePARCiEKDRSrNGbFIgUJpLp+XeIR65v8ra7WuJOFUBtkMA==
@@ -17568,6 +17878,11 @@ pluralize@^8.0.0:
   resolved "https://registry.yarnpkg.com/pluralize/-/pluralize-8.0.0.tgz#1a6fa16a38d12a1901e0320fa017051c539ce3b1"
   integrity sha512-Nc3IT5yHzflTfbjgqWcCPpo7DaKy4FnpB0l/zCAW0Tc7jxAiuqSxHasntB3D7887LSrA93kDJ9IXovxJYxyLCA==
 
+plurals-cldr@^1.0.4:
+  version "1.0.4"
+  resolved "https://registry.yarnpkg.com/plurals-cldr/-/plurals-cldr-1.0.4.tgz#534e4784f80679d3b0b39b0fb6cc46645fcf5de8"
+  integrity sha512-4nLXqtel7fsCgzi8dvRZvUjfL8SXpP982sKg7b2TgpnR8rDnes06iuQ83trQ/+XdtyMIQkBBbKzX6x97eLfsJQ==
+
 pngjs@^3.3.0:
   version "3.4.0"
   resolved "https://registry.yarnpkg.com/pngjs/-/pngjs-3.4.0.tgz#99ca7d725965fb655814eaf65f38f12bbdbf555f"
@@ -17585,6 +17900,11 @@ pnp-webpack-plugin@1.6.4:
   dependencies:
     ts-pnp "^1.1.6"
 
+pofile@^1.1.0:
+  version "1.1.3"
+  resolved "https://registry.yarnpkg.com/pofile/-/pofile-1.1.3.tgz#e2c0d4052b9829f171b888bfb35c87791dbea297"
+  integrity sha512-sk96pUvpNwDV6PLrnhr68Uu1S5NohsxqLKz0GuracgrDo40BdF/r1RhHnjakUk6Q4Z0OKIybOQ7GevLKGN1iYw==
+
 popper.js@1.14.3:
   version "1.14.3"
   resolved "https://registry.yarnpkg.com/popper.js/-/popper.js-1.14.3.tgz#1438f98d046acf7b4d78cd502bf418ac64d4f095"
@@ -18590,6 +18910,13 @@ prr@~1.0.1:
   resolved "https://registry.yarnpkg.com/prr/-/prr-1.0.1.tgz#d3fc114ba06995a45ec6893f484ceb1d78f5f476"
   integrity sha1-0/wRS6BplaRexok/SEzrHXj19HY=
 
+pseudolocale@^1.1.0:
+  version "1.2.0"
+  resolved "https://registry.yarnpkg.com/pseudolocale/-/pseudolocale-1.2.0.tgz#787021d9a11abfdd8f084eabe0e59845ba571453"
+  integrity sha512-k0OQFvIlvpRdzR0dPVrrbWX7eE9EaZ6gpZtTlFSDi1Gf9tMy9wiANCNu7JZ0drcKgUri/39a2mBbH0goiQmrmQ==
+  dependencies:
+    commander "*"
+
 pseudomap@^1.0.1:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/pseudomap/-/pseudomap-1.0.2.tgz#f052a28da70e618917ef0a8ac34c1ae5a68286b3"
@@ -19783,6 +20110,15 @@ resolve@^1.1.6, resolve@^1.10.0, resolve@^1.12.0, resolve@^1.14.2, resolve@^1.17
     is-core-module "^2.2.0"
     path-parse "^1.0.6"
 
+resolve@^1.19.0:
+  version "1.22.0"
+  resolved "https://registry.yarnpkg.com/resolve/-/resolve-1.22.0.tgz#5e0b8c67c15df57a89bdbabe603a002f21731198"
+  integrity sha512-Hhtrw0nLeSrFQ7phPp4OOcVjLPIeMnRlr5mcnVuMe7M/7eBn98A3hmFRLoFo3DLZkivSYwhRUJTyPyWAk56WLw==
+  dependencies:
+    is-core-module "^2.8.1"
+    path-parse "^1.0.7"
+    supports-preserve-symlinks-flag "^1.0.0"
+
 resolve@^2.0.0-next.3:
   version "2.0.0-next.3"
   resolved "https://registry.yarnpkg.com/resolve/-/resolve-2.0.0-next.3.tgz#d41016293d4a8586a39ca5d9b5f15cbea1f55e46"
@@ -19953,7 +20289,7 @@ rsvp@^4.8.4:
   resolved "https://registry.yarnpkg.com/rsvp/-/rsvp-4.8.5.tgz#c8f155311d167f68f21e168df71ec5b083113734"
   integrity sha512-nfMOlASu9OnRJo1mbEk2cz0D56a1MBNrJ7orjRZQG10XDyuvwksKbuXNp6qa+kbn839HwjwhBzhFmdsaEAfauA==
 
-run-async@^2.2.0:
+run-async@^2.2.0, run-async@^2.4.0:
   version "2.4.1"
   resolved "https://registry.yarnpkg.com/run-async/-/run-async-2.4.1.tgz#8440eccf99ea3e70bd409d49aab88e10c189a455"
   integrity sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==
@@ -19977,7 +20313,7 @@ rustbn.js@~0.2.0:
   resolved "https://registry.yarnpkg.com/rustbn.js/-/rustbn.js-0.2.0.tgz#8082cb886e707155fd1cb6f23bd591ab8d55d0ca"
   integrity sha512-4VlvkRUuCJvr2J6Y0ImW7NvTCriMi7ErOAqWk1y69vAdoNIzCF3yPmgeNzx+RQTLEDFq5sHfscn1MwHxP9hNfA==
 
-rxjs@^6.4.0, rxjs@^6.5.3, rxjs@^6.6.3:
+rxjs@^6.4.0, rxjs@^6.5.3, rxjs@^6.6.0, rxjs@^6.6.3:
   version "6.6.7"
   resolved "https://registry.yarnpkg.com/rxjs/-/rxjs-6.6.7.tgz#90ac018acabf491bf65044235d5863c4dab804c9"
   integrity sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==
@@ -20699,7 +21035,7 @@ source-map-support@^0.4.15:
   dependencies:
     source-map "^0.5.6"
 
-source-map-support@^0.5.11, source-map-support@^0.5.13, source-map-support@^0.5.6, source-map-support@~0.5.12, source-map-support@~0.5.20:
+source-map-support@^0.5.11, source-map-support@^0.5.13, source-map-support@^0.5.17, source-map-support@^0.5.6, source-map-support@~0.5.12, source-map-support@~0.5.20:
   version "0.5.21"
   resolved "https://registry.yarnpkg.com/source-map-support/-/source-map-support-0.5.21.tgz#04fe7c7f9e1ed2d662233c28cb2b35b9f63f6e4f"
   integrity sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==
@@ -21284,6 +21620,11 @@ supports-hyperlinks@^2.0.0:
     has-flag "^4.0.0"
     supports-color "^7.0.0"
 
+supports-preserve-symlinks-flag@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz#6eda4bd344a3c94aea376d4cc31bc77311039e09"
+  integrity sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==
+
 svg-parser@^2.0.2:
   version "2.0.4"
   resolved "https://registry.yarnpkg.com/svg-parser/-/svg-parser-2.0.4.tgz#fdc2e29e13951736140b76cb122c8ee6630eb6b5"
@@ -21907,6 +22248,18 @@ ts-node@^10.0.0:
     make-error "^1.1.1"
     yn "3.1.1"
 
+ts-node@^9:
+  version "9.1.1"
+  resolved "https://registry.yarnpkg.com/ts-node/-/ts-node-9.1.1.tgz#51a9a450a3e959401bda5f004a72d54b936d376d"
+  integrity sha512-hPlt7ZACERQGf03M253ytLY3dHbGNGrAq9qIHWUY9XHYl1z7wYngSr3OQ5xmui8o2AaxsONxIzjafLUiWBo1Fg==
+  dependencies:
+    arg "^4.1.0"
+    create-require "^1.1.0"
+    diff "^4.0.1"
+    make-error "^1.1.1"
+    source-map-support "^0.5.17"
+    yn "3.1.1"
+
 ts-pnp@1.2.0, ts-pnp@^1.1.6:
   version "1.2.0"
   resolved "https://registry.yarnpkg.com/ts-pnp/-/ts-pnp-1.2.0.tgz#a500ad084b0798f1c3071af391e65912c86bca92"
@@ -21937,7 +22290,7 @@ tslib@^1.8.1, tslib@^1.9.0, tslib@^1.9.3:
   resolved "https://registry.yarnpkg.com/tslib/-/tslib-1.14.1.tgz#cf2d38bdc34a134bcaf1091c41f6619e2f672d00"
   integrity sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==
 
-tslib@^2.0.0, tslib@^2.0.3, tslib@^2.1.0, tslib@^2.3.0:
+tslib@^2, tslib@^2.0.0, tslib@^2.0.3, tslib@^2.1.0, tslib@^2.3.0:
   version "2.3.1"
   resolved "https://registry.yarnpkg.com/tslib/-/tslib-2.3.1.tgz#e8a335add5ceae51aa261d32a490158ef042ef01"
   integrity sha512-77EbyPPpMz+FRFRuAFlWMtmgUWGe9UOG2Z25NqCwiIjRhOf5iKGuzSe5P2w1laq+FkRy4p+PCuVkJSGkzTEKVw==
